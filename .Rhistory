library(multcomp)
# Install packages
install.packages(c('vegan', 'tidyverse'))
install.packages('reshape')
install.packages("ggpubr")
install.packages("car")
install.packages("agricolae")
install.packages("multcompView")
install.packages("gridExtra")
install.packages("ggplot2")
install.packages("ggtext")
install.packages("sjmisc")
install.packages("sjPlot")
install.packages("MASS")
install.packages("FSA")
install.packages('mvtnorm', dep = TRUE)
install.packages("rcompanion")
install.packages("onewaytests")
install.packages("PerformanceAnalytics")
install.packages("gvlma")
install.packages("ggpmisc")
install.packages("fitdistrplus")
install.packages('BiocManager')
install.packages("dplyr")
install.packages("lme4")
install.packages("nlme")
install.packages("car")
install.packages("multcomp")
install.packages("ape")
install.packages("car")
library(multcomp)
library(car)
library(BiocManager)
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(ggtext)
library(reshape)
library(ggpubr)
library(car)
library(agricolae)
library(multcompView)
library(grid)
library(gridExtra)
library(sjmisc)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(onewaytests)
library(ggsignif)
library(PerformanceAnalytics)
library(gvlma)
library(ggpmisc)
library(tibble)
library(fitdistrplus)
library(lme4)
library(nlme)
library(ape)
aob.adonis.rh.trt
library(devtools)
library(multcomp)
library(car)
library(BiocManager)
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(ggtext)
library(reshape)
library(ggpubr)
library(car)
library(agricolae)
library(multcompView)
library(grid)
library(gridExtra)
library(sjmisc)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(onewaytests)
library(ggsignif)
library(PerformanceAnalytics)
library(gvlma)
library(ggpmisc)
library(tibble)
library(fitdistrplus)
library(lme4)
library(nlme)
library(ape)
library(devtools)
library(multcomp)
library(car)
library(BiocManager)
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(ggtext)
library(reshape)
library(ggpubr)
library(car)
library(agricolae)
library(multcompView)
library(grid)
library(gridExtra)
library(sjmisc)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(onewaytests)
library(ggsignif)
library(PerformanceAnalytics)
library(gvlma)
library(ggpmisc)
library(tibble)
library(fitdistrplus)
library(lme4)
library(nlme)
library(ape)
dim(com.asv) # 686 192
library(multcomp)
library(car)
library(BiocManager)
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(ggtext)
library(reshape)
library(ggpubr)
library(car)
library(agricolae)
library(multcompView)
library(grid)
library(gridExtra)
library(sjmisc)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(onewaytests)
library(ggsignif)
library(PerformanceAnalytics)
library(gvlma)
library(ggpmisc)
library(tibble)
library(fitdistrplus)
library(lme4)
library(nlme)
library(ape)
library(devtools)
library(phyloseq)
# SET THE WORKING DIRECTORY
setwd('/Users/arifinabintarti/Documents/France/microservices/090623_COM_out/COM.ASV-analysis')
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/COM.ASV-analysis')
wd <- print(getwd())
# load the asv table
com.asv <- read.table('annotated.COM.ASVs.counts.tsv', sep='\t', header=T, row.names = 1, check.names = FALSE)
dim(com.asv) # 686 192
# remove the bad sample (sample # 26) from the OTU table
com.asv.sub <- com.asv[, -which(names(com.asv) == "26" )]
sort(rowSums(com.asv.sub, na.rm = FALSE, dims = 1), decreasing = FALSE)
dim(com.asv.sub)
# load the taxonomy table
setwd('/Users/arifinabintarti/Documents/France/microservices/090623_COM_out/')
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/')
com.tax <- read.table("besthit.diamond.output.curateddb.COM.ASVs.edited.csv", sep = ';', header=T)
dim(com.tax) # 680
# load the metadata
setwd('/Users/arifinabintarti/Documents/France/microservices/')
setwd('D:/Fina/INRAE_Project/microservices/')
meta_micro <- read.csv("meta_microservices.csv")
# remove the bad sample (sample # 26) from the metadata
meta_micro_sub <- meta_micro[-26,]
# load phylogenetic tree (nwk file)
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/COM-rooted-tree/')
COM_rooted_tree <- ape::read.tree("tree.nwk")
############################################################################
# rarefaction curve
set.seed(13)
rarecurve(t(com.asv), step=50, cex=0.5, lwd=2, ylab="ASV", label=F)
# re-order the rownames of the asv table to match the colnames of the metadata.
re_order <- match(rownames(meta_micro_sub), colnames(com.asv.sub))
com.asv.ord  <- com.asv.sub[ ,re_order]
com.asv.physeq = otu_table(com.asv.ord, taxa_are_rows = TRUE) # asv table
sample_names(com.asv.physeq)
# adding "S" for sample names to avoid possible problem later on
sample_names(com.asv.physeq) <- paste0("S", sample_names(com.asv.physeq))
# phyloseq object of the taxonomy table
com.tax <- column_to_rownames(com.tax, var = "ASVid")
#row.names(com.tax) <- com.tax$ASVid
com.tax.physeq = tax_table(as.matrix(com.tax)) # taxonomy table
# phyloseq object of the metadata
meta_micro_sub$Date <- factor(meta_micro_sub$Date, levels = c("4/28/22", "6/1/22", "7/5/22", "7/20/22", "9/13/22"),
labels = c("04-28-22", "06-01-22", "07-05-22", "07-20-22", "09-13-22"))
rownames(meta_micro_sub) <- sample_names(com.asv.physeq)
com.meta.physeq <- sample_data(meta_micro_sub)# meta data
sample_names(com.meta.physeq)
# read the rooted tree
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/COM-rooted-tree/')
COM_rooted_tree <- ape::read.tree("tree.nwk")
setwd('D:/Bioinformatics/AMOA-SEQ/090623_COM_out/COM.ASV-analysis/qiime2_tree/COM-rooted-tree/')
COM_rooted_tree <- ape::read.tree("tree.nwk")
COM_rooted_tree
# read the rooted tree
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/COM-rooted-tree/')
COM_rooted_tree <- ape::read.tree("tree.nwk")
# make phyloseq object
com.physeq <- merge_phyloseq(com.asv.physeq,com.tax.physeq,com.meta.physeq,COM_rooted_tree)
com.physeq
sample_data(com.physeq)$SampleID <- paste0("S", sample_data(com.physeq)$SampleID)
sample_data(com.physeq)
# run the ggrare function attached in the file "generating_rarecurve.r"
com.rare <- ggrare(com.physeq, step = 1, color = "Type", label = "SampleID", se = FALSE)
#devtools::install_github("gauravsk/ranacapa")
#install.packages("ranacapa")
library(ranacapa)
ggrare <- function(physeq_object, step = 10, label = NULL, color = NULL, plot = TRUE, parallel = FALSE, se = TRUE) {
x <- as(otu_table(physeq_object), "matrix")
if (taxa_are_rows(physeq_object)) { x <- t(x) }
## This script is adapted from vegan `rarecurve` function
tot <- rowSums(x)
S <- rowSums(x > 0)
nr <- nrow(x)
rarefun <- function(i) {
cat(paste("rarefying sample", rownames(x)[i]), sep = "\n")
n <- seq(1, tot[i], by = step)
if (n[length(n)] != tot[i]) {
n <- c(n, tot[i])
}
y <- vegan::rarefy(x[i, ,drop = FALSE], n, se = se)
if (nrow(y) != 1) {
rownames(y) <- c(".S", ".se")
return(data.frame(t(y), Size = n, Sample = rownames(x)[i]))
} else {
return(data.frame(.S = y[1, ], Size = n, Sample = rownames(x)[i]))
}
}
if (parallel) {
out <- parallel::mclapply(seq_len(nr), rarefun, mc.preschedule = FALSE)
} else {
out <- lapply(seq_len(nr), rarefun)
}
df <- do.call(rbind, out)
# Get sample data
if (!is.null(phyloseq::sample_data(physeq_object, FALSE))) {
sdf <- methods::as(phyloseq::sample_data(physeq_object), "data.frame")
sdf$Sample <- rownames(sdf)
data <- merge(df, sdf, by = "Sample")
labels <- data.frame(x = tot, y = S, Sample = rownames(x))
labels <- merge(labels, sdf, by = "Sample")
}
# Add, any custom-supplied plot-mapped variables
if ( length(color) > 1 ) {
data$color <- color
names(data)[names(data) == "color"] <- deparse(substitute(color))
color <- deparse(substitute(color))
}
if ( length(label) > 1 ) {
labels$label <- label
names(labels)[names(labels) == "label"] <- deparse(substitute(label))
label <- deparse(substitute(label))
}
p <- ggplot2::ggplot(data = data,
ggplot2::aes_string(x = "Size",
y = ".S",
group = "Sample",
color = color))
p <- p + ggplot2::labs(x = "Sequence Sample Size", y = "Species Richness")
#if (!is.null(label)) {
#p <- p + ggplot2::geom_text(data = labels,
#ggplot2::aes_string(x = "x",
#y = "y",
#label = label,
#color = color),
#size = 4, hjust = 0)
#}
p <- p + ggplot2::geom_line(ggplot2::aes_string(), size=1)
if (se) { ## add standard error if available
p <- p +
ggplot2::geom_ribbon(ggplot2::aes_string(ymin = ".S - .se",
ymax = ".S + .se",
color = NULL,
fill = color),
alpha = 0.2)
}
if (plot) {
plot(p)
}
invisible(p)
}
# run the ggrare function attached in the file "generating_rarecurve.r"
com.rare <- ggrare(com.physeq, step = 1, color = "Type", label = "SampleID", se = FALSE)
#set up your own color palette
Palette <- c("#FF7F00", "#662F00")
names(Palette) <- levels(sample_data(aoa.physeq)$Type)
Palette
#set up your own color palette
Palette <- c("#FF7F00", "#662F00")
names(Palette) <- levels(sample_data(com.physeq)$Type)
Palette
legend_title <- "Sample Type"
library(ggtext)
plot.com.rare <- com.rare +
theme_bw()+
scale_color_manual(legend_title,values = Palette, labels = c("Bulk Soil", "Rhizosphere"))+
scale_size_manual(values = 60)+
labs(title = "(b) AOA", )+
theme( strip.text.x = element_text(size=14, face='bold'),
axis.text.x=element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size =20 ,face='bold'),
axis.title.y = element_text(size=15,face="bold"),
axis.title.x = element_text(size=15,face="bold"),
legend.position = "right",
legend.title = element_text(size=15),
legend.text = element_text(size = 13),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ylab("Number of ASVs")+xlab("Reads")
plot.com.rare
plot.com.rare <- com.rare +
theme_bw()+
scale_color_manual(legend_title,values = Palette, labels = c("Bulk Soil", "Rhizosphere"))+
scale_size_manual(values = 60)+
labs(title = "(c) COMAMMOX", )+
theme( strip.text.x = element_text(size=14, face='bold'),
axis.text.x=element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size =20 ,face='bold'),
axis.title.y = element_text(size=15,face="bold"),
axis.title.x = element_text(size=15,face="bold"),
legend.position = "right",
legend.title = element_text(size=15),
legend.text = element_text(size = 13),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ylab("Number of ASVs")+xlab("Reads")
plot.com.rare
setwd('D:/Fina/INRAE_Project/microservices_fig/COM/')
ggsave("COM_rarecurve.tiff",
plot.com.rare, device = "tiff",
width = 10, height = 7,
units= "in", dpi = 600)
min(sample_sums(com.physeq)
)
sort(sample_sums(com.physeq), decreasing = F)
# rarefy to minimum sequencing depth (minimum reads =  reads)
set.seed(13)
com.rare.min.physeq <- rarefy_even_depth(com.physeq, sample.size = min(sample_sums(com.physeq)),
rngseed = 13, replace = FALSE, trimOTUs = TRUE, verbose = TRUE)
com.rare.min.physeq
sort(sample_sums(com.rare.min.physeq), decreasing = F) # 54 OTUs were removed because they are no longer present in any sample after random subsampling
# no sample removed
sort(rowSums(otu_table(com.rare.min.physeq), na.rm = FALSE, dims = 1), decreasing = F)
# run the ggrare function attached in the file "generating_rarecurve.r"
com.rare.min <- ggrare(com.rare.min.physeq, step = 1, color = "Type", label = "SampleID", se = FALSE)
# no sample removed
sort(rowSums(otu_table(com.rare.min.physeq), na.rm = FALSE, dims = 1), decreasing = F)
sort(sample_sums(com.physeq), decreasing = F)
# rarefy to minimum sequencing depth (minimum reads =  reads)
set.seed(13)
com.rare.min.physeq <- rarefy_even_depth(com.physeq, sample.size = 5242,
rngseed = 13, replace = FALSE, trimOTUs = TRUE, verbose = TRUE)
com.rare.min.physeq
sort(sample_sums(com.rare.min.physeq), decreasing = F) # 23 OTUs were removed because they are no longer present in any sample after random subsampling
# 1 sample removed (S52)
sort(rowSums(otu_table(com.rare.min.physeq), na.rm = FALSE, dims = 1), decreasing = F)
# run the ggrare function attached in the file "generating_rarecurve.r"
com.rare.min <- ggrare(com.rare.min.physeq, step = 1, color = "Type", label = "SampleID", se = FALSE)
#set up your own color palette
Palette <- c("#FF7F00", "#662F00")
names(Palette) <- levels(sample_data(com.rare.min.physeq)$Type)
Palette
legend_title <- "Sample Type"
# plot after rarefaction
library(ggtext)
plot.com.rare.min <- com.rare.min +
theme_bw()+
scale_color_manual(legend_title,values = Palette, labels = c("Bulk Soil", "Rhizosphere"))+
scale_size_manual(values = 60)+
labs(title = "(b) AOA", )+
theme( strip.text.x = element_text(size=14, face='bold'),
axis.text.x=element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size =20 ,face='bold'),
axis.title.y = element_text(size=15,face="bold"),
axis.title.x = element_text(size=15,face="bold"),
legend.position = "right",
legend.title = element_text(size=15),
legend.text = element_text(size = 13),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ylab("Number of ASVs") + xlab("Reads")
plot.com.rare.min <- com.rare.min +
theme_bw()+
scale_color_manual(legend_title,values = Palette, labels = c("Bulk Soil", "Rhizosphere"))+
scale_size_manual(values = 60)+
labs(title = "(c) COMAMMOX", )+
theme( strip.text.x = element_text(size=14, face='bold'),
axis.text.x=element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size =20 ,face='bold'),
axis.title.y = element_text(size=15,face="bold"),
axis.title.x = element_text(size=15,face="bold"),
legend.position = "right",
legend.title = element_text(size=15),
legend.text = element_text(size = 13),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ylab("Number of ASVs") + xlab("Reads")
plot.com.rare.min
setwd('D:/Fina/INRAE_Project/microservices_fig/COM/')
ggsave("COM_rarecurve_min.tiff",
plot.com.rare.min, device = "tiff",
width = 10, height = 7,
units= "in", dpi = 600)
colSums(otu_table(com.rare.min.physeq))
com.rare.asv.df <- as.data.frame(otu_table(com.rare.min.physeq))
dim(com.rare.asv.df) # 592 ASVs, 192 samples
com.rare.asv.df_pa <- 1*(com.rare.asv.df>0)
com.s <- specnumber(com.rare.asv.df, MARGIN = 2) # richness
com.richness <- as.data.frame(com.s)
com.h <- diversity(t(com.rare.asv.df), index = 'shannon') # Shannon index
com.shannon <- as.data.frame(com.h)
com.d <- diversity(t(com.rare.asv.df), index = 'simpson') # Simpson index
com.simpson <- as.data.frame(com.d)
com.inv.d <- diversity(t(com.rare.asv.df), index = 'invsimpson')
# Line plot of COM richness
com.meta.df <- data.frame(meta_micro_sub)
com.meta.df$Richness <- com.s
com.rare.min.physeq
View(meta_micro_sub)
# rarefy to minimum sequencing depth (minimum reads =  reads)
set.seed(13)
com.rare.min.physeq <- rarefy_even_depth(com.physeq, sample.size = 5242,
rngseed = 13, replace = FALSE, trimOTUs = TRUE, verbose = TRUE)
# Line plot of COM richness
meta_micro_sub <- meta_micro_sub[-52,]
View(meta_micro)
# Line plot of COM richness
meta_micro_sub <- meta_micro_sub %>% filter(SampleID != 52)
meta_micro <- read.csv("meta_microservices.csv")
setwd('D:/Fina/INRAE_Project/microservices/')
meta_micro <- read.csv("meta_microservices.csv")
# remove the bad sample (sample # 26) from the metadata
meta_micro_sub <- meta_micro[-26,]
setwd('D:/Fina/INRAE_Project/microservices/')
meta_micro <- read.csv("meta_microservices.csv")
# remove the bad sample (sample # 26) from the metadata
meta_micro_sub <- meta_micro[-26,]

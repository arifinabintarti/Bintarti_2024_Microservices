# run the final CAP by including PCoA axes showing the highest reclassification rate
set.seed(13)
aoa.cap.bulk <- CAPdiscrim(aoa.bulk_dist_bc ~ x, data = aoa.meta.bulk.ed, m = 44, permutations = 9999, add = TRUE) # 94.16667%
success <- cbind(data.frame(aoa.cap.bulk$group), data.frame(aoa.cap.bulk$CV))
colnames(success) <- c("source", "classified")
rownames(success) <- rownames(aoa.cap.bulk$PCoA)
success <- success[order(success$source), ]
success
aoa.cap1.BS <- paste("CAP1 (", round((100/sum(aoa.cap.bulk$lda.other$svd^2) * aoa.cap.bulk$lda.other$svd^2)[1],
digits = 1), "%)", sep = "")
aoa.cap2.BS <- paste("CAP2 (", round((100/sum(aoa.cap.bulk$lda.other$svd^2) * aoa.cap.bulk$lda.other$svd^2)[2],
digits = 1), "%)", sep = "")
cap.B.points <- aoa.cap.bulk$x[,1]
cap.points.B.df <- cap.B.points %>% as.data.frame() %>%
group_by(aoa.meta.bulk.ed$Irrigation, aoa.meta.bulk.ed$Treatment, aoa.meta.bulk.ed$Date) %>%
rename(c(value = ., Irrigation = 'aoa.meta.bulk.ed$Irrigation', Treatment = 'aoa.meta.bulk.ed$Treatment', Date =  'aoa.meta.bulk.ed$Date')) %>%
summarise(mean = mean(value),
sd = sd(value))
cap.points.B.df <- mutate(cap.points.B.df, x = paste(Irrigation, Treatment))
str(cap.points.B.df)
cap.points.B.df$Date <- factor(cap.points.B.df$Date, levels = c("Apr 28th", "Jun 1st", "Jul 5th", "Jul 20th", "Sept 13th"),
labels = c("2022-04-28", "2022-06-01", "2022-07-05", "2022-07-20", "2022-09-13"))
cap.points.B.df$Date <- as.Date(cap.points.B.df$Date)
cap.points.B.df$Date
ggplot(as.data.frame(aoa.cap.bulk$x), aes(x = aoa.cap.bulk$x[,1])) +
geom_density(aes(fill = aoa.meta.bulk.ed$Irrigation), alpha = 0.4) +
theme_classic() +
xlab(aoa.cap1.bulk)
cap.line.B <- ggplot(cap.points.B.df, aes(x = Date , y = mean, color = Treatment, group = x)) +
geom_point(size = 1.5) + theme_classic() +
geom_line(aes(linetype = Irrigation)) +
geom_ribbon(aes(ymin = mean - sd, ymax = mean + sd, fill = Treatment), linetype=0, alpha=0.05) +
xlab("") +
ylab("Mean of CAP1") +
scale_color_manual(values = c("#009E73", "#FF618C",  "#E69F00"),
name = "Cropping system",
labels = c("BIODYN", "CONFYM", "CONMIN")) +
theme(legend.position = "bottom") +
scale_fill_manual(values = c("#009E73", "#FF618C", "#E69F00"),
name = "Cropping system",
labels = c("BIODYN", "CONFYM", "CONMIN")) +
scale_linetype_manual(name = "Irrigation treatment",
labels = c("control", "drought-induced"),
values = c("solid", "dashed")) +
theme(axis.text.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 10, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 10, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.background = element_blank()) +
theme(legend.position = "bottom", legend.box="horizontal") +
theme(plot.margin = unit(c(0.5,1,0.5,0.5), "cm")) +
annotate(geom = "text", x = as.Date("2022-04-25"), y = -1.3, hjust = 0, size = 3, label = "100%", color = "#FF618C") +
annotate(geom = "text", x = as.Date("2022-04-25"), y = -2, hjust = 0, size = 3, label = "100%", color = "#009E73") +
annotate(geom = "text", x = as.Date("2022-04-25"), y = -0.98, hjust = 0, size = 3, label = "75%", color = "#E69F00") +
annotate(geom = "text", x = as.Date("2022-05-30"), y = -1.1, hjust = 0, size = 3, label = "100%", color = "#FF618C") +
annotate(geom = "text", x = as.Date("2022-05-30"), y = -1.4, hjust = 0, size = 3, label = "100%", color = "#009E73") +
annotate(geom = "text", x = as.Date("2022-05-30"), y = -0.3, hjust = 0, size = 3, label = "50%", color = "#E69F00") +
annotate(geom = "text", x = as.Date("2022-07-03"), y = -1.2, hjust = 0, size = 3, label = "100%", color = "#FF618C") +
annotate(geom = "text", x = as.Date("2022-07-03"), y = -1.8, hjust = 0, size = 3, label = "100%", color = "#009E73") +
annotate(geom = "text", x = as.Date("2022-07-03"), y = -0.55, hjust = 0, size = 3, label = "50%", color = "#E69F00") +
annotate(geom = "text", x = as.Date("2022-07-18"), y = -0.5, hjust = 0, size = 3, label = "75%", color = "#FF618C") +
annotate(geom = "text", x = as.Date("2022-07-18"), y = -1.8, hjust = 0, size = 3, label = "100%", color = "#009E73") +
annotate(geom = "text", x = as.Date("2022-07-18"), y = -0.1, hjust = 0, size = 3, label = "25%", color = "#E69F00") +
annotate(geom = "text", x = as.Date("2022-09-13"), y = -1.9, hjust = 0, size = 3, label = "100%", color = "#FF618C") +
annotate(geom = "text", x = as.Date("2022-09-13"), y = -1, hjust = 0, size = 3, label = "75%", color = "#009E73") +
annotate(geom = "text", x = as.Date("2022-09-13"), y = -1.3, hjust = 0, size = 3, label = "75%", color = "#E69F00") +
annotate(geom = "text", x = as.Date("2022-04-25"), y = 0.9, hjust = 0, size = 3, label = "75%", color = "#FF618C") +
annotate(geom = "text", x = as.Date("2022-04-25"), y = 1.45, hjust = 0, size = 3, label = "75%", color = "#009E73") +
annotate(geom = "text", x = as.Date("2022-04-25"), y = 0.3, hjust = 0, size = 3, label = "50%", color = "#E69F00") +
annotate(geom = "text", x = as.Date("2022-05-30"), y = 2, hjust = 0, size = 3, label = "75%", color = "black") +
annotate(geom = "text", x = as.Date("2022-07-03"), y = 0.4, hjust = 0, size = 3, label = "50%", color = "#FF618C") +
annotate(geom = "text", x = as.Date("2022-07-03"), y = 2, hjust = 0, size = 3, label = "75%", color = "#009E73") +
annotate(geom = "text", x = as.Date("2022-07-03"), y = 1.2, hjust = 0, size = 3, label = "75%", color = "#E69F00") +
annotate(geom = "text", x = as.Date("2022-07-18"), y = 1.8, hjust = 0, size = 3, label = "100%", color = "black") +
annotate(geom = "text", x = as.Date("2022-09-13"), y = 0.6, hjust = 0, size = 3, label = "75%", color = "#FF618C") +
annotate(geom = "text", x = as.Date("2022-09-13"), y = 1.9, hjust = 0, size = 3, label = "100%", color = "#009E73") +
annotate(geom = "text", x = as.Date("2022-09-13"), y = 1.3, hjust = 0, size = 3, label = "50%", color = "#E69F00") +
annotate(geom = "text", x = as.Date("2022-04-28"), y =-5, hjust = 0, size = 3.5, label = "Reclassification rate drought-induced: 76.67%", color = "black") +
annotate(geom = "text", x = as.Date("2022-04-28"), y =-5.4, hjust = 0, size = 3.5, label = "Reclassification rate control: 81.67%", color = "black") +
geom_vline(xintercept = as.Date("2022-07-14"), linetype="dashed", color = "black", linewidth = 0.5) +
annotate(geom = "text", x = as.Date("2022-07-10"), y = -5, hjust = 0, size = 3.5, label = "Rewetting", color = "black")
cap.line.B
success
library(datarium)
library(rstatix)
###########################################################################
# 1. Response variable: Richness
###########################################################################
# 1a. Analyses of Bulk Soil
aob.meta.bulk <- aob.meta.df.sub[1:119,]
library(lme4)
############################################################################################################
# Model Fit
set.seed(13)
aob.rich.bulk.mod2 <- lmerTest::lmer(aob.meta.bulk$Richness ~ Irrigation*Treatment*Date+(1|Block:Date), data=aob.meta.bulk, na.action=na.omit)
anova(aob.rich.bulk.mod2)
#If group sample sizes are (approximately) equal, run the three-way mixed ANOVA anyway because it is somewhat robust to heterogeneity of variance in these circumstances.
# Three-Way Mixed (Split-Plot) ANOVA
set.seed(13)
aob.bulk.rich.aov <- anova_test(
data = aob.meta.bulk, type=2, dv = Richness, wid = PlotID,
within = Date, between = c(Irrigation, Treatment))
get_anova_table(aob.bulk.rich.aov)
############################################################################################################
# Model Fit
set.seed(13)
aob.rich.bulk.mod2 <- lmerTest::lmer(aob.meta.bulk$Richness ~ Irrigation*Treatment*Date+(1|Block:Date), data=aob.meta.bulk, na.action=na.omit)
anova(aob.rich.bulk.mod2)
rich.bulk.mod2 <- lme4::lmer(aob.meta.bulk$Richness ~ Irrigation*Treatment*Date +(1|PlotID), data=aob.meta.bulk, na.action = na.omit)
anova(rich.bulk.mod2)
library(MuMIn)
install.package("MuMIn")
install.packages("MuMIn")
library(MuMIn)
r.squaredGLMM(aob.rich.bulk.mod2)
######################################################################
# 1b. Analyses of rhizosphere Soil
aob.meta.rh <- aob.meta.df.sub[120:191,]
# Model Fit
set.seed(13)
aob.rich.rhizo.mod2 <- lmerTest::lmer(aob.meta.rh$Richness ~ Irrigation*Treatment*Date +(1|Block:Date), data=aob.meta.rh)
anova(aob.rich.rhizo.mod2)
###########################################################################
# 1. Response variable: Richness
###########################################################################
# 1a. Analyses of Bulk Soil
aoa.meta.bulk <- aoa.meta.df[1:120,]
str(aoa.meta.bulk)
set.seed(13)
aoa.rich.bulk.mod2 <- lmerTest::lmer(aoa.meta.bulk$Richness ~ Irrigation*Treatment*Date+(1|Block:Date),
data=aoa.meta.bulk, na.action=na.omit)
anova(aoa.rich.bulk.mod2)
aoa.meta.rh <- aoa.meta.df[121:192,]
# Model Fit
set.seed(13)
aoa.rich.rhizo.mod2 <- lmerTest::lmer(aoa.meta.rh$Richness ~ Irrigation*Treatment*Date +(1|Block:Date), data=aoa.meta.rh)
anova(aoa.rich.rhizo.mod2)
# Model Fit
set.seed(13)
aoa.rich.rhizo.mod <- lmerTest::lmer(aoa.meta.rh$Richness ~ Irrigation*Treatment*Date +(1|PlotID), data=aoa.meta.rh)
anova(aoa.rich.rhizo.mod, type = 2)
###########################################################################
# 1. Response variable: Richness
###########################################################################
# 1a. Analyses of Bulk Soil
com.meta.bulk <- com.meta.df.ed[1:118,]
com.meta.df$x
com.meta.df.ed <- com.meta.df %>%
mutate(x = factor(x,levels = c("cont.D","rain.D","cont.K","rain.K","cont.M","rain.M")))
label <- c(`D` ="BIODYN (D)",
`K` ="CONFYM (K)",
`M` ="CONMIN (M)")
###########################################################################
# 1. Response variable: Richness
###########################################################################
# 1a. Analyses of Bulk Soil
com.meta.bulk <- com.meta.df.ed[1:118,]
str(com.meta.bulk)
############################################################################################################
# Model Fit
set.seed(13)
com.rich.bulk.mod2 <- lmerTest::lmer(com.meta.bulk$Richness ~ Irrigation*Treatment*Date+(1|Block:Date), data=com.meta.bulk, na.action=na.omit)
anova(com.rich.bulk.mod2)
# Fit pairwise comparisons
# Performs pairwise comparisons between groups using the estimated marginal means. Pipe-friendly wrapper around the functions emmeans() + contrast() from the emmeans package,
# 1. between fertilization treatment:
com.emm.rich.bulk <- com.meta.bulk.ed %>%
group_by(Date, Irrigation) %>%
emmeans_test(Richness ~ Treatment,
p.adjust.method = "BH",
conf.level = 0.95, model = com.rich.bulk.mod)
com.meta.rh <- com.meta.df.ed[119:190,]
# Model Fit
set.seed(13)
com.rich.rhizo.mod2 <- lmerTest::lmer(com.meta.rh$Richness ~ Irrigation*Treatment*Date+(1|Block:Date), data=com.meta.rh, na.action=na.omit)
anova(com.rich.rhizo.mod2)
###########################################################################
# 1. Response variable: Richness
###########################################################################
# 1a. Analyses of Bulk Soil
aob.meta.bulk <- aob.meta.df.sub[1:119,]
############################################################################################################
# Model Fit
set.seed(13)
aob.sha.bulk.mod2 <- lmerTest::lmer(aob.meta.bulk$Shannon ~ Irrigation*Treatment*Date +(1|Block:Date), data=aob.meta.bulk)
anova(aob.sha.bulk.mod2)
############################################################################################################
# Model Fit
set.seed(13)
sha.bulk.mod <- lmerTest::lmer(aob.meta.bulk$Shannon ~ Irrigation*Treatment*Date +(1|PlotID), data=aob.meta.bulk)
anova(sha.bulk.mod, type = 2)
aob.sha.bulk.mod2 <- lmerTest::lmer(aob.meta.bulk$Shannon ~ Irrigation*Treatment*Date +(1|Block:Date), data=aob.meta.bulk)
anova(aob.sha.bulk.mod2)
car::Anova(aob.sha.bulk.mod2)
summary(aob.sha.bulk.mod2)
#If group sample sizes are (approximately) equal, run the three-way mixed ANOVA anyway because it is somewhat robust to heterogeneity of variance in these circumstances.
# Three-Way Mixed (Split-Plot) ANOVA
str(aob.meta.rh)
aob.rh.sha.aov <- anova_test(
data = aob.meta.rh, type=3, dv = Shannon, wid = PlotID,
within = Date, between = c(Irrigation, Treatment))
get_anova_table(aob.rh.sha.aov)
############################################################################################################
# Model Fit
set.seed(13)
aob.sha.rh.mod2 <- lmerTest::lmer(aob.meta.rh$Shannon ~ Irrigation*Treatment*Date +(1|Block:Date), data=aob.meta.rh)
anova(aob.sha.rh.mod2)
############################################################################################################
# Model Fit
set.seed(13)
aoa.sha.bulk.mod2 <- lmerTest::lmer(aoa.meta.bulk$Shannon ~ Irrigation*Treatment*Date +(1|Date:Block), data=aoa.meta.bulk)
anova(aoa.sha.bulk.mod2)
############################################################################################################
# Model Fit
set.seed(13)
aoa.sha.rhizo.mod2 <- lmerTest::lmer(aoa.meta.rh$Shannon ~ Irrigation*Treatment*Date +(1|Block:Date), data=aoa.meta.rh)
anova(aoa.sha.rhizo.mod2)
############################################################################################################
# Model Fit
set.seed(13)
com.sha.bulk.mod2 <- lmerTest::lmer(com.meta.bulk$Shannon ~ Irrigation*Treatment*Date+(1|Block:Date), data=com.meta.bulk, na.action=na.omit)
anova(com.sha.bulk.mod2)
############################################################################################################
# Model Fit
set.seed(13)
com.sha.rh.mod2 <- lmerTest::lmer(com.meta.rh$Shannon ~ Irrigation*Treatment*Date+(1|Block:Date), data=com.meta.rh, na.action=na.omit)
anova(com.sha.rh.mod2)
str(qPCR.BS)
anova(t.16S)
# Linear mixed model
library(lmerTest)
# Intercept varying among block within sampling date.
# so we need a random effect enumerated by all of block by sampling date combinations
t.16S <- lmerTest::lmer(Tot_logDWS ~ irrigation*fertilization*sampling.date+
(1|sampling.date:block), data=qPCR.BS, na.action=na.omit)
anova(t.16S)
anova(t.16S)
### anova test for AOA/16S Ratio Percentage
# Linear mixed model
t.aoa.16.rat.percent <- lmerTest::lmer(AOA_16S_ratio_percent ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.BS, na.action=na.omit)
anova(t.aoa.16.rat.percent)
### anova test for AOA/16S Ratio Percentage
# Linear mixed model
t.aoa.16.rat.percent <- lmerTest::lmer(AOA_16S_ratio_percent ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.BS, na.action=na.omit)
anova(t.aoa.16.rat.percent)
# ** Transformation needed
### anova test for AOA/16S Ratio Arcsin
t.aoa <- lmerTest::lmer(AOA_16.arc.ratio ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.BS, na.action=na.omit)
anova(t.aoa)
#setwd('D:/Fina/INRAE_Project/microservices/qPCR_stat/Bulk Soil')
#write.csv(AOB_16.percent.ratio.pair.DF, file = "AOB_16_percent_ratio_pair.csv")
#**just checking
### anova test for AOB/16S Ratio Arcsin
# Linear mixed model
t.aob.16.rat.arcsin <- lmerTest::lmer(AOB_16.arc.ratio ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.BS, na.action=na.omit)
anova(t.aob.16.rat.arcsin)
### anova test for AOB/16S Ratio Percentage
# Linear mixed model
t.aob.16.rat.percent <- lmerTest::lmer(AOB_16S_ratio_percent ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.BS, na.action=na.omit)
anova(t.aob.16.rat.percent)
# test assumptions:
shapiro.test(resid(t.aob.16.rat.percent)) # normal
plot(simulateResiduals(t.aob.16.rat.percent)) # okay
anova(t.aob.16.rat.percent)
### anova test for AOB/16S Ratio Percentage
# Linear mixed model
t.aob.16.rat.percent <- lmerTest::lmer(AOB_16S_ratio_percent ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.BS, na.action=na.omit)
anova(t.aob.16.rat.percent)
### anova test for ComA/16S Ratio Arcsin
t.comA <- lmerTest::lmer(ComA_16.arc.ratio ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.BS, na.action=na.omit)
anova(t.comA)
#** I need data transformation
### anova test for ComB/16S Ratio Arcsin
t.comB=lmerTest::lmer(ComB_16.arc.ratio ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.BS, na.action=na.omit)
anova(t.comB)
#** I need data transformation
### anova test for AOA/AOB Ratio arcsin sqrt transformed
t.AOA_AOB <- lmerTest::lmer(AOA_AOB.arc.ratio ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.BS, na.action=na.omit)
anova(t.AOA_AOB)
anova(t.comA)
anova(t.comB)
#** I need data transformation
### anova test for AOA/AOB Ratio arcsin sqrt transformed
t.AOA_AOB <- lmerTest::lmer(AOA_AOB.arc.ratio ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.BS, na.action=na.omit)
anova(t.AOA_AOB)
### anova test for ComA/ComB Ratio without transformation
t.ComA_ComB <- lmerTest::lmer(ComA_ComB_ratio ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.BS, na.action=na.omit)
anova(t.ComA_ComB)
str(qPCR.RS)
#setwd('D:/Fina/INRAE_Project/microservices/')
setwd('/Users/arifinabintarti/Documents/France/microservices/')
qPCR <- read.csv("qPCR_results_LP_stat.csv")
qPCR.RS <- qPCR[121:192,]
str(qPCR.RS)
qPCR.RS$nr <- as.factor(qPCR.RS$nr)
qPCR.RS$plot <- as.factor(qPCR.RS$plot)
qPCR.RS$block <- as.factor(qPCR.RS$block)
qPCR.RS$irrigation <- as.factor(qPCR.RS$irrigation)
qPCR.RS$fertilization <- as.factor(qPCR.RS$fertilization)
qPCR.RS$type <- as.factor(qPCR.RS$type)
qPCR.RS$sampling.date <- as.factor(qPCR.RS$sampling.date)
qPCR.RS$var3 <- as.factor(qPCR.RS$var3)
qPCR.RS$x <- as.factor(qPCR.RS$x)
qPCR.RS$rep <- as.factor(qPCR.RS$rep)
qPCR.RS$sampling.date <- factor(qPCR.RS$sampling.date, levels = c("28/04/2022", "1/6/22", "5/7/22"),
labels = c("Apr 28th", "Jun 1st", "Jul 5th"))
# perform log transformation
qPCR.RS$AOA_logDNA <- log10(qPCR.RS$AOA_nbc_per_ngDNA)
qPCR.RS$AOB_logDNA <- log10(qPCR.RS$AOB_nbc_per_ngDNA)
qPCR.RS$ComA_logDNA <- log10(qPCR.RS$ComA_nbc_per_ngDNA)
qPCR.RS$ComB_logDNA <- log10(qPCR.RS$ComB_nbc_per_ngDNA)
qPCR.RS$Tot_logDNA <- log10(qPCR.RS$Tot_nbc_per_ngDNA)
# perform arcsin root square
qPCR.RS$AOA_16.arc.ratio.rh <- asin(sqrt(qPCR.RS$AOA_16S_ratio_percent / 100))
qPCR.RS$AOB_16.arc.ratio.rh <- asin(sqrt(qPCR.RS$AOB_16S_ratio_percent / 100))
qPCR.RS$ComA_16.arc.ratio.rh <- asin(sqrt(qPCR.RS$ComA_16S_ratio_percent / 100))
qPCR.RS$ComB_16.arc.ratio.rh <- asin(sqrt(qPCR.RS$ComB_16S_ratio_percent / 100))
qPCR.RS$AOA_AOB.arc.ratio.rh <- asin(sqrt(qPCR.RS$AOA_AOB_ratio / 100))
qPCR.RS$ComA_ComB.arc.ratio.rh <- asin(sqrt(qPCR.RS$ComA_ComB_ratio / 100))
t.tot.rh2=lmerTest::lmer(Tot_nbc_per_ngDNA ~ irrigation*fertilization*sampling.date+
(sampling.date|block),
data=qPCR.RS, na.action=na.omit)
anova(t.tot.rh2,t.tot.rh1)
t.tot.rh2=lmerTest::lmer(Tot_nbc_per_ngDNA ~ irrigation*fertilization*sampling.date+
(sampling.date|block),
data=qPCR.RS, na.action=na.omit)
anova(t.tot.rh2)
# test assumption
shapiro.test(resid(t.tot.rh2)) # not normal
plot(simulateResiduals(t.tot.rh2)) # not good
plot(simulateResiduals(t.tot.rh2)) # not good
# ** Transformation is not needed
# Pairwise comparison:
Tot.ngDNA.emm <- emmeans(t.tot.rh2, ~ irrigation | fertilization*sampling.date)
Tot.ngDNA.pair <- pairs(Tot.ngDNA.emm)
Tot.ngDNA.pair.DF <- as.data.frame(summary(Tot.ngDNA.pair))
View(Tot.ngDNA.pair.DF)
View(qPCR.RS)
# linear mixed model test for AOA/16S Percent Ratio
t.aoa_16S_percent.rh <- lmerTest::lmer(AOA_16S_ratio_percent ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.RS, na.action=na.omit)
anova(t.aoa_16S_percent.rh)
# test assumption
shapiro.test(resid(t.aoa_16S_percent.rh)) # normal
plot(simulateResiduals(t.aoa_16S_percent.rh)) # very good
#*** No need to do transformation
#Just checking
# linear mixed model test for AOA/16S Arcsin
t.aoa_16S.rh <- lmerTest::lmer(AOA_16.arc.ratio.rh ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.RS, na.action=na.omit)
anova(t.aoa_16S.rh)
# test assumption
shapiro.test(resid(t.aoa_16S.rh)) # normal
# test assumption
shapiro.test(resid(t.aoa_16S_percent.rh)) # normal
plot(simulateResiduals(t.aoa_16S.rh)) # okay
plot(simulateResiduals(t.aoa_16S_percent.rh)) # okay
anova(t.aoa_16S.rh)
anova(t.aoa_16S.rh)
#*** No need to do transformation
#Just checking
# linear mixed model test for AOA/16S Arcsin
t.aoa_16S.rh <- lmerTest::lmer(AOA_16.arc.ratio.rh ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.RS, na.action=na.omit)
anova(t.aoa_16S.rh)
# linear mixed model test for AOA/16S Percent Ratio
t.aoa_16S_percent.rh <- lmerTest::lmer(AOA_16S_ratio_percent ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.RS, na.action=na.omit)
anova(t.aoa_16S_percent.rh)
#*** No need to do transformation
# Pairwise comparison:
AOA_16S.percent.rat.rh.emm <- emmeans(t.aoa_16S_percent.rh, ~ irrigation | fertilization*sampling.date)
AOA_16S.percent.rat.rh.pair <- pairs(AOA_16S.percent.rat.rh.emm)
AOA_16S.percent.rat.rh.DF <- as.data.frame(summary(AOA_16S.percent.rat.rh.pair))
View(AOA_16S.percent.rat.rh.emm)
View(AOA_16S.percent.rat.rh.pair)
View(AOA_16S.percent.rat.rh.DF)
# test assumption
shapiro.test(resid(t.aoa_16S_percent.rh)) # normal
anova(t.aoa_16S_percent.rh)
# linear mixed model test for AOB/16S Percent Ratio
t.aob_16S_percent.rh <- lmerTest::lmer(AOB_16S_ratio_percent ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.RS, na.action=na.omit)
anova(t.aob_16S_percent.rh)
# test assumption
shapiro.test(resid(t.aob_16S_percent.rh)) # normal
View(t.aob_16S_percent.rh)
plot(simulateResiduals(t.aob_16S_percent.rh)) # okay
#setwd('D:/Fina/INRAE_Project/microservices/qPCR_stat/Rhizosphere')
#write.csv(AOB_16S.percent.rat.rh.DF, file = "AOB_16S.percent.rat.pair.rh.csv")
# Just Checking
# linear mixed model test for AOB/16S Arcsin
t.aob_16S_arcs.rh <- lmerTest::lmer(AOB_16.arc.ratio.rh ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.RS, na.action=na.omit)
anova(t.aob_16S_arcs.rh)
# test assumption
shapiro.test(resid(t.aob_16S_arcs.rh)) # normal
plot(simulateResiduals(t.aob_16S_arcs.rh)) # good
# Linear mixed model for ComA/16S Ratio in percent
t.comA_16S_percent.rh <- lmerTest::lmer(ComA_16S_ratio_percent ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.RS, na.action=na.omit)
anova(t.comA_16S_percent.rh)
# test assumption
shapiro.test(resid(t.comA_16S_percent.rh)) # normal
plot(simulateResiduals(t.comA_16S_percent.rh)) # good
#*** No need to do transformation
# Pairwise comparison:
ComA_16S.ratio.rh.emm <- emmeans(t.comA_16S_percent.rh, ~ irrigation | fertilization*sampling.date)
ComA_16S.ratio.rh.pair <- pairs(ComA_16S.ratio.rh.emm)
ComA_16S.ratio.rh.DF <- as.data.frame(summary(ComA_16S.ratio.rh.pair))
View(ComA_16S.ratio.rh.DF)
#setwd('D:/Fina/INRAE_Project/microservices/qPCR_stat/Rhizosphere')
#write.csv(ComA_16S.ratio.rh.DF, file = "ComA_16S_percent_ratio.pair.rh.csv")
# Just Checking
# linear mixed model for arcsin square root transformed ComA/16S Ratio
t.comA_16S_arcs.rh <- lmerTest::lmer(ComA_16.arc.ratio.rh ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.RS, na.action=na.omit)
anova(t.comA_16S_arcs.rh)
# test assumption
shapiro.test(resid(t.comA_16S_arcs.rh)) # normal
plot(simulateResiduals(t.comA_16S_arcs.rh)) # good
# Linear mixed model test for ComB/16S Ratio in percent
t.comB_16S_percent.rh <- lmerTest::lmer(ComB_16S_ratio_percent ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.RS, na.action=na.omit)
anova(t.comB_16S_percent.rh)
# test assumption
shapiro.test(resid(t.comB_16S_percent.rh)) # normal
plot(simulateResiduals(t.comB_16S_percent.rh)) # good
#*** No need to do data transformation
# Pairwise comparison:
ComB_16S.ratio.rh.emm <- emmeans(t.comB_16S_percent.rh, ~ irrigation | fertilization*sampling.date)
ComB_16S.ratio.rh.pair <- pairs(ComB_16S.ratio.rh.emm)
ComB_16S.ratio.rh.DF <- as.data.frame(summary(ComB_16S.ratio.rh.pair))
View(ComB_16S.ratio.rh.DF)
#setwd('D:/Fina/INRAE_Project/microservices/qPCR_stat/Rhizosphere')
#write.csv(ComB_16S.ratio.rh.DF, file = "ComB_16S_percent_ratio.pair.rh.csv")
# Just Checking
# Linear mixed model test for ComB/16S Arcsin Ratio
t.comB_16S_arc.rh <- lmerTest::lmer(ComB_16.arc.ratio.rh ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.RS, na.action=na.omit)
anova(t.comB_16S_arc.rh)
# test assumption
shapiro.test(resid(t.comB_16S_arc.rh)) # normal
plot(simulateResiduals(t.comB_16S_arc.rh)) # good
# Linear mixed model test for AOA/AOB Ratio on non transformed data
t.AOA_AOB_percent.rh <- lmerTest::lmer(AOA_AOB_ratio ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.RS, na.action=na.omit)
anova(t.AOA_AOB_percent.rh)
# test assumption
shapiro.test(resid(t.AOA_AOB_percent.rh)) # normal
plot(simulateResiduals(t.AOA_AOB_percent.rh)) # good
#***No need data transformation
# Pairwise comparison:
AOA_AOB.ratio.rh.emm <- emmeans(t.AOA_AOB_percent.rh, ~ irrigation | fertilization*sampling.date)
AOA_AOB.ratio.rh.pair <- pairs(AOA_AOB.ratio.rh.emm)
AOA_AOB.ratio.rh.DF <- as.data.frame(summary(AOA_AOB.ratio.rh.pair))
AOA_AOB.ratio.rh.DF
View(AOA_AOB.ratio.rh.DF)
#setwd('D:/Fina/INRAE_Project/microservices/qPCR_stat/Rhizosphere')
#write.csv(AOA_AOB.ratio.rh.DF, file = "AOA_AOB_ratio.pair.rh.csv")
# Just Checking
# Linear mixed model test for AOA/AOB Ratio on arcsin square root transformed data
t.AOA_AOB_arcsin.rh <- lmerTest::lmer(AOA_AOB.arc.ratio.rh ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.RS, na.action=na.omit)
anova(t.AOA_AOB_arcsin.rh)
# test assumption
shapiro.test(resid(t.AOA_AOB_arcsin.rh)) # normal
plot(simulateResiduals(t.AOA_AOB_arcsin.rh)) # okay
# Linear mixed model test for ComA/ComB Ratio on non transformed data
t.ComA_ComB_percent.rh <- lmerTest::lmer(ComA_ComB_ratio ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.RS, na.action=na.omit)
anova(t.ComA_ComB_percent.rh)
# test assumption
shapiro.test(resid(t.ComA_ComB_percent.rh)) # normal
plot(simulateResiduals(t.ComA_ComB_percent.rh)) # okay
#*** No need to do data transsformation
# Pairwise comparison:
ComA_ComB.ratio.rh.emm <- emmeans(t.ComA_ComB_percent.rh, ~ irrigation | fertilization*sampling.date)
ComA_ComB.ratio.rh.pair <- pairs(ComA_ComB.ratio.rh.emm)
ComA_ComB.ratio.rh.DF <- as.data.frame(summary(ComA_ComB.ratio.rh.pair))
ComA_ComB.ratio.rh.DF
View(ComA_ComB.ratio.rh.DF)
#setwd('D:/Fina/INRAE_Project/microservices/qPCR_stat/Rhizosphere')
#write.csv(ComA_ComB.ratio.rh.DF, file = "ComA_ComB_ratio.pair.rh.csv")
# Just checking
# linear mixed model test for ComA_ComB Ratio on arcsin square root transformed data
t.ComA_ComB_arcsin.rh <- lmerTest::lmer(ComA_ComB.arc.ratio.rh ~ irrigation*fertilization*sampling.date+
(1|block:sampling.date), data=qPCR.RS, na.action=na.omit)
anova(t.ComA_ComB_arcsin.rh)
# test assumption
shapiro.test(resid(t.ComA_ComB_arcsin.rh)) # not normal
plot(simulateResiduals(t.ComA_ComB_arcsin.rh)) # looks good actually
anova(t.aob_16S_percent.rh)
anova(t.comA_16S_percent.rh)
anova(t.comB_16S_percent.rh)
anova(t.AOA_AOB_percent.rh)
# test assumption
shapiro.test(resid(t.ComA_ComB_percent.rh)) # not normal
anova(t.ComA_ComB_percent.rh)

str(aob.asv.env)
aob.asv.env <- aob.asv.env %>%
dplyr::rename("Richness" = "AOB_Richness",
"Shannon" = "AOB_Shannon",
"InvSimpson" = "AOB_InvSimpson") # change column names
aob.asv.env <- aob.asv.env %>%
dplyr::rename("AOB_Richness" = "Richness",
"AOB_Shannon" = "Shannon",
"AOB_InvSimpson" = "InvSimpson") # change column names
str(aob.asv.env)
aob.asv.env <- aob.asv.env %>% mutate_at(c('GWC_g_g', 'TS', 'NH4', 'NO3', 'Nmin_tot', 'C_tot', 'N_tot', 'pH', 'K_mgkg', 'Mg_mgkg', 'P_mgkg','AOB_Richness'), as.numeric)
# create  a microtable
aob.microdata <- microtable$new(sample_table = aob.asv.env, otu_table = aob.asv.tab, tax_table = aob.asv.tax)
# calculate beta diversity
aob.microdata$tidy_dataset()
aob.microdata$cal_betadiv()
# perform mantel test
aob.t1 <- trans_env$new(dataset = aob.microdata, env_cols = c(13:19,22,26:28,41:42,44))
aob.t1$cal_mantel(use_measure = "bray",
partial_mantel = F,
add_matrix = NULL,
method = "spearman",
p_adjust_method = "fdr")
# extract a part of the results
aob.x1 <- data.frame(aob.t1$res_mantel) %>% .[, c(1, 2, 5, 7)]
aob.x1[aob.x1=="All"] <- "AOB"
# rename columns
colnames(aob.x1)  <- c("spec", "env", "r", "p.value")
View(aob.x1)
aoa.physeq_bulk <- subset_samples(aoa.rare.min.physeq, Type=="BS") #subset bulk soil from phyloseq object
aoa.physeq_bulk1 <- prune_taxa(taxa_sums(aoa.physeq_bulk)>0, aoa.physeq_bulk)
aoa.physeq_bulk1
aoa.asv.tab <- as.data.frame(otu_table(aoa.physeq_bulk1))
dim(aoa.asv.tab)
# taxonomy table AOB
aoa.asv.tax <- as.data.frame(tax_table(aoa.physeq_bulk1))
dim(aoa.asv.tax)
aoa.asv.tax$Group <- 'AOA'#adding a new column with AOA as value
# enviromental data
aoa.asv.env <- aoa.meta.df[1:120,]
str(aoa.asv.env)
aoa.asv.env <- aoa.asv.env %>%
dplyr::rename("AOA_Richness" = "Richness",
"AOA_Shannon" = "Shannon",
"AOA_InvSimpson" = "InvSimpson") # change column names
aoa.asv.env <- aoa.asv.env %>% mutate_at(c('GWC_g_g', 'TS', 'NH4', 'NO3', 'Nmin_tot', 'C_tot', 'N_tot', 'pH', 'K_mgkg', 'Mg_mgkg', 'P_mgkg','AOA_Richness'), as.numeric)
# create  a microtable
aoa.microdata <- microtable$new(sample_table = aoa.asv.env, otu_table = aoa.asv.tab, tax_table = aoa.asv.tax)
# calculate beta diversity
aoa.microdata$tidy_dataset()
aoa.microdata$cal_betadiv()
# perform mantel test
aoa.t1 <- trans_env$new(dataset = aoa.microdata, env_cols = c(13:19,22,26:28,41:42,44))
aoa.t1$cal_mantel(use_measure = "bray",
partial_mantel = F,
add_matrix = NULL,
method = "spearman",
p_adjust_method = "fdr")
# extract a part of the results
aoa.x1 <- data.frame(aoa.t1$res_mantel) %>% .[, c(1, 2, 5, 7)]
aoa.x1[aob.x1=="All"] <- "AOA"
# rename columns
colnames(aoa.x1)  <- c("spec", "env", "r", "p.value")
View(aoa.x1)
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/COM.ASV-analysis')
wd <- print(getwd())
# load the asv table
com.asv <- read.table('annotated.COM.ASVs.counts.tsv', sep='\t', header=T, row.names = 1, check.names = FALSE)
dim(com.asv) # 686 192
# remove the bad sample (sample # 26) from the OTU table
com.asv.sub <- com.asv[, -which(names(com.asv) == "26" )]
sort(rowSums(com.asv.sub, na.rm = FALSE, dims = 1), decreasing = FALSE)
dim(com.asv.sub)
# load the taxonomy table
#setwd('/Users/arifinabintarti/Documents/France/microservices/090623_COM_out/')
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/')
com.tax <- read.table("besthit.diamond.output.curateddb.COM.ASVs.edited.csv", sep = ';', header=T)
dim(com.tax) # 680
# load the metadata
#setwd('/Users/arifinabintarti/Documents/France/microservices/')
setwd('D:/Fina/INRAE_Project/microservices/')
meta_micro <- read.csv("meta_microservices.csv")
# remove the bad sample (sample # 26) from the metadata
meta_micro_sub <- meta_micro[-26,]
# load phylogenetic tree (nwk file)
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/COM-rooted-tree/')
COM_rooted_tree <- ape::read.tree("tree.nwk")
re_order <- match(rownames(meta_micro_sub), colnames(com.asv.sub))
com.asv.ord  <- com.asv.sub[ ,re_order]
com.asv.physeq = otu_table(com.asv.ord, taxa_are_rows = TRUE) # asv table
sample_names(com.asv.physeq)
# adding "S" for sample names to avoid possible problem later on
sample_names(com.asv.physeq) <- paste0("S", sample_names(com.asv.physeq))
# phyloseq object of the taxonomy table
com.tax <- column_to_rownames(com.tax, var = "ASVid")
#row.names(com.tax) <- com.tax$ASVid
com.tax.physeq = tax_table(as.matrix(com.tax)) # taxonomy table
# phyloseq object of the metadata
meta_micro_sub$Date <- factor(meta_micro_sub$Date, levels = c("4/28/22", "06/01/2022", "07/05/2022", "7/20/22", "9/13/22"),
labels = c("04-28-22", "06-01-22", "07-05-22", "07-20-22", "09-13-22"))
rownames(meta_micro_sub) <- sample_names(com.asv.physeq)
com.meta.physeq <- sample_data(meta_micro_sub)# meta data
sample_names(com.meta.physeq)
# read the rooted tree
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/COM-rooted-tree/')
COM_rooted_tree <- ape::read.tree("tree.nwk")
# make phyloseq object
com.physeq <- merge_phyloseq(com.asv.physeq,com.tax.physeq,com.meta.physeq,COM_rooted_tree)
com.physeq # 653 taxa
sample_data(com.physeq)$SampleID <- paste0("S", sample_data(com.physeq)$SampleID)
sample_data(com.physeq)
# rarefy to minimum sequencing depth (minimum reads =  reads)
set.seed(333)
com.rare.min.physeq <- rarefy_even_depth(com.physeq, sample.size = 5242,
rngseed = 333, replace = FALSE, trimOTUs = TRUE, verbose = TRUE)
com.rare.min.physeq #632 taxa
sort(sample_sums(com.rare.min.physeq), decreasing = F) # 21 OTUs were removed because they are no longer present in any sample after random subsampling
otu_table(com.rare.min.physeq)
colSums(otu_table(com.rare.min.physeq))
com.rare.asv.df <- as.data.frame(otu_table(com.rare.min.physeq))
dim(com.rare.asv.df) # 632 ASVs, 190 samples
com.rare.asv.df_pa <- 1*(com.rare.asv.df>0)
com.s <- specnumber(com.rare.asv.df, MARGIN = 2) # richness
com.richness <- as.data.frame(com.s)
com.h <- diversity(t(com.rare.asv.df), index = 'shannon') # Shannon index
com.shannon <- as.data.frame(com.h)
com.d <- diversity(t(com.rare.asv.df), index = 'simpson') # Simpson index
com.simpson <- as.data.frame(com.d)
com.inv.d <- diversity(t(com.rare.asv.df), index = 'invsimpson')
# Line plot of COM richness
meta_micro_sub2 <- meta_micro_sub %>% filter(SampleID != "52")
com.meta.df <- data.frame(meta_micro_sub2)
com.meta.df$Richness <- com.s
com.meta.df$Shannon <- com.h
com.meta.df$Simpson <- com.d
com.meta.df$InvSimpson <- com.inv.d
#com.min.meta.df$Date  <- as.Date(com.meta.df$Date , "%m/%d/%Y")
str(com.meta.df)
com.meta.df$Type <- factor(com.meta.df$Type, levels = c("BS", "RS"),
labels = c("Bulk Soil", "Rhizosphere"))
com.meta.df$Treatment <- factor(com.meta.df$Treatment, levels = c("D", "K", "M"),
labels = c("Biodynamic", "Conventional", "Mineral fertilized"))
com.meta.df$SampleID<-as.factor(com.meta.df$SampleID)
com.meta.df$PlotID<-as.factor(com.meta.df$PlotID)
com.meta.df$Irrigation<-as.factor(com.meta.df$Irrigation)
# tidy up the data frame
com.meta.df.tidy <- com.meta.df %>%
group_by(Irrigation, Treatment, Date, Type, var2,var3) %>%
summarize(Mean.Rich=mean(Richness),
Mean.Sha=mean(Shannon),
Mean.Simp=mean(Simpson),
Mean.invsimp=mean(InvSimpson))
str(com.meta.df.tidy)
View(com.meta.df.tidy)
View(com.meta.physeq)
View(com.meta.df)
################################################################################
# rarefied comammox ASV table of bulk soil
com.physeq_bulk <- subset_samples(com.rare.min.physeq, Type=="BS") #subset bulk soil from phyloseq object
com.physeq_bulk1 <- prune_taxa(taxa_sums(com.physeq_bulk)>0, com.physeq_bulk)
com.physeq_bulk1
aoa.physeq_bulk1
com.asv.tab <- as.data.frame(otu_table(com.physeq_bulk1))
dim(com.asv.tab)
# taxonomy table
com.asv.tax <- as.data.frame(tax_table(com.physeq_bulk1))
dim(com.asv.tax)
com.asv.tax$Group <- 'COM'#adding a new column with COM as value
# enviromental data
com.asv.env <- com.meta.df[1:120,]
View(com.asv.env)
# enviromental data
com.asv.env <- com.meta.df[1:118,]
str(com.asv.env)
com.asv.env <- com.asv.env %>%
dplyr::rename("COM_Richness" = "Richness",
"COM_Shannon" = "Shannon",
"COM_InvSimpson" = "InvSimpson") # change column names
com.asv.env <- com.asv.env %>% mutate_at(c('GWC_g_g', 'TS', 'NH4', 'NO3', 'Nmin_tot', 'C_tot', 'N_tot', 'pH', 'K_mgkg', 'Mg_mgkg', 'P_mgkg','COM_Richness'), as.numeric)
# create  a microtable
com.microdata <- microtable$new(sample_table = com.asv.env, otu_table = com.asv.tab, tax_table = com.asv.tax)
# calculate beta diversity
com.microdata$tidy_dataset()
com.microdata$cal_betadiv()
# create  a microtable
aob.microdata <- microtable$new(sample_table = aob.asv.env, otu_table = aob.asv.tab, tax_table = aob.asv.tax)
# calculate beta diversity
aob.microdata$tidy_dataset()
aob.microdata$cal_betadiv(method = "bray",
unifrac = F,
binary = F)
# perform mantel test
aob.t1 <- trans_env$new(dataset = aob.microdata, env_cols = c(13:19,22,26:28,41:42,44))
aob.t1$cal_mantel(use_measure = "bray",
partial_mantel = F,
add_matrix = NULL,
method = "spearman",
p_adjust_method = "fdr")
aob.t1$res_mantel
# perform mantel test
aob.t1 <- trans_env$new(dataset = aob.microdata, env_cols = c(13:19,22,26:28,41:42,44))
aob.t1$cal_mantel(use_measure = "bray",
partial_mantel = F,
add_matrix = NULL,
method = "Pearson",
p_adjust_method = "fdr")
# perform mantel test
aob.t1 <- trans_env$new(dataset = aob.microdata, env_cols = c(13:19,22,26:28,41:42,44))
aob.t1$cal_mantel(use_measure = "bray",
partial_mantel = F,
add_matrix = NULL,
method = "pearson",
p_adjust_method = "fdr")
aob.t1$res_mantel
# perform mantel test
aob.t1 <- trans_env$new(dataset = aob.microdata, env_cols = c(13:19,22,26:28,41:42,44))
aob.t1$cal_mantel(use_measure = "bray",
partial_mantel = F,
add_matrix = NULL,
method = "spearman",
p_adjust_method = "fdr")
aob.x1 <- data.frame(aob.t1$res_mantel) %>% .[, c(1, 2, 5, 7)]
aob.x1[aob.x1=="All"] <- "AOB"
# rename columns
colnames(aob.x1)  <- c("spec", "env", "r", "p.value")
# create  a microtable
aoa.microdata <- microtable$new(sample_table = aoa.asv.env, otu_table = aoa.asv.tab, tax_table = aoa.asv.tax)
# calculate beta diversity
aoa.microdata$tidy_dataset()
aoa.microdata$cal_betadiv(method = "bray",
unifrac = F,
binary = F)
# perform mantel test
aoa.t1 <- trans_env$new(dataset = aoa.microdata, env_cols = c(13:19,22,26:28,41:42,44))
aoa.t1$cal_mantel(use_measure = "bray",
partial_mantel = F,
add_matrix = NULL,
method = "spearman",
p_adjust_method = "fdr")
################################################################################
# rarefied comammox ASV table of bulk soil
com.physeq_bulk <- subset_samples(com.rare.min.physeq, Type=="BS") #subset bulk soil from phyloseq object
com.physeq_bulk1 <- prune_taxa(taxa_sums(com.physeq_bulk)>0, com.physeq_bulk)
com.physeq_bulk1
com.asv.tab <- as.data.frame(otu_table(com.physeq_bulk1))
dim(com.asv.tab)
# taxonomy table
com.asv.tax <- as.data.frame(tax_table(com.physeq_bulk1))
dim(com.asv.tax)
com.asv.tax$Group <- 'COM'#adding a new column with COM as value
# enviromental data
com.asv.env <- com.meta.df[1:118,]
str(com.asv.env)
com.asv.env <- com.asv.env %>%
dplyr::rename("COM_Richness" = "Richness",
"COM_Shannon" = "Shannon",
"COM_InvSimpson" = "InvSimpson") # change column names
com.asv.env <- com.asv.env %>% mutate_at(c('GWC_g_g', 'TS', 'NH4', 'NO3', 'Nmin_tot', 'C_tot', 'N_tot', 'pH', 'K_mgkg', 'Mg_mgkg', 'P_mgkg','COM_Richness'), as.numeric)
# create  a microtable
com.microdata <- microtable$new(sample_table = com.asv.env, otu_table = com.asv.tab, tax_table = com.asv.tax)
# calculate beta diversity
com.microdata$tidy_dataset()
com.microdata$cal_betadiv(method = "bray",
unifrac = F,
binary = F)
# perform mantel test
com.t1 <- trans_env$new(dataset = com.microdata, env_cols = c(13:19,22,26:28,41:42,44))
com.t1$cal_mantel(use_measure = "bray",
partial_mantel = F,
add_matrix = NULL,
method = "spearman",
p_adjust_method = "fdr")
com.t1$res_mantel
# extract a part of the results
com.x1 <- data.frame(com.t1$res_mantel) %>% .[, c(1, 2, 5, 7)]
com.x1[com.x1=="All"] <- "comammox"
# rename columns
colnames(com.x1)  <- c("spec", "env", "r", "p.value")
View(com.x1)
###############################################################################
# generate interval data
aob.x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
aob.x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
com.x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
###############################################################################
# generate interval data
aob.x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
aoa.x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
com.x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
View(com.x1)
# extract a part of the results
aob.x1 <- data.frame(aob.t1$res_mantel) %>% .[, c(1, 2, 5, 7)]
aob.x1[aob.x1=="All"] <- "AOB"
# rename columns
colnames(aob.x1)  <- c("spec", "env", "r", "p.value")
# extract a part of the results
aoa.x1 <- data.frame(aoa.t1$res_mantel) %>% .[, c(1, 2, 5, 7)]
aoa.x1[aob.x1=="All"] <- "AOA"
# rename columns
colnames(aoa.x1)  <- c("spec", "env", "r", "p.value")
# extract a part of the results
com.x1 <- data.frame(com.t1$res_mantel) %>% .[, c(1, 2, 5, 7)]
com.x1[com.x1=="All"] <- "comammox"
# rename columns
colnames(com.x1)  <- c("spec", "env", "r", "p.value")
###############################################################################
# generate interval data
aob.x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
aoa.x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
com.x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
# combine three tables
plot_table <- rbind(aob.x1, aoa.x1,com.x1)
View(plot_table)
# extract a part of the results
aoa.x1 <- data.frame(aoa.t1$res_mantel) %>% .[, c(1, 2, 5, 7)]
aoa.x1[aoa.x1=="All"] <- "AOA"
# rename columns
colnames(aoa.x1)  <- c("spec", "env", "r", "p.value")
# extract a part of the results
aob.x1 <- data.frame(aob.t1$res_mantel) %>% .[, c(1, 2, 5, 7)]
aob.x1[aob.x1=="All"] <- "AOB"
# rename columns
colnames(aob.x1)  <- c("spec", "env", "r", "p.value")
# extract a part of the results
com.x1 <- data.frame(com.t1$res_mantel) %>% .[, c(1, 2, 5, 7)]
com.x1[com.x1=="All"] <- "comammox"
# rename columns
colnames(com.x1)  <- c("spec", "env", "r", "p.value")
###############################################################################
# generate interval data
aob.x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
aoa.x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
com.x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
# combine three tables
plot_table <- rbind(aob.x1, aoa.x1,com.x1)
str(t1$data_env)
# plotting
setwd('D:/Fina/INRAE_Project/microservices/')
meta_micro <- read.csv("meta_microservices.csv")
View(meta_micro)
t1$data_env
aoa.t1$data_env
env <- aoa.t1$data_env
View(env)
View(aob.asv.env)
str(aob.asv.env)
env$AOB_Richness <- aob.asv.env$AOB_Richness
env <- merge(aob.asv.env, aoa.asv.env, com.asv.env)
quickcor(aoa.t1$data_env, type = "upper") +
geom_square() +
add_link(plot_table, mapping = aes(colour = pd, size = rd),
diag.label = TRUE) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288"))+
geom_diag_label() + remove_axis("x")
quickcor(aoa.t1$data_env, type = "upper") +
geom_square() +
add_link(plot_table, mapping = aes(colour = pd, size = rd),
diag.label = TRUE) +
#scale_size_manual(values = c(0.5, 1.5, 3)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288"))+
geom_diag_label() + remove_axis("x")
quickcor(aoa.t1$data_env, type = "upper") +
geom_square() +
add_link(plot_table, mapping = aes(colour = pd, size = rd),
diag.label = TRUE) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288"))+
guides(size = guide_legend(title = "Mantel's r", override.aes = list(colour = "grey35"), order = 2),
colour = guide_legend(title = "Mantel's p", override.aes = list(size = 3), order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))+
geom_diag_label() + remove_axis("x")
quickcor(aoa.t1$data_env, type = "upper") +
geom_square() +
add_link(plot_table, mapping = aes(colour = pd, size = rd))+
#diag.label = TRUE) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288"))+
guides(size = guide_legend(title = "Mantel's r", override.aes = list(colour = "grey35"), order = 2),
colour = guide_legend(title = "Mantel's p", override.aes = list(size = 3), order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))+
geom_diag_label() + remove_axis("x")
quickcor(aoa.t1$data_env, type = "upper") +
geom_square() +
geom_mark(sig.thres = 0.05, markonly = TRUE, color = "white") +
add_link(plot_table, mapping = aes(colour = pd, size = rd),
diag.label = TRUE) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288"))+
guides(size = guide_legend(title = "Mantel's r", override.aes = list(colour = "grey35"), order = 2),
colour = guide_legend(title = "Mantel's p", override.aes = list(size = 3), order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))+
geom_diag_label() + remove_axis("x")
# cobine two tables
tb <- rbind(x1, x2)
x2 <- data.frame(spec = "Bacteroidetes", t2$res_mantel) %>% .[, c(1, 3, 6, 8)]
# rename columns
colnames(x1) <- colnames(x2) <- c("spec", "env", "r", "p.value")
# generate interval data
x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
x2 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
# cobine two tables
tb <- rbind(x1, x2)
View(tb)
View(plot_table)
data("varechem")
data("varespec")
set.seed(20191224)
sam_grp <- sample(paste0("sample", 1:3), 24, replace = TRUE)
mantel01 <- fortify_mantel(varespec, varechem, group = sam_grp,
spec.select = list(spec01 = 1:5,
spec02 = 6:12,
spec03 = 7:18,
spec04 = 20:29,
spec05 = 30:44),
mantel.fun = "mantel.randtest")
quickcor(mantel01, legend.title = "Mantel's r") +
geom_colour() + geom_cross() + facet_grid(rows = vars(.group))
mantel02 <- fortify_mantel(varespec, varechem,
spec.select = list(1:10, 5:14, 7:22, 9:32)) %>%
mutate(r = cut(r, breaks = c(-Inf, 0.25, 0.5, Inf),
labels = c("<0.25", "0.25-0.5", ">=0.5"),
right = FALSE),
p.value = cut(p.value, breaks = c(-Inf, 0.001, 0.01, 0.05, Inf),
labels = c("<0.001", "0.001-0.01", "0.01-0.05", ">=0.05"),
right = FALSE))
View(mantel02)
View(plot_table)
quickcor(varechem, type = "upper") + geom_square() +
add_link(mantel02, mapping = aes(colour = p.value, size = r),
diag.label = TRUE) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
geom_diag_label() + remove_axis("x")
quickcor(t1$data_env, type = "upper") +
geom_square() +
add_link(plot_table, mapping = aes(colour = pd, size = rd),
diag.label = TRUE) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288"))+
geom_diag_label() + remove_axis("x")
quickcor(t1$data_env, type = "upper") +
geom_square() +
add_link(tb, mapping = aes(colour = pd, size = rd),
diag.label = TRUE) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288"))+
geom_diag_label() + remove_axis("x")
quickcor(aoa.t1$data_env, type = "upper") +
geom_square() +
geom_mark(sig.thres = 0.05, markonly = TRUE, color = "white") +
add_link(plot_table, mapping = aes(colour = pd, size = rd),
diag.label = TRUE) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288"))+
guides(size = guide_legend(title = "Mantel's r", override.aes = list(colour = "grey35"), order = 2),
colour = guide_legend(title = "Mantel's p", override.aes = list(size = 3), order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))
quickcor(aoa.t1$data_env, type = "upper") +
geom_square() +
#geom_mark(sig.thres = 0.05, markonly = TRUE, color = "white") +
add_link(plot_table, mapping = aes(colour = pd, size = rd),
diag.label = TRUE) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288"))+
guides(size = guide_legend(title = "Mantel's r", override.aes = list(colour = "grey35"), order = 2),
colour = guide_legend(title = "Mantel's p", override.aes = list(size = 3), order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))
quickcor(aoa.t1$data_env, type = "upper") +
geom_square() +
#geom_mark(sig.thres = 0.05, markonly = TRUE, color = "white") +
add_link(plot_table, mapping = aes(colour = pd, size = rd),
diag.label = TRUE) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288"))+
guides(size = guide_legend(title = "Mantel's r", override.aes = list(colour = "grey35"), order = 2),
colour = guide_legend(title = "Mantel's p", override.aes = list(size = 3), order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))
# plotting
env <- aoa.t1$data_env
View(env)
env$AOB_Richness <- aob.asv.env$AOB_Richness
com.asv
com.s
aob.asv.env$AOB_Richness
str(aob.asv.env$AOB_Richness)
aoa.asv.env
aoa.t1$data_env
aoa.env <- aoa.t1$data_env
aob.env <- aob.t1$data_env
com.env <- com.t1$data_env
View(aoa.env)
aoa.env <- row_to_column(aoa.env, var = "ASVid")
aoa.env <- rownames_to_column(aoa.env, var = "ASVid")
View(aoa.env)
aoa.env <- aoa.t1$data_env
aoa.env <- rownames_to_column(aoa.env, var = "ID")
aob.env <- rownames_to_column(aob.env, var = "ID")
com.env <- rownames_to_column(com.env, var = "ID")

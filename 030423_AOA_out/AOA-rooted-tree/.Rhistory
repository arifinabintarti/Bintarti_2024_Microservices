aob.asv.rare1k <- as.data.frame(otu_table(aob.rare.1282.seq))
aob.asv.bulk <- aob.asv.rare1k[,1:119]
aob.asv.bulk1 <- aob.asv.bulk[rowSums(aob.asv.bulk)>0,]
sort(rowSums(aob.asv.bulk1, na.rm = FALSE, dims = 1), decreasing = FALSE)
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out/')
#write.csv(aob.asv.bulk1, file = "aob.bulk1.otutab.csv")
aob.bulk_dist_bc <- vegdist(t(aob.asv.bulk1), method = "bray")
# jaccard - Bulk Soil :
aob.bulk_dist_jac <- vegdist(t(aob.asv.bulk1), binary = TRUE, method = "jaccard")
# Weighted UniFrac (rarefied) - Bulk Soil:
aob.physeq_bulk <- subset_samples(aob.rare.1282.seq, Type=="BS")
aob.physeq_bulk1 <- prune_taxa(taxa_sums(aob.physeq_bulk)>0, aob.physeq_bulk)
aob.physeq_bulk1
sort(taxa_sums(aob.physeq_bulk1), decreasing =F) #checking
aob.bulk_dist_wUF <- UniFrac(aob.physeq_bulk1, weighted=TRUE, normalized = TRUE)
aob.bulk_dist_wUF
# Unweighted UniFrac (rarefied) -  Bulk Soil:
aob.bulk_dist_uwUF <- UniFrac(aob.physeq_bulk1, weighted=FALSE, normalized = TRUE)
aob.bulk_dist_uwUF
# 2. CMD/classical multidimensional scaling (MDS) of a data matrix. Also known as principal coordinates analysis
# Bray-Curtis - Bulk Soil:
aob.bulk_pcoa_bc <- cmdscale(aob.bulk_dist_bc, eig=T)
# Jaccard - Bulk Soil:
aob.bulk_pcoa_jac <- cmdscale(aob.bulk_dist_jac, eig=T)
# Weighted UniFrac - Bulk Soil:
aob.bulk_pcoa_wUF <- cmdscale(aob.bulk_dist_wUF, eig=T)
# Unweighted UniFrac - Bulk Soil:
aob.bulk_pcoa.uwUF <- cmdscale(aob.bulk_dist_uwUF, eig=T)
# 3. scores of PC1 and PC2
# Bray-Curtis - Bulk Soil:
ax1.scores.bulk <- aob.bulk_pcoa_bc$points[,1]
ax2.scores.bulk <- aob.bulk_pcoa_bc$points[,2]
# Jaccard - Bulk Soil:
ax1.scores.j.bulk <- aob.bulk_pcoa_jac$points[,1]
ax2.scores.j.bulk <- aob.bulk_pcoa_jac$points[,2]
# Weighted UniFrac - Bulk Soil:
ax1.scores.wUF.bulk <- aob.bulk_pcoa_wUF$points[,1]
ax2.scores.wUF.bulk <- aob.bulk_pcoa_wUF$points[,2]
# Unweighted UniFrac - Bulk Soil:
ax1.scores.uwUF.bulk <- aob.bulk_pcoa.uwUF$points[,1]
ax2.scores.uwUF.bulk <- aob.bulk_pcoa.uwUF$points[,2]
# 4. Envfit
env.aob.bulk <- aob.meta.df.sub[1:119,c(14:20, 23,27:29)]
str(env.aob.bulk)
env.aob.bulk <- env.aob.bulk %>% mutate_at(c('GWC_g_g', 'TS', 'NH4', 'NO3', 'Nmin_tot', 'C_tot', 'N_tot', 'pH', 'K_mgkg', 'Mg_mgkg', 'P_mgkg'), as.numeric)
# bray-curtis
set.seed(149)
env_fit.aob.bc.bulk <- envfit(aob.bulk_pcoa_bc, env.aob.bulk, na.rm=TRUE)
env_fit.aob.bc.bulk
# Jaccard
env_fit.aob.jac <- envfit(aob.bulk_pcoa_jac, env.aob.bulk, na.rm=TRUE)
# Weighted UniFrac
env_fit.aob.wuF <- envfit(aob.bulk_pcoa_wUF, env.aob.bulk, na.rm=TRUE)
# UnWeighted UniFrac
env_fit.aob.uwuF <- envfit(aob.bulk_pcoa.uwUF, env.aob.bulk, na.rm=TRUE)
# 5. calculate percent variance explained, then add to plot
aob.meta.bulk <- aob.meta.df.sub[1:119,]
# Bray-curtis - Bulk Soil:
ax1.bulk <- aob.bulk_pcoa_bc$eig[1]/sum(aob.bulk_pcoa_bc$eig)
ax2.bulk <- aob.bulk_pcoa_bc$eig[2]/sum(aob.bulk_pcoa_bc$eig)
aob.map.pcoa.bulk <- cbind(aob.meta.bulk,ax1.scores.bulk,ax2.scores.bulk)
# Jaccard - Bulk Soil:
ax1.j.bulk <- aob.bulk_pcoa_jac$eig[1]/sum(aob.bulk_pcoa_jac$eig)
ax2.j.bulk <- aob.bulk_pcoa_jac$eig[2]/sum(aob.bulk_pcoa_jac$eig)
aob.map.pcoa.j.bulk <- cbind(aob.meta.bulk,ax1.scores.j.bulk,ax2.scores.j.bulk)
# Weighted UniFrac - Bulk Soil:
ax1.wUF.bulk <- aob.bulk_pcoa_wUF$eig[1]/sum(aob.bulk_pcoa_wUF$eig)
ax2.wUF.bulk <- aob.bulk_pcoa_wUF$eig[2]/sum(aob.bulk_pcoa_wUF$eig)
aob.map.pcoa.wUF.bulk <- cbind(aob.meta.bulk,ax1.scores.wUF.bulk,ax2.scores.wUF.bulk)
# Unweighted UniFrac - Bulk Soil:
ax1.uwUF.bulk <- aob.bulk_pcoa.uwUF$eig[1]/sum(aob.bulk_pcoa.uwUF$eig)
ax2.uwUF.bulk <- aob.bulk_pcoa.uwUF$eig[2]/sum(aob.bulk_pcoa.uwUF$eig)
aob.map.pcoa.uwUF.bulk <- cbind(aob.meta.bulk,ax1.scores.uwUF.bulk,ax2.scores.uwUF.bulk)
set.seed(13)
aob.adonis.bulk <- adonis2(aob.bulk_dist_bc ~ Irrigation*Treatment*Date, data=aob.meta.bulk,
permutation=999) # only treatment is significant
aob.adonis.bulk
# run CAP on increasing numbers of PCoA axes to check how many axes need to be included in the model (diagnostics).
nc <- nrow(as.matrix(aoa.bulk_dist_bc))
# run CAP on increasing numbers of PCoA axes to check how many axes need to be included in the model (diagnostics).
nc <- nrow(as.matrix(aob.bulk_dist_bc))
success <- data.frame(m = numeric(nc), class.success = numeric(nc))
set.seed(133)
for (i in 1:50) {
cap <- CAPdiscrim(aob.bulk_dist_bc ~ x, data = aob.meta.bulk.ed, m = i, add = TRUE)
success[i, 1] <- cap$m
success[i, 2] <- 100/length(cap$group) * length(which(cap$group == cap$CV))
}
# metadata
aob.meta.bulk
aob.meta.bulk.ed <- aob.meta.bulk[,-30:-45]
aob.meta.bulk.ed$x <- as.factor(aob.meta.bulk.ed$x)
# run CAP on increasing numbers of PCoA axes to check how many axes need to be included in the model (diagnostics).
nc <- nrow(as.matrix(aob.bulk_dist_bc))
success <- data.frame(m = numeric(nc), class.success = numeric(nc))
set.seed(133)
for (i in 1:50) {
cap <- CAPdiscrim(aob.bulk_dist_bc ~ x, data = aob.meta.bulk.ed, m = i, add = TRUE)
success[i, 1] <- cap$m
success[i, 2] <- 100/length(cap$group) * length(which(cap$group == cap$CV))
}
par(mfrow = c(1,1))
plot(success$m, success$class.success, xlab = "Number of PCoA axes included", ylab = "Reclassification success rate (%)")
text(success$m, success$class.success, labels = success$m, pos = 1, cex = 0.6)
aob.cap.bulk
setwd('D:/Fina/INRAE_Project/microservices/030423_AOA_out/AOA.ASV-analysis')
wd <- print(getwd())
# load the asv table
aoa.asv <- read.table('annotated.AOA.ASVs.counts.tsv', sep='\t', header=T, row.names = 1, check.names = FALSE)
dim(aoa.asv) # 646  192
sort(rowSums(aoa.asv, na.rm = FALSE, dims = 1), decreasing = F) # there are no asv that does not exist in at least one sample.
# load the taxonomy table
#setwd('/Users/arifinabintarti/Documents/France/microservices/030423_AOA_out/')
setwd('D:/Fina/INRAE_Project/microservices/030423_AOA_out/')
aoa.tax <- read.table("besthit.diamond.output.curateddb.AOA.ASVs.edited.csv", sep = ';', header=T)
dim(aoa.tax) # 646
# load the metadata
#setwd('/Users/arifinabintarti/Documents/France/microservices/')
setwd('D:/Fina/INRAE_Project/microservices/')
meta_micro <- read.csv("meta_microservices.csv")
# load phylogenetic tree (nwk file)
setwd('D:/Fina/INRAE_Project/microservices/030423_AOA_out/AOA-rooted-tree/')
AOA_rooted_tree <- ape::read.tree("tree.nwk")
AOA_rooted_tree
############################################################################
# rarefaction curve
set.seed(13)
rarecurve(t(aoa.asv), step=50, cex=0.5, lwd=2, ylab="ASV", label=F)
#BiocManager::install("phyloseq")
## make a phyloseq object of the asv table, taxonomy table, metadata
# re-order the rownames of the asv table to match the colnames of the metadata.
re_order <- match(rownames(meta_micro), colnames(aoa.asv))
aoa.asv.ord  <- aoa.asv[ ,re_order]
aoa.asv.physeq = otu_table(aoa.asv.ord, taxa_are_rows = TRUE) # asv table
sample_names(aoa.asv.physeq)
# adding "S" for sample names to avoid possible problem later on
sample_names(aoa.asv.physeq) <- paste0("S", sample_names(aoa.asv.physeq))
# phyloseq object of the taxonomy table
aoa.tax <- column_to_rownames(aoa.tax, var = "ASVid")
#row.names(aoa.tax) <- aoa.tax$ASVid
aoa.tax.physeq = tax_table(as.matrix(aoa.tax)) # taxonomy table
# phyloseq object of the metadata
meta_micro$Date <- factor(meta_micro$Date, levels = c("4/28/22", "06/01/2022", "07/05/2022", "7/20/22", "9/13/22"),
labels = c("04-28-22", "06-01-22", "07-05-22", "07-20-22", "09-13-22"))
rownames(meta_micro) <- sample_names(aoa.asv.physeq)
aoa.meta.physeq <- sample_data(meta_micro)# meta data
sample_names(aoa.meta.physeq)
# read the rooted tree
setwd('D:/Fina/INRAE_Project/microservices/030423_AOA_out/AOA-rooted-tree/')
AOA_rooted_tree <- ape::read.tree("tree.nwk")
# make phyloseq object
aoa.physeq <- merge_phyloseq(aoa.asv.physeq,aoa.tax.physeq,aoa.meta.physeq,AOA_rooted_tree)
aoa.physeq
sample_data(aoa.physeq)$SampleID <- paste0("S", sample_data(aoa.physeq)$SampleID)
sample_data(aoa.physeq)
# rarefy to minimum sequencing depth (minimum reads = 3832 reads)
set.seed(13)
aoa.rare.min.physeq <- rarefy_even_depth(aoa.physeq, sample.size = min(sample_sums(aoa.physeq)),
rngseed = 13, replace = FALSE, trimOTUs = TRUE, verbose = TRUE)
aoa.rare.min.physeq
sort(sample_sums(aoa.rare.min.physeq), decreasing = F) # 54 OTUs were removed because they are no longer present in any sample after random subsampling
# no sample removed
sort(rowSums(otu_table(aoa.rare.min.physeq), na.rm = FALSE, dims = 1), decreasing = F)
colSums(otu_table(aoa.rare.min.physeq))
aoarare.asv.df <- as.data.frame(otu_table(aoa.rare.min.physeq))
dim(aoarare.asv.df) # 592 ASVs, 192 samples
aoarare.asv.df_pa <- 1*(aoarare.asv.df>0)
aoa.s <- specnumber(aoarare.asv.df, MARGIN = 2) # richness
aoa.richness <- as.data.frame(aoa.s)
aoa.h <- diversity(t(aoarare.asv.df), index = 'shannon') # Shannon index
aoa.shannon <- as.data.frame(aoa.h)
aoa.d <- diversity(t(aoarare.asv.df), index = 'simpson') # Simpson index
aoa.simpson <- as.data.frame(aoa.d)
aoa.inv.d <- diversity(t(aoarare.asv.df), index = 'invsimpson')
# 1. Richness
# Line plot of AOA richness
aoa.meta.df <- data.frame(meta_micro)
aoa.meta.df$Richness <- aoa.s
aoa.meta.df$Shannon <- aoa.h
aoa.meta.df$Simpson <- aoa.d
aoa.meta.df$InvSimpson <- aoa.inv.d
#aob.min.meta.df$Date  <- as.Date(aob.min.meta.df$Date , "%m/%d/%Y")
str(aoa.meta.df)
aoa.meta.df$Type <- factor(aoa.meta.df$Type, levels = c("BS", "RS"),
labels = c("Bulk Soil", "Rhizosphere"))
aoa.meta.df$Treatment <- factor(aoa.meta.df$Treatment, levels = c("D", "K", "M"),
labels = c("Biodynamic", "Conventional", "Mineral fertilized"))
aoa.meta.df$SampleID<-as.factor(aoa.meta.df$SampleID)
aoa.meta.df$PlotID<-as.factor(aoa.meta.df$PlotID)
aoa.meta.df$Irrigation<-as.factor(aoa.meta.df$Irrigation)
# tidy up the data frame
aoa.meta.df.tidy <- aoa.meta.df %>%
group_by(Irrigation, Treatment, Date, Type, var2,var3) %>%
summarize(Mean.Rich=mean(Richness),
Mean.Sha=mean(Shannon),
Mean.Simp=mean(Simpson),
Mean.invsimp=mean(InvSimpson))
str(aoa.meta.df.tidy)
# Bray-Curtis - Bulk Soil :
aoarare.asv.df
aoa.asv.bulk <- aoarare.asv.df[,1:120]
aoa.asv.bulk1 <- aoa.asv.bulk[rowSums(aoa.asv.bulk)>0,]
sort(rowSums(aoa.asv.bulk1, na.rm = FALSE, dims = 1), decreasing = FALSE)
aoa.bulk_dist_bc <- vegdist(t(aoa.asv.bulk1), method = "bray")
# jaccard - Bulk Soil :
aoa.bulk_dist_jac <- vegdist(t(aoa.asv.bulk1), binary = TRUE, method = "jaccard")
# Weighted UniFrac (rarefied) - Bulk Soil:
aoa.physeq_bulk <- subset_samples(aoa.rare.min.physeq, Type=="BS")
aoa.physeq_bulk1 <- prune_taxa(taxa_sums(aoa.physeq_bulk)>0, aoa.physeq_bulk)
aoa.physeq_bulk1
sort(taxa_sums(aoa.physeq_bulk1), decreasing =F) #checking
aoa.bulk_dist_wUF <- UniFrac(aoa.physeq_bulk1, weighted=TRUE, normalized = TRUE)
aoa.bulk_dist_wUF
# Unweighted UniFrac (rarefied) -  Bulk Soil:
aoa.bulk_dist_uwUF <- UniFrac(aoa.physeq_bulk1, weighted=FALSE, normalized = TRUE)
aoa.bulk_dist_uwUF
# Bray-Curtis - Bulk Soil:
aoa.bulk_pcoa_bc <- cmdscale(aoa.bulk_dist_bc, eig=T)
# Jaccard - Bulk Soil:
aoa.bulk_pcoa_jac <- cmdscale(aoa.bulk_dist_jac, eig=T)
# Weighted UniFrac - Bulk Soil:
aoa.bulk_pcoa_wUF <- cmdscale(aoa.bulk_dist_wUF, eig=T)
# Unweighted UniFrac - Bulk Soil:
aoa.bulk_pcoa.uwUF <- cmdscale(aoa.bulk_dist_uwUF, eig=T)
# Bray-Curtis - Bulk Soil:
ax1.scores.bulk <- aoa.bulk_pcoa_bc$points[,1]
ax2.scores.bulk <- aoa.bulk_pcoa_bc$points[,2]
# Jaccard - Bulk Soil:
ax1.scores.j.bulk <- aoa.bulk_pcoa_jac$points[,1]
ax2.scores.j.bulk <- aoa.bulk_pcoa_jac$points[,2]
# Weighted UniFrac - Bulk Soil:
ax1.scores.wUF.bulk <- aoa.bulk_pcoa_wUF$points[,1]
ax2.scores.wUF.bulk <- aoa.bulk_pcoa_wUF$points[,2]
# Unweighted UniFrac - Bulk Soil:
ax1.scores.uwUF.bulk <- aoa.bulk_pcoa.uwUF$points[,1]
ax2.scores.uwUF.bulk <- aoa.bulk_pcoa.uwUF$points[,2]
# 4. Envfit
env.aoa.bulk <- aoa.meta.df[1:120,c(13:19, 22,26:28)]
str(env.aoa.bulk)
env.aoa.bulk <- env.aoa.bulk %>% mutate_at(colnames(env.aoa.bulk), as.numeric)
# bray-curtis
set.seed(13)
env_fit.aoa.bc.bulk <- envfit(aoa.bulk_pcoa_bc, env.aoa.bulk, na.rm=TRUE)
env_fit.aoa.bc.bulk
# Jaccard
set.seed(13)
env_fit.aoa.jac <- envfit(aoa.bulk_pcoa_jac, env.aoa.bulk, na.rm=TRUE)
# Weighted UniFrac
set.seed(13)
env_fit.aoa.wuF <- envfit(aoa.bulk_pcoa_wUF, env.aoa.bulk, na.rm=TRUE)
# UnWeighted UniFrac
set.seed(13)
env_fit.aoa.uwuF <- envfit(aoa.bulk_pcoa.uwUF, env.aoa.bulk, na.rm=TRUE)
# 5. calculate percent variance explained, then add to plot
aoa.meta.bulk <- aoa.meta.df[1:120,]
# Bray-curtis - Bulk Soil:
ax1.bulk <- aoa.bulk_pcoa_bc$eig[1]/sum(aoa.bulk_pcoa_bc$eig)
ax2.bulk <- aoa.bulk_pcoa_bc$eig[2]/sum(aoa.bulk_pcoa_bc$eig)
aoa.map.pcoa.bulk <- cbind(aoa.meta.bulk,ax1.scores.bulk,ax2.scores.bulk)
# Jaccard - Bulk Soil:
ax1.j.bulk <- aoa.bulk_pcoa_jac$eig[1]/sum(aoa.bulk_pcoa_jac$eig)
ax2.j.bulk <- aoa.bulk_pcoa_jac$eig[2]/sum(aoa.bulk_pcoa_jac$eig)
aoa.map.pcoa.j.bulk <- cbind(aoa.meta.bulk,ax1.scores.j.bulk,ax2.scores.j.bulk)
# Weighted UniFrac - Bulk Soil:
ax1.wUF.bulk <- aoa.bulk_pcoa_wUF$eig[1]/sum(aoa.bulk_pcoa_wUF$eig)
ax2.wUF.bulk <- aoa.bulk_pcoa_wUF$eig[2]/sum(aoa.bulk_pcoa_wUF$eig)
aoa.map.pcoa.wUF.bulk <- cbind(aoa.meta.bulk,ax1.scores.wUF.bulk,ax2.scores.wUF.bulk)
# Unweighted UniFrac - Bulk Soil:
ax1.uwUF.bulk <- aoa.bulk_pcoa.uwUF$eig[1]/sum(aoa.bulk_pcoa.uwUF$eig)
ax2.uwUF.bulk <- aoa.bulk_pcoa.uwUF$eig[2]/sum(aoa.bulk_pcoa.uwUF$eig)
aoa.map.pcoa.uwUF.bulk <- cbind(aoa.meta.bulk,ax1.scores.uwUF.bulk,ax2.scores.uwUF.bulk)
aoa.asv.rh <- aoarare.asv.df[,121:192]
aoa.asv.rh1 <- aoa.asv.rh[rowSums(aoa.asv.rh)>0,]
sort(rowSums(aoa.asv.rh1, na.rm = FALSE, dims = 1), decreasing = FALSE)
dim(aoa.asv.rh1)
aoa.rh_dist_bc <- vegdist(t(aoa.asv.rh1), method = "bray")
# jaccard - Rhizosphere :
aoa.rh_dist_jac <- vegdist(t(aoa.asv.rh1), binary = TRUE, method = "jaccard")
# Weighted UniFrac (rarefied) - Rhizosphere :
aoa.physeq_rh <- subset_samples(aoa.rare.min.physeq, Type=="RS")
aoa.physeq_rh1 <- prune_taxa(taxa_sums(aoa.physeq_rh)>0, aoa.physeq_rh)
aoa.physeq_rh1
sort(taxa_sums(aoa.physeq_rh1), decreasing =F) #checking
aoa.rh_dist_wUF <- UniFrac(aoa.physeq_rh1, weighted=TRUE, normalized = TRUE)
aoa.rh_dist_wUF
# Unweighted UniFrac (rarefied) -  Rhizosphere :
aoa.rh_dist_uwUF <- UniFrac(aoa.physeq_rh1, weighted=FALSE, normalized = TRUE)
aoa.rh_dist_uwUF
# 2. CMD/classical multidimensional scaling (MDS) of a data matrix. Also known as principal coordinates analysis
# Bray-Curtis - Rhizosphere :
aoa.rh_pcoa_bc <- cmdscale(aoa.rh_dist_bc, eig=T)
# Jaccard - Rhizosphere :
aoa.rh_pcoa_jac <- cmdscale(aoa.rh_dist_jac, eig=T)
# Weighted UniFrac - Rhizosphere :
aoa.rh_pcoa_wUF <- cmdscale(aoa.rh_dist_wUF, eig=T)
# Unweighted UniFrac - Rhizosphere :
aoa.rh_pcoa.uwUF <- cmdscale(aoa.rh_dist_uwUF, eig=T)
# 3. scores of PC1 and PC2
# Bray-Curtis - Rhizosphere :
ax1.scores.rh <- aoa.rh_pcoa_bc$points[,1]
ax2.scores.rh <- aoa.rh_pcoa_bc$points[,2]
# Jaccard - Rhizosphere :
ax1.scores.j.rh <- aoa.rh_pcoa_jac$points[,1]
ax2.scores.j.rh <- aoa.rh_pcoa_jac$points[,2]
# Weighted UniFrac - Rhizosphere :
ax1.scores.wUF.rh <- aoa.rh_pcoa_wUF$points[,1]
ax2.scores.wUF.rh <- aoa.rh_pcoa_wUF$points[,2]
# Unweighted UniFrac - Rhizosphere :
ax1.scores.uwUF.rh <- aoa.rh_pcoa.uwUF$points[,1]
ax2.scores.uwUF.rh <- aoa.rh_pcoa.uwUF$points[,2]
aoa.meta.rh <- aoa.meta.df[121:192,]
# Bray-curtis - Rhizosphere :
ax1.rh <- aoa.rh_pcoa_bc$eig[1]/sum(aoa.rh_pcoa_bc$eig)
ax2.rh <- aoa.rh_pcoa_bc$eig[2]/sum(aoa.rh_pcoa_bc$eig)
aoa.map.pcoa.rh <- cbind(aoa.meta.rh,ax1.scores.rh,ax2.scores.rh)
# Jaccard - Rhizosphere :
ax1.j.rh <- aoa.rh_pcoa_jac$eig[1]/sum(aoa.rh_pcoa_jac$eig)
ax2.j.rh <- aoa.rh_pcoa_jac$eig[2]/sum(aoa.rh_pcoa_jac$eig)
aoa.map.pcoa.j.rh <- cbind(aoa.meta.rh,ax1.scores.j.rh,ax2.scores.j.rh)
# Weighted UniFrac - Rhizosphere :
ax1.wUF.rh <- aoa.rh_pcoa_wUF$eig[1]/sum(aoa.rh_pcoa_wUF$eig)
ax2.wUF.rh <- aoa.rh_pcoa_wUF$eig[2]/sum(aoa.rh_pcoa_wUF$eig)
aoa.map.pcoa.wUF.rh <- cbind(aoa.meta.rh,ax1.scores.wUF.rh,ax2.scores.wUF.rh)
# Unweighted UniFrac - Rhizosphere :
ax1.uwUF.rh <- aoa.rh_pcoa.uwUF$eig[1]/sum(aoa.rh_pcoa.uwUF$eig)
ax2.uwUF.rh <- aoa.rh_pcoa.uwUF$eig[2]/sum(aoa.rh_pcoa.uwUF$eig)
aoa.map.pcoa.uwUF.rh <- cbind(aoa.meta.rh,ax1.scores.uwUF.rh,ax2.scores.uwUF.rh)
# run Bray-Curtis beta diversity on bulk soil
aoa.bulk_dist_bc <- vegdist(t(aoa.asv.bulk1), method = "bray")
aoa.bulk_dist_bc
# metadata
aoa.meta.bulk
aoa.meta.bulk.ed <- aoa.meta.bulk[,-30:-45]
aoa.meta.bulk.ed$x <- as.factor(aoa.meta.bulk.ed$x)
# run CAP on increasing numbers of PCoA axes to check how many axes need to be included in the model (diagnostics).
nc <- nrow(as.matrix(aoa.bulk_dist_bc))
success <- data.frame(m = numeric(nc), class.success = numeric(nc))
set.seed(133)
# run the final CAP by including PCoA axes showing the highest reclassification rate
set.seed(13)
aoa.cap.bulk <- CAPdiscrim(aoa.bulk_dist_bc ~ x, data = aoa.meta.bulk.ed, m = 44, permutations = 9999, add = TRUE) # 94.16667%
aoa.cap.bulk
aoa.bulk_dist_bc
aoa.cap.bulk$manova
aoa.cap.bulk$signi
aoa.cap.bulk$permutations
aoa.cap.bulk$PCoA
aoa.cap.bulk$m
aoa.cap.bulk$tot
aoa.cap.bulk$group
aoa.cap.bulk$CV
set.seed(133)
aoa.adonis.bulk.X <- adonis2(aoa.bulk_dist_bc ~ x , data=aoa.meta.bulk.ed,
permutations = 999) # not significant
set.seed(133)
aoa.adonis.bulk.X <- adonis2(aoa.bulk_dist_bc ~ x , data=aoa.meta.bulk.ed,
permutations = 999) # not significant
aoa.adonis.bulk.X
set.seed(133)
aoa.adonis.bulk.X <- adonis2(aoa.bulk_dist_bc ~ Treatment*Irrigation , data=aoa.meta.bulk.ed,
permutations = 999) # not significant
aoa.adonis.bulk.X
################################################################################
set.seed(133)
aob.adonis.bulk.X <- adonis2(aob.bulk_dist_bc ~ Treatment*Irrigation , data=aob.meta.bulk.ed,
permutations = 999) # not significant
aob.adonis.bulk.X
################################################################################
set.seed(133)
aob.adonis.bulk.X <- adonis2(aob.bulk_dist_bc ~ x , data=aob.meta.bulk.ed,
permutations = 999) # not significant
aob.adonis.bulk.X
########################################################################################
# Pairwise comparison analyses across treatments and between irrigation within date
########################################################################################
#devtools::install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(pairwiseAdonis)
set.seed(133)
aoa.adonis.bulk.X <- adonis2(aoa.bulk_dist_bc ~ x , data=aoa.meta.bulk.ed,
permutations = 999) # not significant
aoa.adonis.bulk.X
set.seed(133)
aoa.pwc.bulk.X <- pairwiseAdonis::pairwise.adonis(aoa.bulk_dist_bc,
data=aoa.meta.bulk.ed$x,
p.adjust.m = "BH")
set.seed(133)
aoa.pwc.bulk.X <- pairwiseAdonis::pairwise.adonis(aoa.bulk_dist_bc,
aoa.meta.bulk.ed$x,
p.adjust.m = "BH")
aoa.pwc.bulk.X
set.seed(133)
aoa.adonis.bulk <- adonis(aoa.bulk_dist_bc ~ Irrigation , strata=block, data=aoa.meta.bulk.ed,
permutations = 999) # not significant
aoa.adonis.bulk
set.seed(133)
aoa.adonis.bulk <- adonis2(aoa.bulk_dist_bc ~ Irrigation, strata=block, data=aoa.meta.bulk.ed,
permutations = 999) # not significant
set.seed(133)
aoa.adonis.bulk <- adonis2(aoa.bulk_dist_bc ~ Irrigation, strata=aoa.meta.bulk.ed$block, data=aoa.meta.bulk.ed,
permutations = 999) # not significant
aoa.adonis.bulk
set.seed(13)
perm = how(nperm = 999,
within = Within(type="free"),
#plots = Plots(strata = block, type = "free"))
blocks = block)
#perm = how(nperm = 999,
#within = Within(type="free"),
#plots = with(aoa.meta.bulk,
#Plots(strata=Block,
#type="free")))
block=as.factor(aoa.meta.bulk$Block)
plot=as.factor(aoa.meta.bulk$PlotID)
set.seed(13)
perm = how(nperm = 999,
within = Within(type="free"),
#plots = Plots(strata = block, type = "free"))
blocks = block)
set.seed(133)
aoa.adonis.bulk.irri2 <- adonis2(aoa.bulk_dist_bc ~ Irrigation*Treatment, data=aoa.meta.bulk,
permutations = perm) # not significant
aoa.adonis.bulk.irri2
set.seed(13)
perm1 = how(nperm = 999,
within = Within(type="free"),
plots = with(aoa.meta.bulk,
Plots(strata=Block,
type="free")))
set.seed(133)
aoa.adonis.bulk.irri2 <- adonis2(aoa.bulk_dist_bc ~ Irrigation*Treatment, data=aoa.meta.bulk,
permutations = perm1) # not significant
aoa.adonis.bulk.irri2
set.seed(133)
aoa.adonis.bulk.irri2 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk,
permutations = perm1) # not significant
aoa.adonis.bulk.irri2
set.seed(133)
aoa.adonis.bulk.irri2 <- adonis2(aoa.bulk_dist_bc ~ Treatment*Irrigation, data=aoa.meta.bulk,
permutations = perm1) # not significant
aoa.adonis.bulk.irri2
set.seed(133)
aoa.adonis.bulk.irri2 <- adonis2(aoa.bulk_dist_bc ~ Treatment*Irrigation*Date, data=aoa.meta.bulk,
permutations = perm1) # not significant
aoa.adonis.bulk.irri2
set.seed(133)
aoa.adonis.bulk.irri2 <- adonis2(aoa.bulk_dist_bc ~ Treatment*Irrigation*Date, data=aoa.meta.bulk,
permutations = perm2) # not significant
set.seed(13)
perm2 = how(nperm = 999,
within = Within(type="free"),
#plots = Plots(strata = block, type = "free"))
blocks = block)
set.seed(133)
aoa.adonis.bulk.irri2 <- adonis2(aoa.bulk_dist_bc ~ Treatment*Irrigation*Date, data=aoa.meta.bulk,
permutations = perm2) # not significant
aoa.adonis.bulk.irri2
set.seed(133)
aoa.adonis.bulk.irri2 <- adonis2(aoa.bulk_dist_bc ~ Treatment*Irrigation*Date, data=aoa.meta.bulk,
permutations = 999, strata = block) # not significant
aoa.adonis.bulk.irri2
set.seed(133)
aoa.adonis.bulk.irri2 <- adonis2(aoa.bulk_dist_bc ~ Treatment*Irrigation*Date, data=aoa.meta.bulk,
permutations = 999, strata = plot) # not significant
aoa.adonis.bulk.irri2
aoa.cap.bulk
View(aoa.meta.bulk)
metadata <- cbind.data.frame(SampleID = seq(from = 1, to = 18, by = 1),
Diet = rep(c("Ref", "Soy"), each = 9),
Tank = rep(c("T1", "T2", "T3", "T4", "T5", "T6"), each = 3))
metadata
aoa.cap.bulk
aoa.bulk_pcoa_bc
t(aoa.asv.bulk1)
aoa.bulk_dist_bc
as.dist(aoa.bulk_pcoa_bc)
as.dist(aoa.bulk_pcoa_bc$points)
aoa.bulk_dist_bc
aoa.bulk_pcoa_bc$points
test <- as.dist(aoa.cap.bulk$PCoA)
test
set.seed(133)
aoa.adonis.bulk.irri2 <- adonis2(test ~ Treatment*Irrigation*Date, data=aoa.meta.bulk,
permutations = 999) # not significant
aoa.adonis.bulk.irri2
aoa.cap.bulk
success <- cbind(data.frame(aoa.cap.bulk$group), data.frame(aoa.cap.bulk$CV))
success
colnames(success) <- c("source", "classified")
rownames(success) <- rownames(aoa.cap.bulk$PCoA)
success <- success[order(success$source), ]
success
aoa.cap1.bulk <- paste("CAP1 (", round((100/sum(aoa.cap.bulk$lda.other$svd^2) * aoa.cap.bulk$lda.other$svd^2)[1],
digits = 1), "%)", sep = "")
aoa.cap2.bulk <- paste("CAP2 (", round((100/sum(aoa.cap.bulk$lda.other$svd^2) * aoa.cap.bulk$lda.other$svd^2)[2],
digits = 1), "%)", sep = "")
aoa.cap2.bulk
# run CAP on increasing numbers of PCoA axes to check how many axes need to be included in the model (diagnostics).
nc <- nrow(as.matrix(aoa.bulk_dist_bc))
success <- data.frame(m = numeric(nc), class.success = numeric(nc))
set.seed(133)
for (i in 1:50) {
cap <- CAPdiscrim(aoa.bulk_dist_bc ~ x, data = aoa.meta.bulk.ed, m = i, add = TRUE)
success[i, 1] <- cap$m
success[i, 2] <- 100/length(cap$group) * length(which(cap$group == cap$CV))
}
par(mfrow = c(1,1))
plot(success$m, success$class.success, xlab = "Number of PCoA axes included", ylab = "Reclassification success rate (%)")
text(success$m, success$class.success, labels = success$m, pos = 1, cex = 0.6)
# run the final CAP by including PCoA axes showing the highest reclassification rate
set.seed(13)
aoa.cap.bulk <- CAPdiscrim(aoa.bulk_dist_bc ~ x, data = aoa.meta.bulk.ed, m = 44, permutations = 9999, add = TRUE) # 94.16667%
aoa.cap.bulk

library(multcomp)
library(car)
library(BiocManager)
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(ggtext)
library(reshape)
library(ggpubr)
library(car)
library(agricolae)
library(multcompView)
library(grid)
library(gridExtra)
library(sjmisc)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(onewaytests)
library(ggsignif)
library(PerformanceAnalytics)
library(gvlma)
library(ggpmisc)
library(tibble)
library(fitdistrplus)
library(lme4)
library(nlme)
library(ape)
library(devtools)
library(phyloseq)
#install.packages("parallel")
#install.packages("ggforce")
#install.packages("BiodiversityR")
library(parallel)
library(BiodiversityR) # ALWAYS LOAD FROM THE R CONSOLE!!!!
library(ggforce)
setwd('/Users/arifinabintarti/Documents/France/microservices/030423_AOA_out/AOA.ASV-analysis')
#setwd('D:/Fina/INRAE_Project/microservices/030423_AOA_out/AOA.ASV-analysis')
wd <- print(getwd())
# load the asv table
aoa.asv <- read.table('annotated.AOA.ASVs.counts.tsv', sep='\t', header=T, row.names = 1, check.names = FALSE)
dim(aoa.asv) # 646  192
sort(rowSums(aoa.asv, na.rm = FALSE, dims = 1), decreasing = F) # there are no asv that does not exist in at least one sample.
# load the taxonomy table
setwd('/Users/arifinabintarti/Documents/France/microservices/030423_AOA_out/')
#setwd('D:/Fina/INRAE_Project/microservices/030423_AOA_out/')
aoa.tax <- read.table("besthit.diamond.output.curateddb.AOA.ASVs.edited.csv", sep = ';', header=T)
dim(aoa.tax) # 646
# load the metadata
setwd('/Users/arifinabintarti/Documents/France/microservices/')
#setwd('D:/Fina/INRAE_Project/microservices/')
meta_micro <- read.csv("meta_microservices.csv")
setwd('/Users/arifinabintarti/Documents/France/microservices/030423_AOA_out/AOA-rooted-tree/')
#setwd('D:/Fina/INRAE_Project/microservices/030423_AOA_out/AOA-rooted-tree/')
AOA_rooted_tree <- ape::read.tree("tree.nwk")
AOA_rooted_tree
re_order <- match(rownames(meta_micro), colnames(aoa.asv))
aoa.asv.ord  <- aoa.asv[ ,re_order]
aoa.asv.physeq = otu_table(aoa.asv.ord, taxa_are_rows = TRUE) # asv table
sample_names(aoa.asv.physeq)
# adding "S" for sample names to avoid possible problem later on
sample_names(aoa.asv.physeq) <- paste0("S", sample_names(aoa.asv.physeq))
# phyloseq object of the taxonomy table
aoa.tax <- column_to_rownames(aoa.tax, var = "ASVid")
#row.names(aoa.tax) <- aoa.tax$ASVid
aoa.tax.physeq = tax_table(as.matrix(aoa.tax)) # taxonomy table
# phyloseq object of the metadata
meta_micro$Date <- factor(meta_micro$Date, levels = c("4/28/22", "06/01/2022", "07/05/2022", "7/20/22", "9/13/22"),
labels = c("Apr 28th", "Jun 1st", "Jul 5th", "Jul 20th", "Sept 13th"))
rownames(meta_micro) <- sample_names(aoa.asv.physeq)
aoa.meta.physeq <- sample_data(meta_micro)# meta data
sample_names(aoa.meta.physeq)
setwd('/Users/arifinabintarti/Documents/France/microservices/030423_AOA_out/AOA-rooted-tree/')
#setwd('D:/Fina/INRAE_Project/microservices/030423_AOA_out/AOA-rooted-tree/')
AOA_rooted_tree <- ape::read.tree("tree.nwk")
aoa.physeq <- merge_phyloseq(aoa.asv.physeq,aoa.tax.physeq,aoa.meta.physeq,AOA_rooted_tree)
aoa.physeq
sample_data(aoa.physeq)$SampleID <- paste0("S", sample_data(aoa.physeq)$SampleID)
sample_data(aoa.physeq)
# rarefy to minimum sequencing depth (minimum reads = 3832 reads)
set.seed(13)
aoa.rare.min.physeq <- rarefy_even_depth(aoa.physeq, sample.size = min(sample_sums(aoa.physeq)),
rngseed = 13, replace = FALSE, trimOTUs = TRUE, verbose = TRUE)
aoa.rare.min.physeq
sort(sample_sums(aoa.rare.min.physeq), decreasing = F) # 54 OTUs were removed because they are no longer present in any sample after random subsampling
# no sample removed
sort(rowSums(otu_table(aoa.rare.min.physeq), na.rm = FALSE, dims = 1), decreasing = F)
colSums(otu_table(aoa.rare.min.physeq))
aoarare.asv.df <- as.data.frame(otu_table(aoa.rare.min.physeq))
dim(aoarare.asv.df) # 592 ASVs, 192 samples
aoarare.asv.df_pa <- 1*(aoarare.asv.df>0)
aoa.s <- specnumber(aoarare.asv.df, MARGIN = 2) # richness
aoa.richness <- as.data.frame(aoa.s)
aoa.h <- diversity(t(aoarare.asv.df), index = 'shannon') # Shannon index
aoa.shannon <- as.data.frame(aoa.h)
aoa.d <- diversity(t(aoarare.asv.df), index = 'simpson') # Simpson index
aoa.simpson <- as.data.frame(aoa.d)
aoa.inv.d <- diversity(t(aoarare.asv.df), index = 'invsimpson')
aoa.meta.df <- data.frame(meta_micro)
aoa.meta.df$Richness <- aoa.s
aoa.meta.df$Shannon <- aoa.h
aoa.meta.df$Simpson <- aoa.d
aoa.meta.df$InvSimpson <- aoa.inv.d
#aob.min.meta.df$Date  <- as.Date(aob.min.meta.df$Date , "%m/%d/%Y")
str(aoa.meta.df)
aoa.meta.df$Type <- factor(aoa.meta.df$Type, levels = c("BS", "RS"),
labels = c("Bulk Soil", "Rhizosphere"))
aoa.meta.df$Treatment <- factor(aoa.meta.df$Treatment, levels = c("D", "K", "M"),
labels = c("BIODYN", "CONFYM", "CONMIN"))
aoa.meta.df$SampleID<-as.factor(aoa.meta.df$SampleID)
aoa.meta.df$PlotID<-as.factor(aoa.meta.df$PlotID)
aoa.meta.df$Irrigation<-as.factor(aoa.meta.df$Irrigation)
aoa.meta.df$Block<-as.factor(aoa.meta.df$Block)
aoa.meta.df$x<-as.factor(aoa.meta.df$x)
aoa.meta.df$var<-as.factor(aoa.meta.df$var)
aoa.meta.df$var2<-as.factor(aoa.meta.df$var2)
aoa.meta.df$var3<-as.factor(aoa.meta.df$var3)
aoa.meta.df[sapply(aoa.meta.df, is.character)] <-
lapply(aoa.meta.df[sapply(aoa.meta.df, is.character)], as.numeric)
aoa.meta.df[sapply(aoa.meta.df, is.integer)] <-
lapply(aoa.meta.df[sapply(aoa.meta.df, is.integer)], as.numeric)
# tidy up the data frame
aoa.meta.df.tidy <- aoa.meta.df %>%
group_by(Irrigation, Treatment, Date, Type, var2,var3) %>%
summarize(Mean.Rich=mean(Richness),
Mean.Sha=mean(Shannon),
Mean.Simp=mean(Simpson),
Mean.invsimp=mean(InvSimpson))
str(aoa.meta.df.tidy)
# Bray-Curtis - Bulk Soil :
aoarare.asv.df
aoa.asv.bulk <- aoarare.asv.df[,1:120]
aoa.asv.bulk1 <- aoa.asv.bulk[rowSums(aoa.asv.bulk)>0,]
sort(rowSums(aoa.asv.bulk1, na.rm = FALSE, dims = 1), decreasing = FALSE)
str(aoa.asv.bulk1)
aoa.bulk_dist_bc <- vegdist(t(aoa.asv.bulk1), method = "bray")
aoa.meta.bulk.ed <- aoa.meta.bulk[,-30:-45]
# metadata
aoa.meta.bulk
# 5. calculate percent variance explained, then add to plot
aoa.meta.bulk <- aoa.meta.df[1:120,]
# metadata
aoa.meta.bulk
aoa.meta.bulk.ed <- aoa.meta.bulk[,-30:-45]
aoa.meta.bulk.ed$x <- as.factor(aoa.meta.bulk.ed$x)
aoa.meta.bulk.ed$Block <- as.factor(aoa.meta.bulk.ed$Block)
# run CAP on increasing numbers of PCoA axes to check how many axes need to be included in the model (diagnostics).
nc <- nrow(as.matrix(aoa.bulk_dist_bc))
success <- data.frame(m = numeric(nc), class.success = numeric(nc))
set.seed(133)
for (i in 1:50) {
cap <- CAPdiscrim(aoa.bulk_dist_bc ~ x, data = aoa.meta.bulk.ed, m = i, add = TRUE)
success[i, 1] <- cap$m
success[i, 2] <- 100/length(cap$group) * length(which(cap$group == cap$CV))
}
par(mfrow = c(1,1))
plot(success$m, success$class.success, xlab = "Number of PCoA axes included", ylab = "Reclassification success rate (%)")
text(success$m, success$class.success, labels = success$m, pos = 1, cex = 0.6)
plot(success$m, success$class.success, xlab = "Number of PCoA axes included", ylab = "Reclassification success rate (%)")
# run the final CAP by including PCoA axes showing the highest reclassification rate
set.seed(13)
aoa.cap.bulk <- CAPdiscrim(aoa.bulk_dist_bc ~ x, data = aoa.meta.bulk.ed, m = 44, permutations = 9999, add = TRUE) # 94.16667%
dist_matrix.aoa <- dist(aoa.cap.bulk$x)
dist_matrix.aoa
################################################################################################################################################
###################################################################
#######################Unifrac distance between treatments
#devtools::install_github("kylebittinger/usedist")
#install.packages("PMCMRplus")
#install.packages("gdata")
#install.packages("PMCMR")
library(PMCMR)
library(usedist)
library(PMCMRplus)
library(gdata)
library(magrittr)
library(purrr)
# 1. AOA Bulk Soil - CAP Distance - CONFYM (K)
aoa.cap.bulk.dist
#Sample group
item_groups <- sample_data(aoa.physeq_bulk1)
# Weighted UniFrac (rarefied) - Bulk Soil:
aoa.physeq_bulk <- subset_samples(aoa.rare.min.physeq, Type=="BS")
aoa.physeq_bulk1 <- prune_taxa(taxa_sums(aoa.physeq_bulk)>0, aoa.physeq_bulk)
aoa.physeq_bulk1
#Sample group
item_groups <- sample_data(aoa.physeq_bulk1)
item_groups <- item_groups$x
#calculate dist between groups
d.calcul <- dist_groups(dist_matrix.aoa, item_groups)
d.calcul
View(d.calcul)
aoa.cap.bulk$x
x <- aoa.cap.bulk$x
str(x)
x
x <- as.matrix(aoa.cap.bulk$x)
str(x)
x <- as.data.frame(aoa.cap.bulk$x)
str(x)
test <- dist(x$LD2)
test
x1
x1 <- x[,"2"]
x
x1 <- x[,c(3,6)]
x1
test <- dist(x1)
test
#calculate dist between groups
#dist_matrix.aoa
d.calcul <- dist_groups(test, item_groups)
d.calcul
#aoa.cap.bulk.dist <- dist(aoa.cap.bulk$PCoA)
#Control
tab.distance = as_tibble(d.calcul)
#tab.distance$Label <- gsub('\\s+', '', tab.distance$Label)
#tab.distance.C <- subset(tab.distance, Label%in% c("Between cont.M and rain.M","Between cont.D and rain.D","Between cont.K and rain.K","Within cont.D","Within cont.M","Within cont.K", "Within rain.D","Within rain.M","Within rain.K"))
tab.distance.K <- subset(tab.distance, Label%in% c("Between cont.K and rain.K","Within cont.K","Within rain.K"))
tab.distance.K$Label <- factor(tab.distance.K$Label)
str(tab.distance.K)
# One-way ANOVA
set.seed(13)
K.dist.cap.aov <- aov(Distance ~ Label, data = tab.distance.K)
summary(K.dist.cap.aov) # significant, p-val < 0.0001, f-val= 939.1
# Post-Hoc Test
K.dist.cap.tuk <- TukeyHSD(K.dist.cap.aov)
Tukey.K <- as.data.frame(K.dist.cap.tuk$Label)
Tukey.K <- rownames_to_column(Tukey.K, var = "Comparison")
colnames(Tukey.K)[5] <- "p.adj"
# Make the significance letter
CLD.k = cldList(p.adj ~ Comparison, data=Tukey.K)
CLD.k
# re-order
CLD.k.ed = CLD.k[c(3,1,2),] # re-order
CLD.k.ed
# Plot
sumData.K <- ddply(tab.distance.K, "Label", summarise,
Max = max(Distance),
N    = length(Distance),
Mean = mean(Distance),
Sd   = sd(Distance),
Se   = Sd / sqrt(N))
sumData.K
rownames(CLD.k.ed) = sumData.K$Label
CLD.k.ed = rownames_to_column(CLD.k.ed, var="Label")
CLD.k.ed
# find color gradient
colfunc <- colorRampPalette(c("#FF618C", "white"))
colfunc(8)
col.k <- c("#FF618C","#FF8EAC","#FFBBCD")
dist.CAP.bulk.k<- ggplot(tab.distance.K, aes(x = Label, y = Distance)) +
geom_boxplot(width=0.7,lwd=0.7,aes(fill=Label)) +
scale_fill_manual(values = col.k ,
labels = c("between", "within control", "within drought")) +
scale_x_discrete(labels=c("Between", "Control", "Drought"))+
ylim(0,15)+
geom_text(data=CLD.k.ed,aes(x=Label, y = sumData.K$Max + 1, label=Letter), vjust=0, size=6) +
ylab("Bray-Curtis Distances") +
theme_bw() +
theme(legend.position="none",
legend.title = element_text(size=13, face='bold'),
plot.title = element_text(hjust = 0.5,size = 15, face='bold'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_blank(),
axis.text.x =element_text(size=14),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
#axis.title.y=element_text(size=13,face="bold"),
axis.title.x=element_blank(),
legend.text=element_text(size=13),
legend.spacing.x = unit(0.05, 'cm'))+
#annotate("text",x=0.5,y=1.10,label= "P-value = 0.003", hjust = 0, size = 6, fontface='italic') +
ggtitle("CONFYM (K)")
dist.CAP.bulk.k
#calculate dist between groups
d.calcul <- dist_groups(test, item_groups)
#Control
tab.distance = as_tibble(d.calcul)
tab.distance.C <- subset(tab.distance, Label%in% c("Between cont.M and rain.M","Between cont.D and rain.D","Between cont.K and rain.K"))
tab.distance.C$Label <- factor(tab.distance.C$Label)
tab.distance.C$Label
str(tab.distance.C)
tab.distance.C$Group2 <- as.character(tab.distance.C$Group2)
tab.distance.C.ed <- tab.distance.C %>%
mutate(Treatment = case_when(
endsWith(Group2, "D") ~ "BIODYN (D)",
endsWith(Group2, "K") ~ "CONFYM (K)",
endsWith(Group2, "M") ~ "CONMIN (M)"))
str(tab.distance.C.ed)
tab.distance.C.ed2 <- tab.distance.C.ed %>%
mutate(Label = factor(Label,
levels = c("Between cont.D and rain.D",
"Between cont.K and rain.K",
"Between cont.M and rain.M")))
str(tab.distance.C.ed2)
tab.distance.C.ed2$Label <- factor(tab.distance.C.ed2$Label)
# check assumption (outliers)
tab.distance.C.ed2.out <- tab.distance.C.ed2 %>%
group_by(Label) %>%
identify_outliers(Distance) # no extreme outliers
# Saphiro-Wilk for normality
tab.distance.C.ed2.SW <- tab.distance.C.ed2 %>%
group_by(Label) %>%
shapiro_test(Distance)
ggqqplot(tab.distance.C.ed2, "Distance", ggtheme = theme_bw())#All the points fall approximately along the reference line, for each cell. So we can assume normality of the data
# Lavene test
tab.distance.C.ed2.Lave <- tab.distance.C.ed2 %>%
levene_test(Distance ~ Label)
# Kruskal-Wallis Test
set.seed(1333)
kruskal.test(Distance ~ Label,
data = tab.distance.C.ed2) #Kruskal-Wallis chi-squared = 361.86, df = 2, p-value < 2.2e-16
# Post Hoc Dunn Test
set.seed(1333)
aoa.BS.dunn <- dunnTest(Distance ~ Label,
data = tab.distance.C.ed2, method = "bh")
aoa.BS.dunn
# Make the significance letter
CLD.all = cldList(P.adj ~ Comparison, data=aoa.BS.dunn$res)
CLD.all
# Plot
sumData.all <- ddply(tab.distance.C.ed2, "Label", summarise,
Max = max(Distance),
N    = length(Distance),
Mean = mean(Distance),
Sd   = sd(Distance),
Se   = Sd / sqrt(N))
rownames(CLD.all) = sumData.all$Label
CLD.all.ed = rownames_to_column(CLD.all, var="Label")
CLD.all.ed
CLD.all.ed2 <- CLD.all.ed %>%
mutate(Treatment = case_when(
endsWith(Group, "D") ~ "BIODYN (D)",
endsWith(Group, "K") ~ "CONFYM (K)",
endsWith(Group, "M") ~ "CONMIN (M)"))
tab.distance.C.ed2$Treatment <- as.factor(tab.distance.C.ed2$Treatment)
# Plot
dist.bulk.all<- ggplot(tab.distance.C.ed2, aes(x = Label, y = Distance)) +
geom_boxplot(width=0.7,lwd=0.7,aes(fill=Label)) +
scale_fill_manual(values = c("#009E73","#FF618C","#E69F00"))+
scale_x_discrete(labels = c("control vs drought \nBIODYN","control vs drought \nCONFYM","control vs drought \nCONMIN"))+
geom_text(data=CLD.all.ed2,aes(x=Label, y = sumData.all$Max + 1, label=Letter), vjust=0, size=6) +
ylab("Distances") +
ylim(0,15)+
theme_bw() +
theme(legend.position="none",
legend.title = element_text(size=13, face='bold'),
plot.title = element_text(hjust = 0.5, size = 15, face='bold'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=15),
axis.title.y=element_text(size=16,face="bold"),
axis.title.x=element_blank(),
legend.text=element_text(size=13),
legend.spacing.x = unit(0.05, 'cm'))+
annotate("text",x=0.5,y=1,label= "P-value < 0.0001", hjust = 0, size = 6, fontface='italic')
dist.bulk.all
x1 <- x[,c(1,2)]
x1
test <- dist(x1)
test
#calculate dist between groups
d.calcul <- dist_groups(test, item_groups)
#Control
tab.distance = as_tibble(d.calcul)
tab.distance.C <- subset(tab.distance, Label%in% c("Between cont.M and rain.M","Between cont.D and rain.D","Between cont.K and rain.K"))
tab.distance.C$Label <- factor(tab.distance.C$Label)
tab.distance.C$Label
str(tab.distance.C)
tab.distance.C$Group2 <- as.character(tab.distance.C$Group2)
tab.distance.C.ed <- tab.distance.C %>%
mutate(Treatment = case_when(
endsWith(Group2, "D") ~ "BIODYN (D)",
endsWith(Group2, "K") ~ "CONFYM (K)",
endsWith(Group2, "M") ~ "CONMIN (M)"))
str(tab.distance.C.ed)
tab.distance.C.ed2 <- tab.distance.C.ed %>%
mutate(Label = factor(Label,
levels = c("Between cont.D and rain.D",
"Between cont.K and rain.K",
"Between cont.M and rain.M")))
str(tab.distance.C.ed2)
tab.distance.C.ed2$Label <- factor(tab.distance.C.ed2$Label)
# Post Hoc Dunn Test
set.seed(1333)
aoa.BS.dunn <- dunnTest(Distance ~ Label,
data = tab.distance.C.ed2, method = "bh")
aoa.BS.dunn
# Make the significance letter
CLD.all = cldList(P.adj ~ Comparison, data=aoa.BS.dunn$res)
CLD.all
# Plot
sumData.all <- ddply(tab.distance.C.ed2, "Label", summarise,
Max = max(Distance),
N    = length(Distance),
Mean = mean(Distance),
Sd   = sd(Distance),
Se   = Sd / sqrt(N))
rownames(CLD.all) = sumData.all$Label
CLD.all.ed = rownames_to_column(CLD.all, var="Label")
CLD.all.ed
CLD.all.ed2 <- CLD.all.ed %>%
mutate(Treatment = case_when(
endsWith(Group, "D") ~ "BIODYN (D)",
endsWith(Group, "K") ~ "CONFYM (K)",
endsWith(Group, "M") ~ "CONMIN (M)"))
tab.distance.C.ed2$Treatment <- as.factor(tab.distance.C.ed2$Treatment)
# Plot
dist.bulk.all<- ggplot(tab.distance.C.ed2, aes(x = Label, y = Distance)) +
geom_boxplot(width=0.7,lwd=0.7,aes(fill=Label)) +
scale_fill_manual(values = c("#009E73","#FF618C","#E69F00"))+
scale_x_discrete(labels = c("control vs drought \nBIODYN","control vs drought \nCONFYM","control vs drought \nCONMIN"))+
geom_text(data=CLD.all.ed2,aes(x=Label, y = sumData.all$Max + 1, label=Letter), vjust=0, size=6) +
ylab("Distances") +
ylim(0,15)+
theme_bw() +
theme(legend.position="none",
legend.title = element_text(size=13, face='bold'),
plot.title = element_text(hjust = 0.5, size = 15, face='bold'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=15),
axis.title.y=element_text(size=16,face="bold"),
axis.title.x=element_blank(),
legend.text=element_text(size=13),
legend.spacing.x = unit(0.05, 'cm'))+
annotate("text",x=0.5,y=1,label= "P-value < 0.0001", hjust = 0, size = 6, fontface='italic')
dist.bulk.all
x
x1 <- x[,c(1,2,3,4)]
x1
#calculate dist between groups
d.calcul <- dist_groups(test, item_groups)
#Control
tab.distance = as_tibble(d.calcul)
tab.distance.C <- subset(tab.distance, Label%in% c("Between cont.M and rain.M","Between cont.D and rain.D","Between cont.K and rain.K"))
tab.distance.C$Label <- factor(tab.distance.C$Label)
tab.distance.C$Label
str(tab.distance.C)
tab.distance.C$Group2 <- as.character(tab.distance.C$Group2)
tab.distance.C.ed <- tab.distance.C %>%
mutate(Treatment = case_when(
endsWith(Group2, "D") ~ "BIODYN (D)",
endsWith(Group2, "K") ~ "CONFYM (K)",
endsWith(Group2, "M") ~ "CONMIN (M)"))
str(tab.distance.C.ed)
tab.distance.C.ed2 <- tab.distance.C.ed %>%
mutate(Label = factor(Label,
levels = c("Between cont.D and rain.D",
"Between cont.K and rain.K",
"Between cont.M and rain.M")))
str(tab.distance.C.ed2)
tab.distance.C.ed2$Label <- factor(tab.distance.C.ed2$Label)
# Kruskal-Wallis Test
set.seed(1333)
kruskal.test(Distance ~ Label,
data = tab.distance.C.ed2) #Kruskal-Wallis chi-squared = 361.86, df = 2, p-value < 2.2e-16
# Post Hoc Dunn Test
set.seed(1333)
aoa.BS.dunn <- dunnTest(Distance ~ Label,
data = tab.distance.C.ed2, method = "bh")
aoa.BS.dunn
# Make the significance letter
CLD.all = cldList(P.adj ~ Comparison, data=aoa.BS.dunn$res)
CLD.all
# Plot
sumData.all <- ddply(tab.distance.C.ed2, "Label", summarise,
Max = max(Distance),
N    = length(Distance),
Mean = mean(Distance),
Sd   = sd(Distance),
Se   = Sd / sqrt(N))
rownames(CLD.all) = sumData.all$Label
CLD.all.ed = rownames_to_column(CLD.all, var="Label")
CLD.all.ed
CLD.all.ed2 <- CLD.all.ed %>%
mutate(Treatment = case_when(
endsWith(Group, "D") ~ "BIODYN (D)",
endsWith(Group, "K") ~ "CONFYM (K)",
endsWith(Group, "M") ~ "CONMIN (M)"))
tab.distance.C.ed2$Treatment <- as.factor(tab.distance.C.ed2$Treatment)
# Plot
dist.bulk.all<- ggplot(tab.distance.C.ed2, aes(x = Label, y = Distance)) +
geom_boxplot(width=0.7,lwd=0.7,aes(fill=Label)) +
scale_fill_manual(values = c("#009E73","#FF618C","#E69F00"))+
scale_x_discrete(labels = c("control vs drought \nBIODYN","control vs drought \nCONFYM","control vs drought \nCONMIN"))+
geom_text(data=CLD.all.ed2,aes(x=Label, y = sumData.all$Max + 1, label=Letter), vjust=0, size=6) +
ylab("Distances") +
ylim(0,15)+
theme_bw() +
theme(legend.position="none",
legend.title = element_text(size=13, face='bold'),
plot.title = element_text(hjust = 0.5, size = 15, face='bold'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=15),
axis.title.y=element_text(size=16,face="bold"),
axis.title.x=element_blank(),
legend.text=element_text(size=13),
legend.spacing.x = unit(0.05, 'cm'))+
annotate("text",x=0.5,y=1,label= "P-value < 0.0001", hjust = 0, size = 6, fontface='italic')
dist.bulk.all

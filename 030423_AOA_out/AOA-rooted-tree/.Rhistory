library(devtools)
library(dada2)
library(ShortRead)
library(Biostrings)
updateR()
response=rnbinom(768,size=0.5,mu=2)
treatment=factor(rep(c("one","two","three","four"),times=192))
covariate=rnbinom(768,size=.01,mu=4)
date=factor(rep(1:12,each=64))
plotID=factor(rep(c("P1","P2","P3","P4","P5","P6","P7","P8","P9","P10","P11",
"P12","P13","P14","P15","P16"),each=4,times=12))
response
treatment
plotID
dat1= data.frame(response, treatment, covariate, date, plotID)
View(dat1)
data(irrigation, package = "faraway")
install.packages("faraway")
library(faraway)
data(irrigation, package = "faraway")
summary(irrigation)
View(faraway)
View(irrigation)
library(multcomp)
library(car)
# Install packages
install.packages(c('vegan', 'tidyverse'))
install.packages('reshape')
# Install packages
install.packages("Rtools")
library(multcomp)
library(car)
library(BiocManager)
library(vegan)
library(plyr)
library(multcomp)
library(car)
library(BiocManager)
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(ggtext)
library(reshape)
library(ggpubr)
library(car)
library(agricolae)
library(multcompView)
library(grid)
library(gridExtra)
library(sjmisc)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(onewaytests)
library(ggsignif)
library(PerformanceAnalytics)
library(gvlma)
library(ggpmisc)
library(tibble)
library(fitdistrplus)
library(lme4)
library(nlme)
library(ape)
library(multcomp)
library(car)
library(BiocManager)
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(ggtext)
library(reshape)
library(ggpubr)
library(car)
library(agricolae)
library(multcompView)
library(grid)
library(gridExtra)
library(sjmisc)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(onewaytests)
library(ggsignif)
library(PerformanceAnalytics)
library(gvlma)
library(ggpmisc)
library(tibble)
library(fitdistrplus)
library(lme4)
library(nlme)
library(ape)
install.packages("sjPlot")
library(sjPlot)
install.packages("sjPlot")
library(sjPlot)
library(multcomp)
# Install packages
install.packages(c('vegan', 'tidyverse'))
install.packages('reshape')
install.packages("ggpubr")
install.packages("car")
install.packages("agricolae")
install.packages("multcompView")
library(devtools)
library(multcomp)
library(car)
library(BiocManager)
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(ggtext)
library(reshape)
library(ggpubr)
library(car)
library(agricolae)
library(multcompView)
library(grid)
library(gridExtra)
library(sjmisc)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(onewaytests)
library(ggsignif)
library(PerformanceAnalytics)
library(gvlma)
library(ggpmisc)
library(tibble)
library(fitdistrplus)
library(lme4)
library(nlme)
library(ape)
library(phyloseq)
library(glmmTMB)
?reinstalling
####################################################
# DIFFERENTIAL ABUNDANCE
##################################################
install.packages("glmmTMB", type="source")
install.packages("glmmTMB", type = "source")
R.version.string
####################################################
# DIFFERENTIAL ABUNDANCE
##################################################
#install.packages("glmmTMB", type="source")
library(TMB)
####################################################
# DIFFERENTIAL ABUNDANCE
##################################################
#install.packages("glmmTMB", type="source")
install.packages("glmmTMB", dependencies = TRUE)
library(TMB)
library(glmmTMB)
library(devtools)
library(multcomp)
library(car)
library(BiocManager)
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(ggtext)
library(reshape)
library(ggpubr)
library(car)
library(agricolae)
library(multcompView)
library(grid)
library(gridExtra)
library(sjmisc)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(onewaytests)
library(ggsignif)
library(PerformanceAnalytics)
library(gvlma)
library(ggpmisc)
library(tibble)
library(fitdistrplus)
library(lme4)
library(nlme)
library(ape)
library(phyloseq)
packageVersion("vegan")
########################################################################################
# Pairwise comparison analyses across treatments and between irrigation within date
########################################################################################
#devtools::install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(pairwiseAdonis)
PackageVersion("pairwiseAdonis")
packageVersion("pairwiseAdonis")
packageVersion("phyloseq")
####################################################
# DIFFERENTIAL ABUNDANCE
##################################################
#install.packages("glmmTMB")
library(glmmTMB)
library(emmeans)
packageVersion("glmmTMB")
packageVersion("emmeans")
library(multcomp)
library(car)
library(BiocManager)
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(ggtext)
library(reshape)
library(ggpubr)
library(car)
library(agricolae)
library(multcompView)
library(grid)
library(gridExtra)
library(sjmisc)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(onewaytests)
library(ggsignif)
library(PerformanceAnalytics)
library(gvlma)
library(ggpmisc)
library(tibble)
library(fitdistrplus)
library(lme4)
library(nlme)
library(ape)
library(devtools)
library(phyloseq)
setwd('D:/Fina/INRAE_Project/microservices/030423_AOA_out/AOA.ASV-analysis')
wd <- print(getwd())
# load the asv table
aoa.asv <- read.table('annotated.AOA.ASVs.counts.tsv', sep='\t', header=T, row.names = 1, check.names = FALSE)
dim(aoa.asv) # 646  192
sort(rowSums(aoa.asv, na.rm = FALSE, dims = 1), decreasing = F) # there are no asv that does not exist in at least one sample.
# load the taxonomy table
#setwd('/Users/arifinabintarti/Documents/France/microservices/030423_AOA_out/')
setwd('D:/Fina/INRAE_Project/microservices/030423_AOA_out/')
aoa.tax <- read.table("besthit.diamond.output.curateddb.AOA.ASVs.edited.csv", sep = ';', header=T)
dim(aoa.tax) # 646
# load the metadata
#setwd('/Users/arifinabintarti/Documents/France/microservices/')
setwd('D:/Fina/INRAE_Project/microservices/')
meta_micro <- read.csv("meta_microservices.csv")
# load phylogenetic tree (nwk file)
setwd('D:/Fina/INRAE_Project/microservices/030423_AOA_out/AOA-rooted-tree/')
AOA_rooted_tree <- ape::read.tree("tree.nwk")
AOA_rooted_tree
re_order <- match(rownames(meta_micro), colnames(aoa.asv))
aoa.asv.ord  <- aoa.asv[ ,re_order]
aoa.asv.physeq = otu_table(aoa.asv.ord, taxa_are_rows = TRUE) # asv table
sample_names(aoa.asv.physeq)
# adding "S" for sample names to avoid possible problem later on
sample_names(aoa.asv.physeq) <- paste0("S", sample_names(aoa.asv.physeq))
# phyloseq object of the taxonomy table
aoa.tax <- column_to_rownames(aoa.tax, var = "ASVid")
#row.names(aoa.tax) <- aoa.tax$ASVid
aoa.tax.physeq = tax_table(as.matrix(aoa.tax)) # taxonomy table
# phyloseq object of the metadata
meta_micro$Date <- factor(meta_micro$Date, levels = c("4/28/22", "06/01/2022", "07/05/2022", "7/20/22", "9/13/22"),
labels = c("04-28-22", "06-01-22", "07-05-22", "07-20-22", "09-13-22"))
rownames(meta_micro) <- sample_names(aoa.asv.physeq)
aoa.meta.physeq <- sample_data(meta_micro)# meta data
sample_names(aoa.meta.physeq)
# read the rooted tree
setwd('D:/Fina/INRAE_Project/microservices/030423_AOA_out/AOA-rooted-tree/')
AOA_rooted_tree <- ape::read.tree("tree.nwk")
# make phyloseq object
aoa.physeq <- merge_phyloseq(aoa.asv.physeq,aoa.tax.physeq,aoa.meta.physeq,AOA_rooted_tree)
aoa.physeq
sample_data(aoa.physeq)$SampleID <- paste0("S", sample_data(aoa.physeq)$SampleID)
sample_data(aoa.physeq)
# rarefy to minimum sequencing depth (minimum reads = 3832 reads)
set.seed(13)
aoa.rare.min.physeq <- rarefy_even_depth(aoa.physeq, sample.size = min(sample_sums(aoa.physeq)),
rngseed = 13, replace = FALSE, trimOTUs = TRUE, verbose = TRUE)
aoa.rare.min.physeq
sort(sample_sums(aoa.rare.min.physeq), decreasing = F) # 54 OTUs were removed because they are no longer present in any sample after random subsampling
# no sample removed
sort(rowSums(otu_table(aoa.rare.min.physeq), na.rm = FALSE, dims = 1), decreasing = F)
colSums(otu_table(aoa.rare.min.physeq))
aoarare.asv.df <- as.data.frame(otu_table(aoa.rare.min.physeq))
dim(aoarare.asv.df) # 592 ASVs, 192 samples
aoarare.asv.df_pa <- 1*(aoarare.asv.df>0)
aoa.s <- specnumber(aoarare.asv.df, MARGIN = 2) # richness
aoa.richness <- as.data.frame(aoa.s)
aoa.h <- diversity(t(aoarare.asv.df), index = 'shannon') # Shannon index
aoa.shannon <- as.data.frame(aoa.h)
aoa.d <- diversity(t(aoarare.asv.df), index = 'simpson') # Simpson index
aoa.simpson <- as.data.frame(aoa.d)
aoa.inv.d <- diversity(t(aoarare.asv.df), index = 'invsimpson')
# 1. Richness
# Line plot of AOA richness
aoa.meta.df <- data.frame(meta_micro)
aoa.meta.df$Richness <- aoa.s
aoa.meta.df$Shannon <- aoa.h
aoa.meta.df$Simpson <- aoa.d
aoa.meta.df$InvSimpson <- aoa.inv.d
#aob.min.meta.df$Date  <- as.Date(aob.min.meta.df$Date , "%m/%d/%Y")
str(aoa.meta.df)
aoa.meta.df$Type <- factor(aoa.meta.df$Type, levels = c("BS", "RS"),
labels = c("Bulk Soil", "Rhizosphere"))
aoa.meta.df$Treatment <- factor(aoa.meta.df$Treatment, levels = c("D", "K", "M"),
labels = c("Biodynamic", "Conventional", "Mineral fertilized"))
aoa.meta.df$SampleID<-as.factor(aoa.meta.df$SampleID)
aoa.meta.df$PlotID<-as.factor(aoa.meta.df$PlotID)
aoa.meta.df$Irrigation<-as.factor(aoa.meta.df$Irrigation)
# tidy up the data frame
aoa.meta.df.tidy <- aoa.meta.df %>%
group_by(Irrigation, Treatment, Date, Type, var2,var3) %>%
summarize(Mean.Rich=mean(Richness),
Mean.Sha=mean(Shannon),
Mean.Simp=mean(Simpson),
Mean.invsimp=mean(InvSimpson))
str(aoa.meta.df.tidy)
aoarare.asv.df
aoa.asv.bulk <- aoarare.asv.df[,1:120]
aoa.asv.bulk1 <- aoa.asv.bulk[rowSums(aoa.asv.bulk)>0,]
sort(rowSums(aoa.asv.bulk1, na.rm = FALSE, dims = 1), decreasing = FALSE)
aoa.bulk_dist_bc <- vegdist(t(aoa.asv.bulk1), method = "bray")
# jaccard - Bulk Soil :
aoa.bulk_dist_jac <- vegdist(t(aoa.asv.bulk1), binary = TRUE, method = "jaccard")
# Weighted UniFrac (rarefied) - Bulk Soil:
aoa.physeq_bulk <- subset_samples(aoa.rare.min.physeq, Type=="BS")
aoa.physeq_bulk1 <- prune_taxa(taxa_sums(aoa.physeq_bulk)>0, aoa.physeq_bulk)
aoa.physeq_bulk1
sort(taxa_sums(aoa.physeq_bulk1), decreasing =F) #checking
aoa.bulk_dist_wUF <- UniFrac(aoa.physeq_bulk1, weighted=TRUE, normalized = TRUE)
aoa.bulk_dist_wUF
# Unweighted UniFrac (rarefied) -  Bulk Soil:
aoa.bulk_dist_uwUF <- UniFrac(aoa.physeq_bulk1, weighted=FALSE, normalized = TRUE)
aoa.bulk_dist_uwUF
# 2. CMD/classical multidimensional scaling (MDS) of a data matrix. Also known as principal coordinates analysis
# Bray-Curtis - Bulk Soil:
aoa.bulk_pcoa_bc <- cmdscale(aoa.bulk_dist_bc, eig=T)
# Jaccard - Bulk Soil:
aoa.bulk_pcoa_jac <- cmdscale(aoa.bulk_dist_jac, eig=T)
# Weighted UniFrac - Bulk Soil:
aoa.bulk_pcoa_wUF <- cmdscale(aoa.bulk_dist_wUF, eig=T)
# Unweighted UniFrac - Bulk Soil:
aoa.bulk_pcoa.uwUF <- cmdscale(aoa.bulk_dist_uwUF, eig=T)
# 3. scores of PC1 and PC2
# Bray-Curtis - Bulk Soil:
ax1.scores.bulk <- aoa.bulk_pcoa_bc$points[,1]
ax2.scores.bulk <- aoa.bulk_pcoa_bc$points[,2]
# Jaccard - Bulk Soil:
ax1.scores.j.bulk <- aoa.bulk_pcoa_jac$points[,1]
ax2.scores.j.bulk <- aoa.bulk_pcoa_jac$points[,2]
# Weighted UniFrac - Bulk Soil:
ax1.scores.wUF.bulk <- aoa.bulk_pcoa_wUF$points[,1]
ax2.scores.wUF.bulk <- aoa.bulk_pcoa_wUF$points[,2]
# Unweighted UniFrac - Bulk Soil:
ax1.scores.uwUF.bulk <- aoa.bulk_pcoa.uwUF$points[,1]
ax2.scores.uwUF.bulk <- aoa.bulk_pcoa.uwUF$points[,2]
#env_fit <- envfit(otu_pcoa, env, na.rm=TRUE)
# 4. Envfit
env.aoa.bulk <- aoa.meta.df[1:120,c(13:19, 22,26:28)]
str(env.aoa.bulk)
env.aoa.bulk <- env.aoa.bulk %>% mutate_at(colnames(env.aoa.bulk), as.numeric)
# bray-curtis
set.seed(13)
env_fit.aoa.bc.bulk <- envfit(aoa.bulk_pcoa_bc, env.aoa.bulk, na.rm=TRUE)
env_fit.aoa.bc.bulk
# Jaccard
set.seed(13)
env_fit.aoa.jac <- envfit(aoa.bulk_pcoa_jac, env.aoa.bulk, na.rm=TRUE)
# Weighted UniFrac
set.seed(13)
env_fit.aoa.wuF <- envfit(aoa.bulk_pcoa_wUF, env.aoa.bulk, na.rm=TRUE)
# UnWeighted UniFrac
set.seed(13)
env_fit.aoa.uwuF <- envfit(aoa.bulk_pcoa.uwUF, env.aoa.bulk, na.rm=TRUE)
# 5. calculate percent variance explained, then add to plot
aoa.meta.bulk <- aoa.meta.df[1:120,]
# Bray-curtis - Bulk Soil:
ax1.bulk <- aoa.bulk_pcoa_bc$eig[1]/sum(aoa.bulk_pcoa_bc$eig)
ax2.bulk <- aoa.bulk_pcoa_bc$eig[2]/sum(aoa.bulk_pcoa_bc$eig)
aoa.map.pcoa.bulk <- cbind(aoa.meta.bulk,ax1.scores.bulk,ax2.scores.bulk)
# Jaccard - Bulk Soil:
ax1.j.bulk <- aoa.bulk_pcoa_jac$eig[1]/sum(aoa.bulk_pcoa_jac$eig)
ax2.j.bulk <- aoa.bulk_pcoa_jac$eig[2]/sum(aoa.bulk_pcoa_jac$eig)
aoa.map.pcoa.j.bulk <- cbind(aoa.meta.bulk,ax1.scores.j.bulk,ax2.scores.j.bulk)
# Weighted UniFrac - Bulk Soil:
ax1.wUF.bulk <- aoa.bulk_pcoa_wUF$eig[1]/sum(aoa.bulk_pcoa_wUF$eig)
ax2.wUF.bulk <- aoa.bulk_pcoa_wUF$eig[2]/sum(aoa.bulk_pcoa_wUF$eig)
aoa.map.pcoa.wUF.bulk <- cbind(aoa.meta.bulk,ax1.scores.wUF.bulk,ax2.scores.wUF.bulk)
# Unweighted UniFrac - Bulk Soil:
ax1.uwUF.bulk <- aoa.bulk_pcoa.uwUF$eig[1]/sum(aoa.bulk_pcoa.uwUF$eig)
ax2.uwUF.bulk <- aoa.bulk_pcoa.uwUF$eig[2]/sum(aoa.bulk_pcoa.uwUF$eig)
aoa.map.pcoa.uwUF.bulk <- cbind(aoa.meta.bulk,ax1.scores.uwUF.bulk,ax2.scores.uwUF.bulk)
# A. Bray-Curtis - Bulk Soil :
install.packages('phytomosaic')
# A. Bray-Curtis - Bulk Soil :
remotes::install_github("phytomosaic/ecole")
library(phytomosaic/ecole)
library(phytomosaic)
library(ecole)
set.seed(133)
aoa.meta.bulk.ed
# 1. Using adonis2 package with defined perm to restrict the permutation
block=as.factor(aoa.meta.bulk$Block)
plot=as.factor(aoa.meta.bulk$PlotID)
TxI=as.factor(aoa.meta.bulk$x)
set.seed(133)
permanova_pairwise(
aoa.bulk_dist_bc,
grp=TxI,
permutations = 999,
method = "bray",
padj = "fdr")

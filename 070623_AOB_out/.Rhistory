aob.bulk_pcoa_jac <- cmdscale(aob.bulk_dist_jac, eig=T)
# Weighted UniFrac - Bulk Soil:
aob.bulk_pcoa_wUF <- cmdscale(aob.bulk_dist_wUF, eig=T)
# Unweighted UniFrac - Bulk Soil:
aob.bulk_pcoa.uwUF <- cmdscale(aob.bulk_dist_uwUF, eig=T)
# 3. scores of PC1 and PC2
# Bray-Curtis - Bulk Soil:
ax1.scores.bulk <- aob.bulk_pcoa_bc$points[,1]
ax2.scores.bulk <- aob.bulk_pcoa_bc$points[,2]
# Jaccard - Bulk Soil:
ax1.scores.j.bulk <- aob.bulk_pcoa_jac$points[,1]
ax2.scores.j.bulk <- aob.bulk_pcoa_jac$points[,2]
# Weighted UniFrac - Bulk Soil:
ax1.scores.wUF.bulk <- aob.bulk_pcoa_wUF$points[,1]
ax2.scores.wUF.bulk <- aob.bulk_pcoa_wUF$points[,2]
# Unweighted UniFrac - Bulk Soil:
ax1.scores.uwUF.bulk <- aob.bulk_pcoa.uwUF$points[,1]
ax2.scores.uwUF.bulk <- aob.bulk_pcoa.uwUF$points[,2]
# 4. Envfit
env.aob.bulk <- aob.meta.df.sub[1:119,c(14:20, 23,27:29)]
str(env.aob.bulk)
env.aob.bulk <- env.aob.bulk %>% mutate_at(c('GWC_g_g', 'TS', 'NH4', 'NO3', 'Nmin_tot', 'C_tot', 'N_tot', 'pH', 'K_mgkg', 'Mg_mgkg', 'P_mgkg'), as.numeric)
# bray-curtis
set.seed(149)
env_fit.aob.bc.bulk <- envfit(aob.bulk_pcoa_bc, env.aob.bulk, na.rm=TRUE)
env_fit.aob.bc.bulk
# Jaccard
env_fit.aob.jac <- envfit(aob.bulk_pcoa_jac, env.aob.bulk, na.rm=TRUE)
# Weighted UniFrac
env_fit.aob.wuF <- envfit(aob.bulk_pcoa_wUF, env.aob.bulk, na.rm=TRUE)
# UnWeighted UniFrac
env_fit.aob.uwuF <- envfit(aob.bulk_pcoa.uwUF, env.aob.bulk, na.rm=TRUE)
# 5. calculate percent variance explained, then add to plot
aob.meta.bulk <- aob.meta.df.sub[1:119,]
# Bray-curtis - Bulk Soil:
ax1.bulk <- aob.bulk_pcoa_bc$eig[1]/sum(aob.bulk_pcoa_bc$eig)
ax2.bulk <- aob.bulk_pcoa_bc$eig[2]/sum(aob.bulk_pcoa_bc$eig)
aob.map.pcoa.bulk <- cbind(aob.meta.bulk,ax1.scores.bulk,ax2.scores.bulk)
# Jaccard - Bulk Soil:
ax1.j.bulk <- aob.bulk_pcoa_jac$eig[1]/sum(aob.bulk_pcoa_jac$eig)
ax2.j.bulk <- aob.bulk_pcoa_jac$eig[2]/sum(aob.bulk_pcoa_jac$eig)
aob.map.pcoa.j.bulk <- cbind(aob.meta.bulk,ax1.scores.j.bulk,ax2.scores.j.bulk)
# Weighted UniFrac - Bulk Soil:
ax1.wUF.bulk <- aob.bulk_pcoa_wUF$eig[1]/sum(aob.bulk_pcoa_wUF$eig)
ax2.wUF.bulk <- aob.bulk_pcoa_wUF$eig[2]/sum(aob.bulk_pcoa_wUF$eig)
aob.map.pcoa.wUF.bulk <- cbind(aob.meta.bulk,ax1.scores.wUF.bulk,ax2.scores.wUF.bulk)
# Unweighted UniFrac - Bulk Soil:
ax1.uwUF.bulk <- aob.bulk_pcoa.uwUF$eig[1]/sum(aob.bulk_pcoa.uwUF$eig)
ax2.uwUF.bulk <- aob.bulk_pcoa.uwUF$eig[2]/sum(aob.bulk_pcoa.uwUF$eig)
aob.map.pcoa.uwUF.bulk <- cbind(aob.meta.bulk,ax1.scores.uwUF.bulk,ax2.scores.uwUF.bulk)
aob.asv.rh <- aob.asv.rare1k[,120:191]
aob.asv.rh1 <- aob.asv.rh[rowSums(aob.asv.rh)>0,]
sort(rowSums(aob.asv.rh1, na.rm = FALSE, dims = 1), decreasing = FALSE)
dim(aob.asv.rh1) #831
aob.rh_dist_bc <- vegdist(t(aob.asv.rh1), method = "bray")
# jaccard - Rhizosphere :
aob.rh_dist_jac <- vegdist(t(aob.asv.rh1), binary = TRUE, method = "jaccard")
# Weighted UniFrac (rarefied) - Rhizosphere :
aob.physeq_rh <- subset_samples(aob.rare.1282.seq, Type=="RS")
aob.physeq_rh1 <- prune_taxa(taxa_sums(aob.physeq_rh)>0, aob.physeq_rh)
aob.physeq_rh1
sort(taxa_sums(aob.physeq_rh1), decreasing =F) #checking
aob.rh_dist_wUF <- UniFrac(aob.physeq_rh1, weighted=TRUE, normalized = TRUE)
aob.rh_dist_wUF
# Unweighted UniFrac (rarefied) -  Rhizosphere :
aob.rh_dist_uwUF <- UniFrac(aob.physeq_rh1, weighted=FALSE, normalized = TRUE)
aob.rh_dist_uwUF
# 2. CMD/classical multidimensional scaling (MDS) of a data matrix. Also known as principal coordinates analysis
# Bray-Curtis - Rhizosphere :
aob.rh_pcoa_bc <- cmdscale(aob.rh_dist_bc, eig=T)
# Jaccard - Rhizosphere :
aob.rh_pcoa_jac <- cmdscale(aob.rh_dist_jac, eig=T)
# Weighted UniFrac - Rhizosphere :
aob.rh_pcoa_wUF <- cmdscale(aob.rh_dist_wUF, eig=T)
# Unweighted UniFrac - Rhizosphere :
aob.rh_pcoa.uwUF <- cmdscale(aob.rh_dist_uwUF, eig=T)
# 3. scores of PC1 and PC2
# Bray-Curtis - Rhizosphere :
ax1.scores.rh <- aob.rh_pcoa_bc$points[,1]
ax2.scores.rh <- aob.rh_pcoa_bc$points[,2]
# Jaccard - Rhizosphere :
ax1.scores.j.rh <- aob.rh_pcoa_jac$points[,1]
ax2.scores.j.rh <- aob.rh_pcoa_jac$points[,2]
# Weighted UniFrac - Rhizosphere :
ax1.scores.wUF.rh <- aob.rh_pcoa_wUF$points[,1]
ax2.scores.wUF.rh <- aob.rh_pcoa_wUF$points[,2]
# Unweighted UniFrac - Rhizosphere :
ax1.scores.uwUF.rh <- aob.rh_pcoa.uwUF$points[,1]
ax2.scores.uwUF.rh <- aob.rh_pcoa.uwUF$points[,2]
aob.meta.rh <- aob.meta.df.sub[120:191,]
# Bray-curtis - Rhizosphere :
ax1.rh <- aob.rh_pcoa_bc$eig[1]/sum(aob.rh_pcoa_bc$eig)
ax2.rh <- aob.rh_pcoa_bc$eig[2]/sum(aob.rh_pcoa_bc$eig)
aob.map.pcoa.rh <- cbind(aob.meta.rh,ax1.scores.rh,ax2.scores.rh)
# Jaccard - Rhizosphere :
ax1.j.rh <- aob.rh_pcoa_jac$eig[1]/sum(aob.rh_pcoa_jac$eig)
ax2.j.rh <- aob.rh_pcoa_jac$eig[2]/sum(aob.rh_pcoa_jac$eig)
aob.map.pcoa.j.rh <- cbind(aob.meta.rh,ax1.scores.j.rh,ax2.scores.j.rh)
# Weighted UniFrac - Rhizosphere :
ax1.wUF.rh <- aob.rh_pcoa_wUF$eig[1]/sum(aob.rh_pcoa_wUF$eig)
ax2.wUF.rh <- aob.rh_pcoa_wUF$eig[2]/sum(aob.rh_pcoa_wUF$eig)
aob.map.pcoa.wUF.rh <- cbind(aob.meta.rh,ax1.scores.wUF.rh,ax2.scores.wUF.rh)
# Unweighted UniFrac - Rhizosphere :
ax1.uwUF.rh <- aob.rh_pcoa.uwUF$eig[1]/sum(aob.rh_pcoa.uwUF$eig)
ax2.uwUF.rh <- aob.rh_pcoa.uwUF$eig[2]/sum(aob.rh_pcoa.uwUF$eig)
aob.map.pcoa.uwUF.rh <- cbind(aob.meta.rh,ax1.scores.uwUF.rh,ax2.scores.uwUF.rh)
###############################################################################
# 6. PCoA Plot
#require("ggrepel")
library(ggrepel)
#install.packages("viridis")
library(viridis)
# A. Bray-Curtis - Bulk Soil :
#remotes::install_github("phytomosaic/ecole")
library(ecole)
set.seed(133)
permanova_pairwise(
aoa.bulk_dist_bc,
grp=TxI,
permutations = 999,
method = "bray",
padj = "fdr")
block=as.factor(aoa.meta.bulk$Block)
plot=as.factor(aoa.meta.bulk$PlotID)
TxI=as.factor(aoa.meta.bulk$x)
set.seed(133)
permanova_pairwise(
aoa.bulk_dist_bc,
grp=TxI,
permutations = 999,
method = "bray",
padj = "fdr")
set.seed(133)
set.seed(133)
aoa.adonis.bulk.x <- adonis2(aoa.bulk_dist_bc ~ Irrigation*Treatment, strata=block, data=aoa.meta.bulk.ed,
permutations = 999) # not significant
# run Bray-Curtis beta diversity on bulk soil
aoa.bulk_dist_bc <- vegdist(t(aoa.asv.bulk1), method = "bray")
aoa.bulk_dist_bc
# metadata
aoa.meta.bulk
aoa.meta.bulk.ed <- aoa.meta.bulk[,-30:-45]
aoa.meta.bulk.ed$x <- as.factor(aoa.meta.bulk.ed$x)
set.seed(133)
aoa.adonis.bulk.x <- adonis2(aoa.bulk_dist_bc ~ Irrigation*Treatment, strata=block, data=aoa.meta.bulk.ed,
permutations = 999) # not significant
aoa.adonis.bulk.x
# similar with below:
set.seed(133)
perm2 = how(nperm = 999,
within = Within(type="free"),
#plots = Plots(strata = block, type = "free"))
blocks = block)
set.seed(133)
aoa.adonis.bulk.perm <- adonis2(aoa.bulk_dist_bc ~ Irrigation*Treatment, data=aoa.meta.bulk.ed,
permutations = perm2)
aoa.adonis.bulk.perm
# this one give significant irrigation:
set.seed(133)
perm1 = how(nperm = 999,
within = Within(type="free"),
plots = with(aoa.meta.bulk,
Plots(strata=Block,
type="free")))
# similar with below:
set.seed(133)
perm1 = how(nperm = 999,
within = Within(type="free"),
#plots = Plots(strata = block, type = "free"))
blocks = block)
set.seed(133)
aoa.adonis.bulk.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation*Treatment, data=aoa.meta.bulk.ed,
permutations = perm1)
aoa.adonis.bulk.perm1
# this one give significant irrigation:
set.seed(133)
perm2 = how(nperm = 999,
within = Within(type="free"),
plots = with(aoa.meta.bulk,
Plots(strata=Block,
type="free")))
set.seed(133)
# this one give significant irrigation:
set.seed(133)
perm2 = how(nperm = 999,
within = Within(type="free"),
plots = with(aoa.meta.bulk,
Plots(strata=Block,
type="free")))
set.seed(133)
aoa.adonis.bulk.perm2 <- adonis2(test ~ Treatment*Irrigation, data=aoa.meta.bulk.ed,
permutations = perm2) # not significant
set.seed(133)
aoa.adonis.bulk.perm2 <- adonis2(aoa.bulk_dist_bc ~ Treatment*Irrigation, data=aoa.meta.bulk.ed,
permutations = perm2) # not significant
aoa.adonis.bulk.perm2
# 2. Using ANOSIM package and define the strata
set.seed(133)
# 2. Using ANOSIM package and define the strata
set.seed(133)
anosim(aoa.bulk_dist_bc,
grouping = aoa.meta.bulk.ed$Irrigation, permutations = 999, strata = block)
#. 3. Using dbrda()
set.seed(133)
dbrda.aoa <- dbrda(aoa.bulk_dist_bc ~ Treatment*Irrigation,
data=aoa.meta.bulk.ed)
print(dbrda.aoa)
#. 3. Using dbrda()
set.seed(133)
dbrda.aoa <- dbrda(aoa.bulk_dist_bc ~ Treatment+Irrigation,
data=aoa.meta.bulk.ed)
print(dbrda.aoa)
#. 3. Using dbrda()
set.seed(133)
dbrda.aoa <- dbRDA(aoa.bulk_dist_bc ~ Treatment+Irrigation,
data=aoa.meta.bulk.ed)
#. 3. Using dbrda()
set.seed(133)
dbrda.aoa <- dbrda(aoa.bulk_dist_bc ~ Treatment+Irrigation,
data=aoa.meta.bulk.ed)
dbrda.aoa
#. 3. Using dbrda()
set.seed(133)
dbrda.aoa <- dbrda(aoa.bulk_dist_bc ~ Treatment+Irrigation,
data=aoa.meta.bulk.ed, distance = "bray")
print(dbrda.aoa)
aoa.bulk_pcoa_bc
str(aoa.bulk_pcoa_bc)
# run Bray-Curtis beta diversity on bulk soil
aoa.bulk_dist_bc <- vegdist(t(aoa.asv.bulk1), method = "bray")
aoa.bulk_dist_bc
# metadata
aoa.meta.bulk
aoa.meta.bulk.ed <- aoa.meta.bulk[,-30:-45]
aoa.meta.bulk.ed$x <- as.factor(aoa.meta.bulk.ed$x)
# run CAP on increasing numbers of PCoA axes to check how many axes need to be included in the model (diagnostics).
nc <- nrow(as.matrix(aoa.bulk_dist_bc))
success <- data.frame(m = numeric(nc), class.success = numeric(nc))
set.seed(133)
for (i in 1:50) {
cap <- CAPdiscrim(aoa.bulk_dist_bc ~ x, data = aoa.meta.bulk.ed, m = i, add = TRUE)
success[i, 1] <- cap$m
success[i, 2] <- 100/length(cap$group) * length(which(cap$group == cap$CV))
}
par(mfrow = c(1,1))
plot(success$m, success$class.success, xlab = "Number of PCoA axes included", ylab = "Reclassification success rate (%)")
text(success$m, success$class.success, labels = success$m, pos = 1, cex = 0.6)
# run the final CAP by including PCoA axes showing the highest reclassification rate
set.seed(13)
aoa.cap.bulk <- CAPdiscrim(aoa.bulk_dist_bc ~ x, data = aoa.meta.bulk.ed, m = 44, permutations = 9999, add = TRUE) # 94.16667%
anova(aoa.bulk_pcoa_bc,permutations=999)
anova(aoa.bulk_pcoa_bc$points,permutations=999)
anova(aoa.bulk_pcoa_bc$eig,permutations=999)
anova(aoa.bulk_pcoa_bc$x,permutations=999)
anova(aoa.bulk_pcoa_bc$ac,permutations=999)
anova(aoa.bulk_pcoa_bc$GOF,permutations=999)
test = dbrda(aoa.bulk_dist_bc ~ Irrigation*Treatment+ Condition(patient),)
test = dbrda(aoa.bulk_dist_bc ~ Irrigation*Treatment+ Condition(block),data=aoa.meta.bulk.ed)
test
# similar with below:
set.seed(133)
perm1 = how(nperm = 999,
within = Within(type="free"),
plots = Plots(type = "none"),
blocks = block,
observed = TRUE)
set.seed(133)
aoa.adonis.bulk.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation*Treatment, data=aoa.meta.bulk.ed,
permutations = perm1)
aoa.adonis.bulk.perm1
set.seed(133)
aoa.adonis.bulk.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = perm1)
aoa.adonis.bulk.perm1
print(dbrda.aoa)
nested.npmanova(aoa.bulk_dist_bc ~ Treatment+Irrigation, data=aoa.meta.bulk.ed,
permutations=999)
set.seed(133)
nested.npmanova(aoa.bulk_dist_bc ~ Treatment*Irrigation, data=aoa.meta.bulk.ed,
permutations=999)
aoa.cap.bulk$PCoA
aoa.cap.bulk$lda.CV
aoa.cap.bulk$lda.other
aoa.cap.bulk$signi
aoa.cap.bulk$manova
aoa.cap.bulk
# run Jaccard beta diversity on bulk soil
aoa.bulk_dist_jac <- vegdist(t(aoa.asv.bulk1), binary = TRUE, method = "jaccard")
# run CAP on increasing numbers of PCoA axes to check how many axes need to be included in the model (diagnostics).
nc <- nrow(as.matrix(aoa.bulk_dist_jac))
success <- data.frame(m = numeric(nc), class.success = numeric(nc))
set.seed(133)
for (i in 1:50) {
cap <- CAPdiscrim(aoa.bulk_dist_jac ~ x, data = aoa.meta.bulk.ed, m = i, add = TRUE)
success[i, 1] <- cap$m
success[i, 2] <- 100/length(cap$group) * length(which(cap$group == cap$CV))
}
par(mfrow = c(1,1))
plot(success$m, success$class.success, xlab = "Number of PCoA axes included", ylab = "Reclassification success rate (%)")
text(success$m, success$class.success, labels = success$m, pos = 1, cex = 0.6)
# run CAP on increasing numbers of PCoA axes to check how many axes need to be included in the model (diagnostics).
nc <- nrow(as.matrix(aoa.bulk_dist_jac))
success <- data.frame(m = numeric(nc), class.success = numeric(nc))
set.seed(133)
for (i in 1:100) {
cap <- CAPdiscrim(aoa.bulk_dist_jac ~ x, data = aoa.meta.bulk.ed, m = i, add = TRUE)
success[i, 1] <- cap$m
success[i, 2] <- 100/length(cap$group) * length(which(cap$group == cap$CV))
}
par(mfrow = c(1,1))
plot(success$m, success$class.success, xlab = "Number of PCoA axes included", ylab = "Reclassification success rate (%)")
text(success$m, success$class.success, labels = success$m, pos = 1, cex = 0.6)
# run the final CAP by including PCoA axes showing the highest reclassification rate
set.seed(13)
aoa.cap.bulk.jac <- CAPdiscrim(aoa.bulk_dist_jac ~ x, data = aoa.meta.bulk.ed, m = 50, permutations = 9999, add = TRUE) # 94.16667%
success <- cbind(data.frame(aoa.cap.bulk.jac$group), data.frame(aoa.cap.bulk.jac$CV))
colnames(success) <- c("source", "classified")
rownames(success) <- rownames(aoa.cap.bulk.jac$PCoA)
success <- success[order(success$source), ]
success
aoa.cap1.bulk.jac <- paste("CAP1 (", round((100/sum(aoa.cap.bulk.jac$lda.other$svd^2) * aoa.cap.bulk.jac$lda.other$svd^2)[1],
digits = 1), "%)", sep = "")
aoa.cap2.bulk.jac <- paste("CAP2 (", round((100/sum(aoa.cap.bulk.jac$lda.other$svd^2) * aoa.cap.bulk.jac$lda.other$svd^2)[2],
digits = 1), "%)", sep = "")
plot(aoa.cap.bulk.jac$x[, 1:2], xlab = aoa.cap1.bulk.jac, ylab = aoa.cap2.bulk.jac, pch = c(16, 17),
col = c("#009E73","#FF618C","#E69F00", "#009E73", "#FF618C", "#E69F00")[aoa.meta.bulk.ed$x])
ordiellipse(aoa.cap.bulk.jac$x[, 1:2], groups = aoa.meta.bulk.ed$x, draw = "polygon",
col = c("#009E73","#FF618C","#E69F00", "#009E73", "#FF618C", "#E69F00"), pch = c(16, 17),
kind = "ehull",   border = NA, alpha = 50)
aoa.cap.jac.plot <- ggplot(as.data.frame(aoa.cap.bulk.jac$x), aes(x = aoa.cap.bulk.jac$x[,1], y = aoa.cap.bulk.jac$x[,2])) +
geom_point(aes(color = aoa.meta.bulk.ed$Treatment, shape = aoa.meta.bulk.ed$Irrigation), size = 2) +
#geom_text(label=aoa.meta.bulk.ed$PlotID)+
xlab(aoa.cap1.bulk.jac) + ylab(aoa.cap2.bulk.jac) +
scale_color_manual(values = c("#009E73","#FF618C","#E69F00"),
name = "Farming system",
labels = c("BIODYN", "CONFYM", "CONMIN")) +
scale_shape_manual(values = c(8, 1),
name = "Irrigation treatment",
labels = c("control", "drought-induced")) + theme_classic() +
scale_fill_manual(values = c("#009E73","#FF618C","#E69F00", "#009E73", "#FF618C", "#E69F00")) +
geom_mark_ellipse(aes(fill = aoa.meta.bulk.ed$x),
expand = 0, linewidth = NA, show.legend = FALSE)  +
labs(title = "AOA")+
theme(axis.text.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 10, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 12, angle = 90, hjust = .5, vjust = .5, face = "plain")) +
#theme(plot.margin = unit(c(1,1,1,1), "cm")) +
theme(legend.position = "none",
legend.title = element_text(size=13),
legend.text = element_text(size=13))
#annotate("text",x=-12,y=-15,label= "Overall reclassification rate: 94.2%", hjust = 0, size = 4)
#annotate("text", x=-12, y=-16.5, label= "Pillai's test=3.1***", hjust = 0, size = 4)
aoa.cap.jac.plot
# 2. Using ANOSIM package and define the strata
set.seed(133)
# 2. Using ANOSIM package and define the strata
set.seed(133)
anosim(aoa.bulk_dist_bc,
grouping = aoa.meta.bulk.ed$Irrigation, permutations = 9999, strata = block)
# this one give significant irrigation:
set.seed(133)
perm2 = how(nperm = 999,
within = Within(type="free"),
plots = with(aoa.meta.bulk,
Plots(strata=Block,
type="free")))
set.seed(133)
aoa.adonis.bulk.perm2 <- adonis2(aoa.bulk_dist_bc ~ Treatment*Irrigation, data=aoa.meta.bulk.ed,
permutations = perm2) # not significant
aoa.adonis.bulk.perm2
# 2. Using ANOSIM package and define the strata
set.seed(133)
aoa.bs.anosim <- anosim(aoa.bulk_dist_bc,
grouping = aoa.meta.bulk.ed$Irrigation, permutations = 999, strata = block)
plot(aoa.bs.anosim)
# 2. Using ANOSIM package and define the strata
set.seed(133)
aoa.bs.anosim <- anosim(aoa.bulk_dist_bc,
grouping = aoa.meta.bulk.ed$x, permutations = 999, strata = block)
plot(aoa.bs.anosim)
# similar with below:
set.seed(133)
perm1 = how(nperm = 999,
within = Within(type="free"),
plots = Plots(type = "none"),
blocks = block,
observed = TRUE)
aoa.bs.anosim
# 2. Using ANOSIM package and define the strata
set.seed(133)
aoa.bs.anosim <- anosim(aoa.bulk_dist_bc,
grouping = aoa.meta.bulk.ed$x, permutations = perm1)
aoa.bs.anosim
summary(aoa.bs.anosim)
str(aoa.bs.anosim)
aoa.bs.anosim$statistic
aoa.bs.anosim$perm
aoa.bs.anosim$permutations
aoa.bs.anosim$signif
set.seed(133)
aoa.adonis.bulk.x <- adonis2(aoa.bulk_dist_bc ~ Irrigation, strata=Treatment, data=aoa.meta.bulk.ed,
permutations = 999) # not significant
aoa.meta.bulk.ed
STR(aoa.meta.bulk.ed)
str(aoa.meta.bulk.ed)
set.seed(133)
aoa.adonis.bulk.x <- adonis2(aoa.bulk_dist_bc ~ Irrigation, strata=aoa.meta.bulk.ed$Treatment, data=aoa.meta.bulk.ed,
permutations = 999) # not significant
aoa.adonis.bulk.x
# similar with below:
set.seed(133)
trt=as.factor(aoa.meta.bulk$Treatment)
# similar with below:
set.seed(133)
perm1 = how(nperm = 999,
within = Within(type="free"),
plots = Plots(type = "none"),
blocks = trt,
observed = TRUE)
set.seed(133)
set.seed(133)
aoa.adonis.bulk.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = perm1)
aoa.adonis.bulk.perm1
aob.cap.bulk
# run CAP on increasing numbers of PCoA axes to check how many axes need to be included in the model (diagnostics).
nc <- nrow(as.matrix(aob.bulk_dist_bc))
success <- data.frame(m = numeric(nc), class.success = numeric(nc))
set.seed(133)
for (i in 1:50) {
cap <- CAPdiscrim(aob.bulk_dist_bc ~ x, data = aob.meta.bulk.ed, m = i, add = TRUE)
success[i, 1] <- cap$m
success[i, 2] <- 100/length(cap$group) * length(which(cap$group == cap$CV))
}
par(mfrow = c(1,1))
aoa.cap.bulk
set.seed(133)
aoa.pwc.bulk.X <- pairwiseAdonis::pairwise.adonis(aoa.bulk_dist_bc,
aoa.meta.bulk.ed$x,
p.adjust.m = "BH")
aoa.pwc.bulk.X
set.seed(133)
permanova_pairwise(
aoa.bulk_dist_bc,
grp=TxI,
permutations = 999,
method = "bray",
padj = "fdr")
set.seed(133)
permanova_pairwise(
aoa.bulk_dist_bc,
grp=trt,
permutations = 999,
method = "bray",
padj = "fdr")
irri=as.factor(aoa.meta.bulk$Irrigation)
set.seed(133)
permanova_pairwise(
aoa.bulk_dist_bc,
grp=irri,
permutations = 999,
method = "bray",
padj = "fdr")
# similar with below:
set.seed(133)
perm1 = how(nperm = 999,
within = Within(type="free"),
plots = Plots(type = "none"),
blocks = trt,
observed = TRUE)
set.seed(133)
permanova_pairwise(
aoa.bulk_dist_bc,
grp=irri,
permutations = perm1,
method = "bray",
padj = "fdr")
# similar with below:
set.seed(133)
perm1 = how(nperm = 999,
within = Within(type="free"),
plots = Plots(type = "none"),
blocks = block,
observed = TRUE)
set.seed(133)
permanova_pairwise(
aoa.bulk_dist_bc,
grp=irri,
permutations = perm1,
method = "bray",
padj = "fdr")
set.seed(133)
permanova_pairwise(
aoa.bulk_dist_bc,
grp=TxI,
permutations = perm1,
method = "bray",
padj = "fdr")
# similar with below:
set.seed(133)
perm1 = how(nperm = 999,
within = Within(type="free"),
plots = Plots(type = "none"),
blocks = block,
observed = TRUE)
permanova_pairwise(
aoa.bulk_dist_bc,
grp=TxI,
permutations = perm1,
method = "bray",
padj = "fdr")

library(multcomp)
# Install packages
install.packages(c('vegan', 'tidyverse'))
install.packages('reshape')
install.packages("ggpubr")
install.packages("car")
install.packages("agricolae")
install.packages("multcompView")
setwd('D:/Fina/INRAE_Project/microservices/DAA/glmmTMB/AOB_BulkSoil_rare/')
AOB_M04 <- read.csv("AOB_M04_070923.csv")[,-1]
AOB_M04$contrast <- paste("M_042822", AOB_M04$contrast, sep="_")
AOB_D04 <- read.csv("AOB_D04_070923.csv")[,-1]
AOB_D04$contrast <- paste("D_042822", AOB_D04$contrast, sep="_")
AOB_K04 <- read.csv("AOB_K04_070923.csv")[,-1]
AOB_K04$contrast <- paste("K_042822", AOB_K04$contrast, sep="_")
AOB_M06 <- read.csv("AOB_M06_070923.csv")[,-1]
AOB_M06$contrast <- paste("M_060122", AOB_M06$contrast, sep="_")
AOB_D06 <- read.csv("AOB_D06_070923.csv")[,-1]
AOB_D06$contrast <- paste("D_060122", AOB_D06$contrast, sep="_")
AOB_K06 <- read.csv("AOB_K06_070923.csv")[,-1]
AOB_K06$contrast <- paste("K_060122", AOB_K06$contrast, sep="_")
AOB_M0705 <- read.csv("AOB_M0705_070923.csv")[,-1]
AOB_M0705$contrast <- paste("M_070522", AOB_M0705$contrast, sep="_")
AOB_D0705 <- read.csv("AOB_D0705_070923.csv")[,-1]
AOB_D0705$contrast <- paste("D_070522", AOB_D0705$contrast, sep="_")
AOB_K0705 <- read.csv("AOB_K0705_070923.csv")[,-1]
AOB_K0705$contrast <- paste("K_070522", AOB_K0705$contrast, sep="_")
AOB_M0720 <- read.csv("AOB_M0720_070923.csv")[,-1]
AOB_M0720$contrast <- paste("M_072022", AOB_M0720$contrast, sep="_")
AOB_D0720 <- read.csv("AOB_D0720_070923.csv")[,-1]
AOB_D0720$contrast <- paste("D_072022", AOB_D0720$contrast, sep="_")
AOB_K0720 <- read.csv("AOB_K0720_070923.csv")[,-1]
AOB_K0720$contrast <- paste("K_072022", AOB_K0720$contrast, sep="_")
AOB_M09 <- read.csv("AOB_M09_070923.csv")[,-1]
AOB_M09$contrast <- paste("M_091322", AOB_M09$contrast, sep="_")
AOB_D09 <- read.csv("AOB_D09_070923.csv")[,-1]
AOB_D09$contrast <- paste("D_091322", AOB_D09$contrast, sep="_")
AOB_K09 <- read.csv("AOB_K09_070923.csv")[,-1]
AOB_K09$contrast <- paste("K_091322", AOB_K09$contrast, sep="_")
glmT3s.pairwise.global.ALL <- rbind(AOB_M04, AOB_D04, AOB_K04, AOB_M06, AOB_D06, AOB_K06,
AOB_M0705, AOB_D0705, AOB_K0705, AOB_M0720, AOB_D0720, AOB_K0720,
AOB_M09, AOB_D09, AOB_K09)
View(glmT3s.pairwise.global.ALL)
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
View(contrasts.glm.CBFP.T3s)
# numeric variable needs to be named "value"
colnames(contrasts.glm.CBFP.T3s) <- c("value", "OTU_names", "contrast")
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
library(devtools)
library(multcomp)
library(car)
library(BiocManager)
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(ggtext)
library(reshape)
library(ggpubr)
library(car)
library(agricolae)
library(multcompView)
library(grid)
library(gridExtra)
library(sjmisc)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(onewaytests)
library(ggsignif)
library(PerformanceAnalytics)
library(gvlma)
library(ggpmisc)
library(tibble)
library(fitdistrplus)
library(lme4)
library(nlme)
library(ape)
library(phyloseq)
####################################################
# DIFFERENTIAL ABUNDANCE
##################################################
#install.packages("glmmTMB")
library(glmmTMB)
library(emmeans)
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
rownames(contrasts.glm.CBFP.T3s) <- contrasts.glm.CBFP.T3s$contrast
contrasts.glm.CBFP.T3s$contrast <- NULL
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.06) >= 1]
dim(contrasts.glm.CBFP.T3s.sub)
head(contrasts.glm.CBFP.T3s.sub)
str(contrasts.glm.CBFP.T3s.sub)
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.06) >= 1]
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.06) >= 1]
dim(contrasts.glm.CBFP.T3s.sub)
head(contrasts.glm.CBFP.T3s.sub)
str(contrasts.glm.CBFP.T3s.sub)
ctrst.glm.CBFP.T3s.sub <- data.frame(t(contrasts.glm.CBFP.T3s.sub))
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
# numeric variable needs to be named "value"
colnames(contrasts.glm.CBFP.T3s) <- c("value", "OTU_names", "contrast")
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
rownames(contrasts.glm.CBFP.T3s) <- contrasts.glm.CBFP.T3s$contrast
contrasts.glm.CBFP.T3s$contrast <- NULL
View(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.06) >= 1]
colSums(contrasts.glm.CBFP.T3s<0.06)
dim(contrasts.glm.CBFP.T3s.sub)
head(contrasts.glm.CBFP.T3s.sub)
str(contrasts.glm.CBFP.T3s.sub)
ctrst.glm.CBFP.T3s.sub <- data.frame(t(contrasts.glm.CBFP.T3s.sub))
# replace pvalues to 0 if non significant, or 1 if significant
#ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub ==NA] <- 0
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub >0.06] <- 2
# Calculate the OTU avg per treatment
# CHECK THE OBJECT
#devtools::install_github("vmikk/metagMisc")
library(metagMisc)
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.06) >= 1]
sum(contrasts.glm.CBFP.T3s)
colSums(contrasts.glm.CBFP.T3s$ASV_10)
is.data.frame(contrasts.glm.CBFP.T3s)
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.06, na.rm=TRUE) >= 1]
dim(contrasts.glm.CBFP.T3s.sub)
head(contrasts.glm.CBFP.T3s.sub)
str(contrasts.glm.CBFP.T3s.sub)
ctrst.glm.CBFP.T3s.sub <- data.frame(t(contrasts.glm.CBFP.T3s.sub))
# replace pvalues to 0 if non significant, or 1 if significant
#ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub ==NA] <- 0
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub >0.06] <- 2
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub <0.06] <- 1
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub >1] <- 0
ctrst.glm.CBFP.T3s.sub[is.na(ctrst.glm.CBFP.T3s.sub)] <- 0
View(ctrst.glm.CBFP.T3s.sub)
# Calculate the OTU avg per treatment
# CHECK THE OBJECT
#devtools::install_github("vmikk/metagMisc")
library(metagMisc)
meanotus<-phyloseq_average(aob.physeq_bulk1,avg_type="arithmetic",acomp_zero_impute = NULL,group="var3")
# SET THE WORKING DIRECTORY
setwd('/Users/arifinabintarti/Documents/France/microservices/070623_AOB_out/AOB.ASV-analysis')
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out/AOB.ASV-analysis')
wd <- print(getwd())
# load the asv table
aob.asv <- read.table('annotated.AOB.ASVs.counts.tsv', sep='\t', header=T, row.names = 1, check.names = FALSE)
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out')
write.csv(aob.asv, file = "aob.asv.csv")
aob.asv
dim(aob.asv)# 1338  192
sort(colSums(aob.asv, na.rm = FALSE, dims = 1), decreasing = F) # there are no asv that does not exist in at least one sample.
# load the taxonomy table
setwd('/Users/arifinabintarti/Documents/France/microservices/070623_AOB_out/')
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out')
aob.tax <- read.csv("besthit.diamond.output.curateddb.AOB.ASVs.csv")
dim(aob.tax) # 1338
# load the metadata
setwd('/Users/arifinabintarti/Documents/France/microservices/')
setwd('D:/Fina/INRAE_Project/microservices')
meta_micro <- read.csv("meta_microservices.csv")
# load phylogenetic tree (nwk file)
setwd('/Users/arifinabintarti/Documents/France/microservices/070623_AOB_out/AOB.Phylogenetic-analysis/')
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out/AOB.Phylogenetic-analysis')
aob.tre <- ape::read.tree("tree.AOB.nwk")
re_order <- match(rownames(meta_micro), colnames(aob.asv))
aob.asv.ord  <- aob.asv[ ,re_order]
aob.asv.physeq = otu_table(aob.asv.ord, taxa_are_rows = TRUE) # asv table
sample_names(aob.asv.physeq)
# adding "S" for sample names to avoid possible problem later on
sample_names(aob.asv.physeq) <- paste0("S", sample_names(aob.asv.physeq))
# phyloseq object of the taxonomy table
aob.tax <- column_to_rownames(aob.tax, var = "ASVid")
aob.tax.physeq = tax_table(as.matrix(aob.tax)) # taxonomy table
# phyloseq object of the metadata
str(meta_micro)
meta_micro$Date <- factor(meta_micro$Date, levels = c("4/28/22", "06/01/2022", "07/05/2022", "7/20/22", "9/13/22"),
labels = c("04-28-22", "06-01-22", "07-05-22", "07-20-22", "09-13-22"))
rownames(meta_micro) <- sample_names(aob.asv.physeq)
aob.meta.physeq <- sample_data(meta_micro)# meta data
sample_names(aob.meta.physeq)
re_order <- match(rownames(meta_micro), colnames(aob.asv))
aob.asv.ord  <- aob.asv[ ,re_order]
re_order <- match(rownames(meta_micro), colnames(aob.asv))
aob.asv.ord  <- aob.asv[ ,re_order]
re_order <- match(rownames(meta_micro), colnames(aob.asv))
aob.asv.ord  <- aob.asv[ ,re_order]
# re-order the rownames of the asv table to match the colnames of the metadata.
re_order <- match(rownames(meta_micro), colnames(aob.asv))
aob.asv.ord  <- aob.asv[ ,re_order]
aob.asv.physeq = otu_table(aob.asv.ord, taxa_are_rows = TRUE) # asv table
sample_names(aob.asv.physeq)
aob.asv.ord  <- aob.asv[ ,re_order]
# SET THE WORKING DIRECTORY
setwd('/Users/arifinabintarti/Documents/France/microservices/070623_AOB_out/AOB.ASV-analysis')
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out/AOB.ASV-analysis')
wd <- print(getwd())
# load the asv table
aob.asv <- read.table('annotated.AOB.ASVs.counts.tsv', sep='\t', header=T, row.names = 1, check.names = FALSE)
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out')
write.csv(aob.asv, file = "aob.asv.csv")
aob.asv
dim(aob.asv)# 1338  192
sort(colSums(aob.asv, na.rm = FALSE, dims = 1), decreasing = F) # there are no asv that does not exist in at least one sample.
# load the taxonomy table
setwd('/Users/arifinabintarti/Documents/France/microservices/070623_AOB_out/')
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out')
aob.tax <- read.csv("besthit.diamond.output.curateddb.AOB.ASVs.csv")
dim(aob.tax) # 1338
# load the metadata
setwd('/Users/arifinabintarti/Documents/France/microservices/')
setwd('D:/Fina/INRAE_Project/microservices')
meta_micro <- read.csv("meta_microservices.csv")
# load phylogenetic tree (nwk file)
setwd('/Users/arifinabintarti/Documents/France/microservices/070623_AOB_out/AOB.Phylogenetic-analysis/')
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out/AOB.Phylogenetic-analysis')
aob.tre <- ape::read.tree("tree.AOB.nwk")
# re-order the rownames of the asv table to match the colnames of the metadata.
re_order <- match(rownames(meta_micro), colnames(aob.asv))
aob.asv.ord  <- aob.asv[ ,re_order]
aob.asv.physeq = otu_table(aob.asv.ord, taxa_are_rows = TRUE) # asv table
sample_names(aob.asv.physeq)
# adding "S" for sample names to avoid possible problem later on
sample_names(aob.asv.physeq) <- paste0("S", sample_names(aob.asv.physeq))
# phyloseq object of the taxonomy table
aob.tax <- column_to_rownames(aob.tax, var = "ASVid")
aob.tax.physeq = tax_table(as.matrix(aob.tax)) # taxonomy table
# phyloseq object of the metadata
str(meta_micro)
meta_micro$Date <- factor(meta_micro$Date, levels = c("4/28/22", "06/01/2022", "07/05/2022", "7/20/22", "9/13/22"),
labels = c("04-28-22", "06-01-22", "07-05-22", "07-20-22", "09-13-22"))
rownames(meta_micro) <- sample_names(aob.asv.physeq)
aob.meta.physeq <- sample_data(meta_micro)# meta data
sample_names(aob.meta.physeq)
# read the rooted tree
setwd('/Users/arifinabintarti/Documents/France/microservices/070623_AOB_out/AOB-rooted-tree/')
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out/AOB-rooted-tree/')
AOB_rooted_tree <- ape::read.tree("tree.nwk")
# make phyloseq object
aob.physeq <- merge_phyloseq(aob.asv.physeq,aob.tax.physeq,aob.meta.physeq,AOB_rooted_tree)
aob.physeq
aob.asv.ord <- as.data.frame(otu_table(aob.physeq))
aob.asv.ord
#write.csv(aob.asv.ord, file = "aob.asv.ord.csv")
sample_data(aob.physeq)$SampleID <- paste0("S", sample_data(aob.physeq)$SampleID)
sample_data(aob.physeq)
# ASV Table
sort(colSums(aob.asv, na.rm = FALSE, dims = 1), decreasing = F)
set.seed(333)
aob.rare.1282.seq <- rarefy_even_depth(aob.physeq, sample.size = 1282,
rngseed = 333, replace = FALSE, trimOTUs = TRUE, verbose = TRUE)
aob.rare.1282.seq # 1 samples removed (S11), 116 ASVs were removed
sort(rowSums(otu_table(aob.rare.1282.seq), na.rm = FALSE, dims = 1), decreasing = F)
colSums(otu_table(aob.rare.1282.seq))
aob.asv.rare1k <- as.data.frame(otu_table(aob.rare.1282.seq))
dim(aob.asv.rare1k) # 1222 ASVs
aob.asv.rare1k_pa <- 1*(aob.asv.rare1k>0)
aob.s <- specnumber(aob.asv.rare1k, MARGIN = 2) # richness
aob.richness <- as.data.frame(aob.s)
aob.h <- diversity(t(aob.asv.rare1k), index = 'shannon') # Shannon index
aob.shannon <- as.data.frame(aob.h)
aob.d <- diversity(t(aob.asv.rare1k), index = 'simpson') # Simpson index
aob.simpson <- as.data.frame(aob.d)
aob.inv.d <- diversity(t(aob.asv.rare1k), index = 'invsimpson')
# 1. Richness
# Line plot of AOB richness
aob.meta.df <- data.frame(meta_micro)
aob.meta.df.sub <- aob.meta.df %>% filter(SampleID != 11)# filter out S11 from the metadata
aob.meta.df.sub$Richness <- aob.s
aob.meta.df.sub$Shannon <- aob.h
aob.meta.df.sub$Simpson <- aob.d
aob.meta.df.sub$InvSimpson <- aob.inv.d
#aob.min.meta.df$Date  <- as.Date(aob.min.meta.df$Date , "%m/%d/%Y")
str(aob.meta.df.sub)
aob.meta.df.sub$Type <- factor(aob.meta.df.sub$Type, levels = c("BS", "RS"),
labels = c("Bulk Soil", "Rhizosphere"))
aob.meta.df.sub$Treatment <- factor(aob.meta.df.sub$Treatment, levels = c("D", "K", "M"),
labels = c("Biodynamic", "Conventional", "Mineral fertilized"))
aob.meta.df.sub$SampleID<-as.factor(aob.meta.df.sub$SampleID)
aob.meta.df.sub$PlotID<-as.factor(aob.meta.df.sub$PlotID)
aob.meta.df.sub$Irrigation<-as.factor(aob.meta.df.sub$Irrigation)
# tidy up the data frame
aob.meta.df.tidy <- aob.meta.df.sub %>%
group_by(Irrigation, Treatment, Date,  Type, var2,var3) %>%
summarize(Mean.Rich=mean(Richness),
Mean.Sha=mean(Shannon),
Mean.Simp=mean(Simpson),
Mean.invsimp=mean(InvSimpson))
str(aob.meta.df.tidy)
# Bray-Curtis - Bulk Soil :
aob.asv.rare1k <- as.data.frame(otu_table(aob.rare.1282.seq))
aob.asv.bulk <- aob.asv.rare1k[,1:119]
aob.asv.bulk1 <- aob.asv.bulk[rowSums(aob.asv.bulk)>0,]
sort(rowSums(aob.asv.bulk1, na.rm = FALSE, dims = 1), decreasing = FALSE)
aob.bulk_dist_bc <- vegdist(t(aob.asv.bulk1), method = "bray")
# jaccard - Bulk Soil :
aob.bulk_dist_jac <- vegdist(t(aob.asv.bulk1), binary = TRUE, method = "jaccard")
# Weighted UniFrac (rarefied) - Bulk Soil:
aob.physeq_bulk <- subset_samples(aob.rare.1282.seq, Type=="BS")
aob.physeq_bulk1 <- prune_taxa(taxa_sums(aob.physeq_bulk)>0, aob.physeq_bulk)
aob.physeq_bulk1
sort(taxa_sums(aob.physeq_bulk1), decreasing =F) #checking
aob.bulk_dist_wUF <- UniFrac(aob.physeq_bulk1, weighted=TRUE, normalized = TRUE)
aob.bulk_dist_wUF
# Unweighted UniFrac (rarefied) -  Bulk Soil:
aob.bulk_dist_uwUF <- UniFrac(aob.physeq_bulk1, weighted=FALSE, normalized = TRUE)
aob.bulk_dist_uwUF
# Bray-Curtis - Rhizosphere :
aob.asv.rh <- aob.asv.rare1k[,120:191]
aob.asv.rh1 <- aob.asv.rh[rowSums(aob.asv.rh)>0,]
sort(rowSums(aob.asv.rh1, na.rm = FALSE, dims = 1), decreasing = FALSE)
dim(aob.asv.rh1) #831
aob.rh_dist_bc <- vegdist(t(aob.asv.rh1), method = "bray")
# jaccard - Rhizosphere :
aob.rh_dist_jac <- vegdist(t(aob.asv.rh1), binary = TRUE, method = "jaccard")
# Weighted UniFrac (rarefied) - Rhizosphere :
aob.physeq_rh <- subset_samples(aob.rare.1282.seq, Type=="RS")
aob.physeq_rh1 <- prune_taxa(taxa_sums(aob.physeq_rh)>0, aob.physeq_rh)
aob.physeq_rh1
sort(taxa_sums(aob.physeq_rh1), decreasing =F) #checking
aob.rh_dist_wUF <- UniFrac(aob.physeq_rh1, weighted=TRUE, normalized = TRUE)
aob.rh_dist_wUF
# Unweighted UniFrac (rarefied) -  Rhizosphere :
aob.rh_dist_uwUF <- UniFrac(aob.physeq_rh1, weighted=FALSE, normalized = TRUE)
aob.rh_dist_uwUF
# Calculate the OTU avg per treatment
# CHECK THE OBJECT
#devtools::install_github("vmikk/metagMisc")
library(metagMisc)
meanotus<-phyloseq_average(aob.physeq_bulk1,avg_type="arithmetic",acomp_zero_impute = NULL,group="var3")
View(meanotus)
meanotus<-as.data.frame(otu_table(meanotus));meanotus
View(meanotus)
View(meanotus)
# Calculate log2fold ratios for all OTUs in the filtered table
meanotus$
meanotus$RR_RDBS1 <- log2(meanotus$RDBS1 / meanotus$CDBS1)
sum(meanotus$CDBS1)
sum(meanotus$CMBS1)
sum(meanotus$CDBS2)
sum(meanotus)
sums(meanotus)
View(contrasts.glm.CBFP.T3s.sub)
View(ctrst.glm.CBFP.T3s.sub)
# same order for both meanotus and tmp_otu3s
meanotus<-meanotus[c("ASV_10", "ASV_12", "ASV_28", "ASV_33", "ASV_35", "ASV_44", "ASV_52", "ASV_54", "ASV_59", "ASV_64", "ASV_71"),]
# Calculate the OTU avg per treatment
# CHECK THE OBJECT
#devtools::install_github("vmikk/metagMisc")
library(metagMisc)
meanotus<-phyloseq_average(aob.physeq_bulk1,avg_type="arithmetic",acomp_zero_impute = NULL,group="var3")
meanotus<-as.data.frame(otu_table(meanotus));meanotus
# same order for both meanotus and tmp_otu3s
meanotus<-meanotus[c("ASV_10", "ASV_12", "ASV_28", "ASV_33", "ASV_35", "ASV_44", "ASV_52", "ASV_54", "ASV_59", "ASV_64", "ASV_71"),]
colnames(ctrst.glm.CBFP.T3s.sub)
colnames(meanotus)
sample_data(aob.physeq_bulk1)
sample_data(aob.physeq_bulk1)$var3
sum(meanotus$CDBS1)
meanotus$RDBS1
meanotus$RDBS1 / meanotus$CDBS1
log2(0)
meanotus<-phyloseq_average(aob.physeq_bulk1,avg_type="arithmetic",acomp_zero_impute = NULL,group="var3")
meanotus<-as.data.frame(otu_table(meanotus));meanotus
meanotus<-phyloseq_average(aob.physeq_bulk1,avg_type="arithmetic",acomp_zero_impute = NULL,group="var3")
meanotus<-as.data.frame(otu_table(meanotus));meanotus
View(meanotus)
## nb of pval <= 0.05 before and after filter
table(glmT3s.pairwise.global.ALL$p.value <= 0.06)
table(glmT3s.pairwise.global.ALL$p.adjust <= 0.06)
## nb of OTU with a pval <= 0.05 before and after filter
tmp_otu3s = unique(glmT3s.pairwise.global.ALL$OTU[glmT3s.pairwise.global.ALL$p.adjust <= 0.06])
glmT3s.pairwise.global.signif = glmT3s.pairwise.global.ALL[glmT3s.pairwise.global.ALL$p.adjust <=0.06,]
length(tmp_otu3s)
tmp_otu3s
meanotus<-meanotus[tmp_otu3s,]
meanotus$RMBS5
meanotus$CMBS5
log2(meanotus$RMBS5 / meanotus$CMBS5)
meanotus$RR_M_042822 <- log2(meanotus$RMBS1 / meanotus$CMBS1)
meanotus$RR_M_060122 <- log2(meanotus$RMBS2 / meanotus$CMBS2)
meanotus$RR_M_070522 <- log2(meanotus$RMBS3 / meanotus$CMBS3)
meanotus$RR_M_072022 <- log2(meanotus$RMBS4 / meanotus$CMBS4)
meanotus$RR_M_091322 <- log2(meanotus$RMBS5 / meanotus$CMBS5)
meanotus$RR_D_042822 <- log2(meanotus$RDBS1 / meanotus$CDBS1)
meanotus$RR_D_060122 <- log2(meanotus$RDBS2 / meanotus$CDBS2)
meanotus$RR_D_070522 <- log2(meanotus$RDBS3 / meanotus$CDBS3)
meanotus$RR_D_072022 <- log2(meanotus$RDBS4 / meanotus$CDBS4)
meanotus$RR_D_091322 <- log2(meanotus$RDBS5 / meanotus$CDBS5)
meanotus$RR_K_042822 <- log2(meanotus$RKBS1 / meanotus$CKBS1)
meanotus$RR_K_060122 <- log2(meanotus$RKBS2 / meanotus$CKBS2)
meanotus$RR_K_070522 <- log2(meanotus$RKBS3 / meanotus$CKBS3)
meanotus$RR_K_072022 <- log2(meanotus$RKBS4 / meanotus$CKBS4)
meanotus$RR_K_091322 <- log2(meanotus$RKBS5 / meanotus$CKBS5)
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
View(contrasts.glm.CBFP.T3s)
# numeric variable needs to be named "value"
colnames(contrasts.glm.CBFP.T3s) <- c("value", "OTU_names", "contrast")
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
rownames(contrasts.glm.CBFP.T3s) <- contrasts.glm.CBFP.T3s$contrast
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
View(meta_micro)
View(glmT3s.pairwise.global.ALL)
## nb of pval <= 0.05 before and after filter
table(glmT3s.pairwise.global.ALL$p.value <= 0.06)
table(glmT3s.pairwise.global.ALL$p.adjust <= 0.06)
## nb of OTU with a pval <= 0.05 before and after filter
tmp_otu3s = unique(glmT3s.pairwise.global.ALL$OTU[glmT3s.pairwise.global.ALL$p.adjust <= 0.06])
glmT3s.pairwise.global.signif = glmT3s.pairwise.global.ALL[glmT3s.pairwise.global.ALL$p.adjust <=0.06,]
length(tmp_otu3s)
tmp_otu3s
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
# numeric variable needs to be named "value"
colnames(contrasts.glm.CBFP.T3s) <- c("value", "OTU_names", "contrast")
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
rownames(contrasts.glm.CBFP.T3s) <- contrasts.glm.CBFP.T3s$contrast
contrasts.glm.CBFP.T3s$contrast <- NULL
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.06, na.rm=TRUE) >= 1]
dim(contrasts.glm.CBFP.T3s.sub)
head(contrasts.glm.CBFP.T3s.sub)
str(contrasts.glm.CBFP.T3s.sub)
ctrst.glm.CBFP.T3s.sub <- data.frame(t(contrasts.glm.CBFP.T3s.sub))
View(contrasts.glm.CBFP.T3s.sub)
# replace pvalues to 0 if non significant, or 1 if significant
#ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub ==NA] <- 0
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub >0.06] <- 2
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub <0.06] <- 1
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub >1] <- 0
ctrst.glm.CBFP.T3s.sub[is.na(ctrst.glm.CBFP.T3s.sub)] <- 0
head(ctrst.glm.CBFP.T3s.sub)
View(ctrst.glm.CBFP.T3s.sub)
meanotus<-phyloseq_average(aob.physeq_bulk1,avg_type="arithmetic",acomp_zero_impute = NULL,group="var3")
meanotus<-as.data.frame(otu_table(meanotus));meanotus
# same order for both meanotus and tmp_otu3s
meanotus<-meanotus[tmp_otu3s,]
meanotus$RR_M_042822 <- log2(meanotus$RMBS1 / meanotus$CMBS1)
meanotus$RR_M_060122 <- log2(meanotus$RMBS2 / meanotus$CMBS2)
meanotus$RR_M_070522 <- log2(meanotus$RMBS3 / meanotus$CMBS3)
meanotus$RR_M_072022 <- log2(meanotus$RMBS4 / meanotus$CMBS4)
meanotus$RR_M_091322 <- log2(meanotus$RMBS5 / meanotus$CMBS5)
meanotus$RR_D_042822 <- log2(meanotus$RDBS1 / meanotus$CDBS1)
meanotus$RR_D_060122 <- log2(meanotus$RDBS2 / meanotus$CDBS2)
meanotus$RR_D_070522 <- log2(meanotus$RDBS3 / meanotus$CDBS3)
meanotus$RR_D_072022 <- log2(meanotus$RDBS4 / meanotus$CDBS4)
meanotus$RR_D_091322 <- log2(meanotus$RDBS5 / meanotus$CDBS5)
meanotus$RR_K_042822 <- log2(meanotus$RKBS1 / meanotus$CKBS1)
meanotus$RR_K_060122 <- log2(meanotus$RKBS2 / meanotus$CKBS2)
meanotus$RR_K_070522 <- log2(meanotus$RKBS3 / meanotus$CKBS3)
meanotus$RR_K_072022 <- log2(meanotus$RKBS4 / meanotus$CKBS4)
meanotus$RR_K_091322 <- log2(meanotus$RKBS5 / meanotus$CKBS5)
colnames(meanotus)
# keep only columns containing log2fold ratios (RRs)
meanotus<-meanotus[,c(31:45)]
head(meanotus)
head(ctrst.glm.CBFP.T3s.sub)
meanotus[meanotus == "-Inf"] <- 0
meanotus[meanotus == "Inf"] <- 0
meanotus[meanotus == "NaN"] <- 0
colnames(meanotus)
colnames(ctrst.glm.CBFP.T3s.sub)
# put the same column order in ctrst.glm.CBFP.T3s.sub and in meanotus
ctrst.glm.CBFP.T3s.sub<-ctrst.glm.CBFP.T3s.sub[,c(11,12,13,14,15,
1,2,3,4,5,
6,7,8,9,10)]
ctrst.glm.CBFP.T3s.subs<-ctrst.glm.CBFP.T3s.sub[meanotus,]
ctrst.glm.CBFP.T3s.subs<-ctrst.glm.CBFP.T3s.sub[meanotus,]
ctrst.glm.CBFP.T3s.sub[rownames(meanotus), ]
rownames(meanotus)
rownames(ctrst.glm.CBFP.T3s.sub)
ctrst.glm.CBFP.T3s.sub[rownames(meanotus), ]
ctrst.glm.CBFP.T3s.sub <- ctrst.glm.CBFP.T3s.sub[rownames(meanotus), ]
head(meanotus)
ctrst.glm.CBFP.T3s.sub.ed <-
head(ctrst.glm.CBFP.T3s.sub)
head(ctrst.glm.CBFP.T3s.sub)
# Multiply the matrices to get the RR when it is significant and 0 when it is not significant
rr<-meanotus*ctrst.glm.CBFP.T3s.sub
View(rr)

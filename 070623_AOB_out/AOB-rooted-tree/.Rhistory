contrasts.glm.CBFP.T3s_m04.sub[contrasts.glm.CBFP.T3s_m04.sub !=1] <- 0
head(contrasts.glm.CBFP.T3s_m04.sub)
meta04
View(meta04)
sample_data(M04seq1)
physeq.subset1 <- M04seq1
tmp_T3s <- physeq.subset1
str(tmp_T3s)
#  treatment
a = tibble("sample"= as.factor(tmp_T3s@sam_data$SampleID),
"treatment"= as.character(tmp_T3s@sam_data$Irrigation))
# force control as intercept
a[a == "Control"] <- "1a"
a = as.factor(a$treatment)
# offset
o = log(sample_sums(tmp_T3s))
# random effect
z <- as.factor(tmp_T3s@sam_data$SampleID)
# model with pairwise comparison ---------------------------------------------------------------------------------
glmT3s.sum.global = data.frame()
glmT3s.pairwise.global = data.frame()
for (i in 1:length(taxa_names(tmp_T3s))) {
OTU = taxa_names(tmp_T3s)[i]
# response variable
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
tryCatch({
### model
glmT3s <- glmer(y ~ a + (1 | z), family='poisson', offset = o)
glmT3s.sum = summary(glmT3s)$coefficients
#glmT3s.sum = summary(glmT3s)$coefficients$cond
glmT3s.sum = tibble("OTU"= OTU,
"treatment"=rownames(glmT3s.sum),
as_tibble(glmT3s.sum))
glmT3s.sum
glmT3s.sum.global = rbind(glmT3s.sum.global,glmT3s.sum)
### multiple comparison
glmT3s.pairwise = emmeans(glmT3s,pairwise~a)
# select p value
glmT3s.pairwise.sum = summary(glmT3s.pairwise)
glmT3s.pairwise.sum = glmT3s.pairwise.sum[["contrasts"]]
# extract summary
tmp_df = glmT3s.pairwise.sum
# keep only comparisons of interest
tmp = unlist(strsplit(as.character(tmp_df$contrast)," - "))
tmp_df[,"a"] <- tmp[seq(1,length(tmp),by=2)]
tmp_df[,"b"] <- tmp[seq(2,length(tmp),by=2)]
tmp_df = tmp_df[tmp_df$a == "1a" | tmp_df$b == "1a" ,]
# adjust pval n=nb of contrasts
#tmp_df[,"p.adjust"] <- p.adjust(tmp_df$p.value,"fdr",n=21)
#tmp_df[,"p.adjust"] <- p.adjust(tmp_df$p.value,"bonferroni",n=21)
tmp_df = cbind("OTU"=OTU,tmp_df)
glmT3s.pairwise.global = rbind(glmT3s.pairwise.global,tmp_df)
},
error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
rm(OTU,y,glmT3s,glmT3s.sum)
}
glmT3s.model.global = glmT3s.sum.global
glmT3s.pairwise.global = glmT3s.pairwise.global
View(glmT3s.model.global)
OTU = taxa_names(tmp_T3s)[i]
OTU = taxa_names(tmp_T3s)[10]
OTU
taxa_names(tmp_T3s)
OTU = taxa_names(tmp_T3s)[63]
OTU
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
y
glmT3s <- glmer(y ~ a + (1 | z), family='poisson', offset = o)
summary(glmT3s)
sum=summary(glmT3s)
sum
sum$coefficients
sum
sum$coefficients
options(scipen=999)
glmT3s <- glmer(y ~ a + (1 | z), family='poisson', offset = o)
sum=summary(glmT3s)
sum$coefficients
OTU = taxa_names(tmp_T3s)[36]
OTU
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
glmT3s <- glmer(y ~ a + (1 | z), family='poisson', offset = o)
glmT3s.sum = summary(glmT3s)$coefficients
glmT3s.sum
glmT3s
OTU = taxa_names(tmp_T3s)[148]
OTU = taxa_names(tmp_T3s)[148]
OTU
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
y
glmT3s <- glmer(y ~ a + (1 | z), family='poisson', offset = o)
glmT3s
summary(glmT3s)
OTU = taxa_names(tmp_T3s)[157]
OTU
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
glmT3s <- glmer(y ~ a + (1 | z), family='poisson', offset = o)
y
summary(glmT3s)
y
otu_table(M04seq1)
#  treatment
a = tibble("sample"= as.factor(tmp_T3s@sam_data$SampleID),
"treatment"= as.character(tmp_T3s@sam_data$Irrigation))
# force control as intercept
a[a == "Control"] <- "1a"
a = as.factor(a$treatment)
# offset
o = log(sample_sums(tmp_T3s))
# random effect
z <- as.factor(tmp_T3s@sam_data$var2)
OTU = taxa_names(tmp_T3s)[157]
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
glmT3s <- glmer(y ~ a + (1 | z), family='poisson', offset = o)
summary(glmT3s)
OTU = taxa_names(tmp_T3s)[63]
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
glmT3s <- glmer(y ~ a + (1 | z), family='poisson', offset = o)
summary(glmT3s)
summary(glmT3s)$coefficients
########################################################################################
#Lets generate a prevalence table (number of samples each taxa occurs in) for each taxa.
########################################################################################
physeq1 <- M04seq1
prevalencedf = apply(X = otu_table(physeq1),
MARGIN = 1,
FUN = function(x){sum(x > 0)})
prevalencedf
# Add taxonomy and total read counts to this data.frame
prevalencedf = data.frame(Prevalence = prevalencedf,
TotalAbundance = taxa_sums(physeq1)
)
prevalencedf[1:10,]
#write.table(x=prevelancedf, file="Filtered_OTUtable-prevalence.csv")
dim(prevalencedf)
ps = physeq1
df_tmp <- psmelt(ps)
df_tmp$sample <- 0
df_tmp$sample[df_tmp$Abundance > 0] <- 1 #E: DON'T UNDERSTAND WHY THIS IS DONE
df_tmp
df_otu_prev_ttt <- data.frame(matrix(ncol=nlevels(as.factor(df_tmp$Irrigation)),
nrow=nlevels(as.factor(df_tmp$OTU)),
dimnames=list(levels(as.factor(df_tmp$OTU)),
levels(as.factor(df_tmp$Irrigation)))))
df_otu_prev_ttt
for (i in unique(df_tmp$OTU)) {
for (j in unique(df_tmp$Irrigation)) {
df_otu_prev_ttt[i,j] <- sum(df_tmp$sample[df_tmp$OTU == i & df_tmp$Irrigation == j],na.rm = T) / nrow(df_tmp[df_tmp$OTU == i & df_tmp$Irrigation == j,]) *100
print(paste(i,j,df_otu_prev_ttt[i,j]),sep="\t")
#print(df_otu_prev_ttt[i,j])
}
}
df_otu_prev_ttt$max_prev <- apply(df_otu_prev_ttt,MARGIN=1, FUN=max)
df_otu_prev_ttt
ps =  physeq1
df_prev = df_otu_prev_ttt
tmp_otu_F = rownames(df_prev[df_prev$max_prev > 60,])
physeq.subset1 <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
rm(ps,df_prev,tmp_otu_F)
physeq.subset1
physeq.subset1
physeq.subset <- physeq.subset1
tmp_T3s <- physeq.subset
str(tmp_T3s)
#  treatment
a = tibble("sample"= as.factor(tmp_T3s@sam_data$SampleID),
"treatment"= as.character(tmp_T3s@sam_data$Irrigation))
# force control as intercept
a[a == "Control"] <- "1a"
a = as.factor(a$treatment)
# offset
o = log(sample_sums(tmp_T3s))
# random effect
z <- as.factor(tmp_T3s@sam_data$SampleID)
# model with pairwise comparison ---------------------------------------------------------------------------------
glmT3s.sum.global = data.frame()
glmT3s.pairwise.global = data.frame()
for (i in 1:length(taxa_names(tmp_T3s))) {
OTU = taxa_names(tmp_T3s)[i]
# response variable
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
tryCatch({
### model
glmT3s <- glmer(y ~ a + (1 | z), family='poisson', offset = o)
glmT3s.sum = summary(glmT3s)$coefficients
#glmT3s.sum = summary(glmT3s)$coefficients$cond
glmT3s.sum = tibble("OTU"= OTU,
"treatment"=rownames(glmT3s.sum),
as_tibble(glmT3s.sum))
glmT3s.sum
glmT3s.sum.global = rbind(glmT3s.sum.global,glmT3s.sum)
### multiple comparison
glmT3s.pairwise = emmeans(glmT3s,pairwise~a)
# select p value
glmT3s.pairwise.sum = summary(glmT3s.pairwise)
glmT3s.pairwise.sum = glmT3s.pairwise.sum[["contrasts"]]
# extract summary
tmp_df = glmT3s.pairwise.sum
# keep only comparisons of interest
tmp = unlist(strsplit(as.character(tmp_df$contrast)," - "))
tmp_df[,"a"] <- tmp[seq(1,length(tmp),by=2)]
tmp_df[,"b"] <- tmp[seq(2,length(tmp),by=2)]
tmp_df = tmp_df[tmp_df$a == "1a" | tmp_df$b == "1a" ,]
# adjust pval n=nb of contrasts
#tmp_df[,"p.adjust"] <- p.adjust(tmp_df$p.value,"fdr",n=21)
#tmp_df[,"p.adjust"] <- p.adjust(tmp_df$p.value,"bonferroni",n=21)
tmp_df = cbind("OTU"=OTU,tmp_df)
glmT3s.pairwise.global = rbind(glmT3s.pairwise.global,tmp_df)
},
error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
rm(OTU,y,glmT3s,glmT3s.sum)
}
glmT3s.model.global = glmT3s.sum.global
glmT3s.pairwise.global = glmT3s.pairwise.global
View(glmT3s.model.global)
options(scipen = 0)
# model with pairwise comparison ---------------------------------------------------------------------------------
glmT3s.sum.global = data.frame()
glmT3s.pairwise.global = data.frame()
for (i in 1:length(taxa_names(tmp_T3s))) {
OTU = taxa_names(tmp_T3s)[i]
# response variable
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
tryCatch({
### model
glmT3s <- glmer(y ~ a + (1 | z), family='poisson', offset = o)
glmT3s.sum = summary(glmT3s)$coefficients
#glmT3s.sum = summary(glmT3s)$coefficients$cond
glmT3s.sum = tibble("OTU"= OTU,
"treatment"=rownames(glmT3s.sum),
as_tibble(glmT3s.sum))
glmT3s.sum
glmT3s.sum.global = rbind(glmT3s.sum.global,glmT3s.sum)
### multiple comparison
glmT3s.pairwise = emmeans(glmT3s,pairwise~a)
# select p value
glmT3s.pairwise.sum = summary(glmT3s.pairwise)
glmT3s.pairwise.sum = glmT3s.pairwise.sum[["contrasts"]]
# extract summary
tmp_df = glmT3s.pairwise.sum
# keep only comparisons of interest
tmp = unlist(strsplit(as.character(tmp_df$contrast)," - "))
tmp_df[,"a"] <- tmp[seq(1,length(tmp),by=2)]
tmp_df[,"b"] <- tmp[seq(2,length(tmp),by=2)]
tmp_df = tmp_df[tmp_df$a == "1a" | tmp_df$b == "1a" ,]
# adjust pval n=nb of contrasts
#tmp_df[,"p.adjust"] <- p.adjust(tmp_df$p.value,"fdr",n=21)
#tmp_df[,"p.adjust"] <- p.adjust(tmp_df$p.value,"bonferroni",n=21)
tmp_df = cbind("OTU"=OTU,tmp_df)
glmT3s.pairwise.global = rbind(glmT3s.pairwise.global,tmp_df)
},
error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
rm(OTU,y,glmT3s,glmT3s.sum)
}
glmT3s.model.global = glmT3s.sum.global
glmT3s.pairwise.global = glmT3s.pairwise.global
View(glmT3s.model.global)
otu_table(physeq.subset1)
sample_data(M04seq1)
# random effect
z <- as.factor(tmp_T3s@sam_data$var2)
# model with pairwise comparison ---------------------------------------------------------------------------------
glmT3s.sum.global = data.frame()
glmT3s.pairwise.global = data.frame()
for (i in 1:length(taxa_names(tmp_T3s))) {
OTU = taxa_names(tmp_T3s)[i]
# response variable
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
tryCatch({
### model
glmT3s <- glmer(y ~ a + (1 | z), family='poisson', offset = o)
glmT3s.sum = summary(glmT3s)$coefficients
#glmT3s.sum = summary(glmT3s)$coefficients$cond
glmT3s.sum = tibble("OTU"= OTU,
"treatment"=rownames(glmT3s.sum),
as_tibble(glmT3s.sum))
glmT3s.sum
glmT3s.sum.global = rbind(glmT3s.sum.global,glmT3s.sum)
### multiple comparison
glmT3s.pairwise = emmeans(glmT3s,pairwise~a)
# select p value
glmT3s.pairwise.sum = summary(glmT3s.pairwise)
glmT3s.pairwise.sum = glmT3s.pairwise.sum[["contrasts"]]
# extract summary
tmp_df = glmT3s.pairwise.sum
# keep only comparisons of interest
tmp = unlist(strsplit(as.character(tmp_df$contrast)," - "))
tmp_df[,"a"] <- tmp[seq(1,length(tmp),by=2)]
tmp_df[,"b"] <- tmp[seq(2,length(tmp),by=2)]
tmp_df = tmp_df[tmp_df$a == "1a" | tmp_df$b == "1a" ,]
# adjust pval n=nb of contrasts
#tmp_df[,"p.adjust"] <- p.adjust(tmp_df$p.value,"fdr",n=21)
#tmp_df[,"p.adjust"] <- p.adjust(tmp_df$p.value,"bonferroni",n=21)
tmp_df = cbind("OTU"=OTU,tmp_df)
glmT3s.pairwise.global = rbind(glmT3s.pairwise.global,tmp_df)
},
error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
rm(OTU,y,glmT3s,glmT3s.sum)
}
glmT3s.model.global = glmT3s.sum.global
glmT3s.pairwise.global = glmT3s.pairwise.global
View(glmT3s.model.global)
1.863038e-03*1
View(glmT3s.pairwise.global)
glmT3s.pairwise.global$p.adjust <- p.adjust(glmT3s.pairwise.global$p.value, method = "fdr")
4.585940e-03
2.546235e-02
ps =  physeq1
df_prev = df_otu_prev_ttt
tmp_otu_F = rownames(df_prev[df_prev$max_prev > 80,])
physeq.subset1 <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
rm(ps,df_prev,tmp_otu_F)
physeq.subset1
########################################################################################
#Lets generate a prevalence table (number of samples each taxa occurs in) for each taxa.
########################################################################################
physeq1 <- M04seq1
prevalencedf = apply(X = otu_table(physeq1),
MARGIN = 1,
FUN = function(x){sum(x > 0)})
# Add taxonomy and total read counts to this data.frame
prevalencedf = data.frame(Prevalence = prevalencedf,
TotalAbundance = taxa_sums(physeq1)
)
prevalencedf[1:10,]
#write.table(x=prevelancedf, file="Filtered_OTUtable-prevalence.csv")
dim(prevalencedf)
ps = physeq1
df_tmp <- psmelt(ps)
df_tmp$sample <- 0
df_tmp$sample[df_tmp$Abundance > 0] <- 1 #E: DON'T UNDERSTAND WHY THIS IS DONE
df_otu_prev_ttt <- data.frame(matrix(ncol=nlevels(as.factor(df_tmp$Irrigation)),
nrow=nlevels(as.factor(df_tmp$OTU)),
dimnames=list(levels(as.factor(df_tmp$OTU)),
levels(as.factor(df_tmp$Irrigation)))))
for (i in unique(df_tmp$OTU)) {
for (j in unique(df_tmp$Irrigation)) {
df_otu_prev_ttt[i,j] <- sum(df_tmp$sample[df_tmp$OTU == i & df_tmp$Irrigation == j],na.rm = T) / nrow(df_tmp[df_tmp$OTU == i & df_tmp$Irrigation == j,]) *100
print(paste(i,j,df_otu_prev_ttt[i,j]),sep="\t")
#print(df_otu_prev_ttt[i,j])
}
}
df_otu_prev_ttt$max_prev <- apply(df_otu_prev_ttt,MARGIN=1, FUN=max)
ps =  physeq1
df_prev = df_otu_prev_ttt
tmp_otu_F = rownames(df_prev[df_prev$max_prev > 80,])
physeq.subset1 <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
rm(ps,df_prev,tmp_otu_F)
physeq.subset1
tmp_otu_F = rownames(df_prev[df_prev$max_prev > 25,])
physeq.subset1 <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
########################################################################################
#Lets generate a prevalence table (number of samples each taxa occurs in) for each taxa.
########################################################################################
physeq1 <- M04seq1
prevalencedf = apply(X = otu_table(physeq1),
MARGIN = 1,
FUN = function(x){sum(x > 0)})
# Add taxonomy and total read counts to this data.frame
prevalencedf = data.frame(Prevalence = prevalencedf,
TotalAbundance = taxa_sums(physeq1)
)
prevalencedf[1:10,]
#write.table(x=prevelancedf, file="Filtered_OTUtable-prevalence.csv")
dim(prevalencedf)
ps = physeq1
df_tmp <- psmelt(ps)
df_tmp$sample <- 0
df_tmp$sample[df_tmp$Abundance > 0] <- 1 #E: DON'T UNDERSTAND WHY THIS IS DONE
df_otu_prev_ttt <- data.frame(matrix(ncol=nlevels(as.factor(df_tmp$Irrigation)),
nrow=nlevels(as.factor(df_tmp$OTU)),
dimnames=list(levels(as.factor(df_tmp$OTU)),
levels(as.factor(df_tmp$Irrigation)))))
for (i in unique(df_tmp$OTU)) {
for (j in unique(df_tmp$Irrigation)) {
df_otu_prev_ttt[i,j] <- sum(df_tmp$sample[df_tmp$OTU == i & df_tmp$Irrigation == j],na.rm = T) / nrow(df_tmp[df_tmp$OTU == i & df_tmp$Irrigation == j,]) *100
print(paste(i,j,df_otu_prev_ttt[i,j]),sep="\t")
#print(df_otu_prev_ttt[i,j])
}
}
df_otu_prev_ttt$max_prev <- apply(df_otu_prev_ttt,MARGIN=1, FUN=max)
ps =  physeq1
df_prev = df_otu_prev_ttt
tmp_otu_F = rownames(df_prev[df_prev$max_prev > 25,])
physeq.subset1 <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
rm(ps,df_prev,tmp_otu_F)
physeq.subset1
physeq.subset <- M04seq1
data.obs <- as.data.frame(otu_table(physeq.subset))
0.01*100
0.01/100
0.0001*100
physeq.subset <- M04seq1
data.obs <- as.data.frame(otu_table(physeq.subset))
keep.taxa.id1=which((rowSums(data.obs1)/sum(data.obs1))>0.0001)
data.F1=data.obs1[keep.taxa.id1,,drop=FALSE]
new.otu1 <- as.matrix(data.F1) # convert it into a matrix.
new.otu1 <- otu_table(data.F1, taxa_are_rows = TRUE) # convert into phyloseq compatible file.
physeq.subset <- M04seq1
data.obs <- as.data.frame(otu_table(physeq.subset))
keep.taxa.id=which((rowSums(data.obs)/sum(data.obs))>0.0001)
data.F=data.obs[keep.taxa.id,,drop=FALSE]
new.otu <- as.matrix(data.F) # convert it into a matrix.
new.otu <- otu_table(data.F, taxa_are_rows = TRUE) # convert into phyloseq compatible file.
otu_table(physeq.subset) <- new.otu # incorporate into phyloseq Object
physeq.subset # 197 taxa remain in the data set after filtering
M04seq1
prevalencedf
# Add taxonomy and total read counts to this data.frame
prevalencedf = data.frame(Prevalence = prevalencedf,
TotalAbundance = taxa_sums(physeq.subset)
)
prevalencedf[1:10,]
#write.table(x=prevelancedf, file="Filtered_OTUtable-prevalence.csv")
dim(prevalencedf)
physeq.subset # 197 taxa, 8 samples remain in the data set after filtering
View(prevalencedf)
physeq.subset <- M04seq1
physeq.subset #219 Taxa, 8 Samples
data.obs <- as.data.frame(otu_table(physeq.subset))
keep.taxa.id=which((rowSums(data.obs)/sum(data.obs))>0.0001)
data.F=data.obs[keep.taxa.id,,drop=FALSE]
new.otu <- as.matrix(data.F) # convert it into a matrix.
new.otu <- otu_table(data.F, taxa_are_rows = TRUE) # convert into phyloseq compatible file.
otu_table(physeq.subset) <- new.otu # incorporate into phyloseq Object
physeq.subset # 197 taxa, 8 samples remain in the data set after filtering
prevalencedf = apply(X = otu_table(physeq.subset),
MARGIN = 1,
FUN = function(x){sum(x > 0)})
# Add taxonomy and total read counts to this data.frame
prevalencedf = data.frame(Prevalence = prevalencedf,
TotalAbundance = taxa_sums(physeq.subset))
prevalencedf[1:10,]
#write.table(x=prevelancedf, file="Filtered_OTUtable-prevalence.csv")
dim(prevalencedf)
ps = physeq.subset
df_tmp <- psmelt(ps)
df_tmp$sample <- 0
df_tmp$sample[df_tmp$Abundance > 0] <- 1 #E: DON'T UNDERSTAND WHY THIS IS DONE
df_otu_prev_ttt <- data.frame(matrix(ncol=nlevels(as.factor(df_tmp$Irrigation)),
nrow=nlevels(as.factor(df_tmp$OTU)),
dimnames=list(levels(as.factor(df_tmp$OTU)),
levels(as.factor(df_tmp$Irrigation)))))
for (i in unique(df_tmp$OTU)) {
for (j in unique(df_tmp$Irrigation)) {
df_otu_prev_ttt[i,j] <- sum(df_tmp$sample[df_tmp$OTU == i & df_tmp$Irrigation == j],na.rm = T) / nrow(df_tmp[df_tmp$OTU == i & df_tmp$Irrigation == j,]) *100
print(paste(i,j,df_otu_prev_ttt[i,j]),sep="\t")
#print(df_otu_prev_ttt[i,j])
}
}
df_otu_prev_ttt$max_prev <- apply(df_otu_prev_ttt,MARGIN=1, FUN=max)
View(df_otu_prev_ttt)
ps =  physeq.subset
df_prev = df_otu_prev_ttt
tmp_otu_F = rownames(df_prev[df_prev$max_prev >= 50,])
physeq.subset1 <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
physeq.subset <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
rm(ps,df_prev,tmp_otu_F)
physeq.subset
tmp_T3s <- physeq.subset
str(tmp_T3s)
#  treatment
a = tibble("sample"= as.factor(tmp_T3s@sam_data$SampleID),
"treatment"= as.character(tmp_T3s@sam_data$Irrigation))
# force control as intercept
a[a == "Control"] <- "1a"
a = as.factor(a$treatment)
# offset
o = log(sample_sums(tmp_T3s))
tmp_T3s@sam_data
# random effect
z <- as.factor(tmp_T3s@sam_data$SampleID)
# model with pairwise comparison ---------------------------------------------------------------------------------
glmT3s.sum.global = data.frame()
glmT3s.pairwise.global = data.frame()
for (i in 1:length(taxa_names(tmp_T3s))) {
OTU = taxa_names(tmp_T3s)[i]
# response variable
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
tryCatch({
### model
glmT3s <- glmer(y ~ a + (1 | z), family='poisson', offset = o)
glmT3s.sum = summary(glmT3s)$coefficients
#glmT3s.sum = summary(glmT3s)$coefficients$cond
glmT3s.sum = tibble("OTU"= OTU,
"treatment"=rownames(glmT3s.sum),
as_tibble(glmT3s.sum))
glmT3s.sum
glmT3s.sum.global = rbind(glmT3s.sum.global,glmT3s.sum)
### multiple comparison
glmT3s.pairwise = emmeans(glmT3s,pairwise~a)
# select p value
glmT3s.pairwise.sum = summary(glmT3s.pairwise)
glmT3s.pairwise.sum = glmT3s.pairwise.sum[["contrasts"]]
# extract summary
tmp_df = glmT3s.pairwise.sum
# keep only comparisons of interest
tmp = unlist(strsplit(as.character(tmp_df$contrast)," - "))
tmp_df[,"a"] <- tmp[seq(1,length(tmp),by=2)]
tmp_df[,"b"] <- tmp[seq(2,length(tmp),by=2)]
tmp_df = tmp_df[tmp_df$a == "1a" | tmp_df$b == "1a" ,]
# adjust pval n=nb of contrasts
#tmp_df[,"p.adjust"] <- p.adjust(tmp_df$p.value,"fdr",n=21)
#tmp_df[,"p.adjust"] <- p.adjust(tmp_df$p.value,"bonferroni",n=21)
tmp_df = cbind("OTU"=OTU,tmp_df)
glmT3s.pairwise.global = rbind(glmT3s.pairwise.global,tmp_df)
},
error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
rm(OTU,y,glmT3s,glmT3s.sum)
}
glmT3s.model.global = glmT3s.sum.global
glmT3s.pairwise.global = glmT3s.pairwise.global

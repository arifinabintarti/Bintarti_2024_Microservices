View(glmT3s.pairwise.global)
glmT3s.pairwise.global$p.value<=0.05
nrow(glmT3s.pairwise.global[glmT3s.pairwise.global$p.value < glmT3s.pairwise.global$p.adjust,])
nrow(glmT3s.pairwise.global[glmT3s.pairwise.global$p.value > glmT3s.pairwise.global$p.adjust,])
nrow(glmT3s.pairwise.global[glmT3s.pairwise.global$p.value == glmT3s.pairwise.global$p.adjust,])
## nb of pval <= 0.05 before and after filter
table(glmT3s.pairwise.global$p.value <= 0.05)
table(glmT3s.pairwise.global$p.adjust <= 0.05)
## nb of OTU with a pval <= 0.05 before and after filter
tmp_otu3s = unique(glmT3s.pairwise.global$OTU[glmT3s.pairwise.global$p.adjust <= 0.05])
glmT3s.pairwise.global.signif = glmT3s.pairwise.global[glmT3s.pairwise.global$p.adjust <=0.05,]
length(tmp_otu3s)
View(tmp_T3s)
View(glmT3s.pairwise.global.signif)
View(glmT3s.pairwise.global)
glmT3s.model.global
glmT3s.pairwise.global
glmT3s.model.global = glmT3s.sum.global
glmT3s.pairwise.global = glmT3s.pairwise.global
glmT3s.pairwise.global.ed <- subset(glmT3s.pairwise.global,glmT3s.pairwise.global$contrast=="cont.D - rain.D" | glmT3s.pairwise.global$contrast=="cont.M - rain.M" | glmT3s.pairwise.global$contrast=="cont.K - rain.K")
View(glmT3s.pairwise.global.ed)
glmT3s.pairwise.global.ed$p.adjust <- p.adjust(glmT3s.pairwise.global.ed$p.value, method = "fdr")
View(glmT3s.pairwise.global.ed)
otu_table(physeq.subset)
otu_table(physeq)
otu_table(dat04seq1)
colSums(otu_table(dat04seq1))
library(devtools)
library(multcomp)
library(car)
library(BiocManager)
library(vegan)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(ggtext)
library(reshape)
library(ggpubr)
library(car)
library(agricolae)
library(multcompView)
library(grid)
library(gridExtra)
library(sjmisc)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(onewaytests)
library(ggsignif)
library(PerformanceAnalytics)
library(gvlma)
library(ggpmisc)
library(tibble)
library(fitdistrplus)
library(lme4)
library(nlme)
library(ape)
library(phyloseq)
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out/AOB.ASV-analysis')
wd <- print(getwd())
# load the asv table
aob.asv <- read.table('annotated.AOB.ASVs.counts.tsv', sep='\t', header=T, row.names = 1, check.names = FALSE)
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out')
#write.csv(aob.asv, file = "aob.asv.csv")
aob.asv
dim(aob.asv)# 1338  192
sort(colSums(aob.asv, na.rm = FALSE, dims = 1), decreasing = F) # there are no asv that does not exist in at least one sample.
# load the taxonomy table
#setwd('/Users/arifinabintarti/Documents/France/microservices/070623_AOB_out/')
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out')
aob.tax <- read.csv("besthit.diamond.output.curateddb.AOB.ASVs.csv")
dim(aob.tax) # 1338
# load the metadata
#setwd('/Users/arifinabintarti/Documents/France/microservices/')
setwd('D:/Fina/INRAE_Project/microservices')
meta_micro <- read.csv("meta_microservices.csv")
# load phylogenetic tree (nwk file)
#setwd('/Users/arifinabintarti/Documents/France/microservices/070623_AOB_out/AOB.Phylogenetic-analysis/')
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out/AOB.Phylogenetic-analysis')
aob.tre <- ape::read.tree("tree.AOB.nwk")
############################################################################
# rarefaction curve
set.seed(13)
rarecurve(t(aob.asv), step=50, cex=0.5, lwd=2, ylab="ASV", label=F)
re_order <- match(rownames(meta_micro), colnames(aob.asv))
aob.asv.ord  <- aob.asv[ ,re_order]
aob.asv.physeq = otu_table(aob.asv.ord, taxa_are_rows = TRUE) # asv table
sample_names(aob.asv.physeq)
# adding "S" for sample names to avoid possible problem later on
sample_names(aob.asv.physeq) <- paste0("S", sample_names(aob.asv.physeq))
# phyloseq object of the taxonomy table
aob.tax <- column_to_rownames(aob.tax, var = "ASVid")
aob.tax.physeq = tax_table(as.matrix(aob.tax)) # taxonomy table
# phyloseq object of the metadata
str(meta_micro)
meta_micro$Date <- factor(meta_micro$Date, levels = c("4/28/22", "06/01/2022", "07/05/2022", "7/20/22", "9/13/22"),
labels = c("04-28-22", "06-01-22", "07-05-22", "07-20-22", "09-13-22"))
rownames(meta_micro) <- sample_names(aob.asv.physeq)
aob.meta.physeq <- sample_data(meta_micro)# meta data
sample_names(aob.meta.physeq)
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out/AOB-rooted-tree/')
AOB_rooted_tree <- ape::read.tree("tree.nwk")
AOB_rooted_tree
# tree visualization
library("treeio")
library("ggtree")
# make phyloseq object
aob.physeq <- merge_phyloseq(aob.asv.physeq,aob.tax.physeq,aob.meta.physeq,AOB_rooted_tree)
aob.physeq
aob.asv.ord <- as.data.frame(otu_table(aob.physeq))
aob.asv.ord
#write.csv(aob.asv.ord, file = "aob.asv.ord.csv")
sample_data(aob.physeq)$SampleID <- paste0("S", sample_data(aob.physeq)$SampleID)
sample_data(aob.physeq)
# run the ggrare function attached in the file "generating_rarecurve.r"
set.seed(13)
aob.rare <- ggrare(aob.physeq, step = 1, color = "Type", label = "SampleID", se = FALSE)
#set up your own color palette
#install.packages("colorBlindness")
library(colorBlindness)
# ASV Table
sort(colSums(aob.asv, na.rm = FALSE, dims = 1), decreasing = F)
set.seed(333)
aob.rare.1282.seq <- rarefy_even_depth(aob.physeq, sample.size = 1282,
rngseed = 333, replace = FALSE, trimOTUs = TRUE, verbose = TRUE)
aob.rare.1282.seq # 1 samples removed (S11), 116 ASVs were removed
colSums(otu_table(aob.rare.1282.seq))
aob.asv.rare1k <- as.data.frame(otu_table(aob.rare.1282.seq))
dim(aob.asv.rare1k) # 1222 ASVs
aob.asv.rare1k_pa <- 1*(aob.asv.rare1k>0)
aob.s <- specnumber(aob.asv.rare1k, MARGIN = 2) # richness
aob.richness <- as.data.frame(aob.s)
aob.h <- diversity(t(aob.asv.rare1k), index = 'shannon') # Shannon index
aob.shannon <- as.data.frame(aob.h)
aob.d <- diversity(t(aob.asv.rare1k), index = 'simpson') # Simpson index
aob.simpson <- as.data.frame(aob.d)
aob.inv.d <- diversity(t(aob.asv.rare1k), index = 'invsimpson')
View(aob.asv.rare1k)
aob.meta.df <- data.frame(meta_micro)
aob.meta.df.sub <- aob.meta.df %>% filter(SampleID != 11)# filter out S11 from the metadata
aob.meta.df.sub$Richness <- aob.s
aob.meta.df.sub$Shannon <- aob.h
aob.meta.df.sub$Simpson <- aob.d
aob.meta.df.sub$InvSimpson <- aob.inv.d
#aob.min.meta.df$Date  <- as.Date(aob.min.meta.df$Date , "%m/%d/%Y")
str(aob.meta.df.sub)
aob.meta.df.sub$Type <- factor(aob.meta.df.sub$Type, levels = c("BS", "RS"),
labels = c("Bulk Soil", "Rhizosphere"))
aob.meta.df.sub$Treatment <- factor(aob.meta.df.sub$Treatment, levels = c("D", "K", "M"),
labels = c("Biodynamic", "Conventional", "Mineral fertilized"))
aob.meta.df.sub$SampleID<-as.factor(aob.meta.df.sub$SampleID)
aob.meta.df.sub$PlotID<-as.factor(aob.meta.df.sub$PlotID)
aob.meta.df.sub$Irrigation<-as.factor(aob.meta.df.sub$Irrigation)
# tidy up the data frame
aob.meta.df.tidy <- aob.meta.df.sub %>%
group_by(Irrigation, Treatment, Date,  Type, var2,var3) %>%
summarize(Mean.Rich=mean(Richness),
Mean.Sha=mean(Shannon),
Mean.Simp=mean(Simpson),
Mean.invsimp=mean(InvSimpson))
str(aob.meta.df.tidy)
View(aob.meta.df.tidy)
View(aob.meta.df.sub)
data("varechem", package = "vegan")
data("varespec", package = "vegan")
View(varechem)
View(varespec)
# Mantel.test
mantel <- mantel_test(varespec, varechem, mantel.fun = 'mantel.randtest',spec.dist.method = 'bray', env.dist.method = 'euclidean',
spec.select = list(Spec01 = 1:7,
Spec02 = 8:18,
Spec03 = 19:37
)) %>%
mutate(r_value = cut(r, breaks = c(-Inf, 0.25, 0.5, Inf),
labels = c('<0.25', '0.25-0.5', '>=0.5'), right = FALSE),
p_value = cut(p.value, breaks = c(-Inf, 0.001, 0.01, 0.05, Inf),
labels = c('<0.001', '0.001-0.01', '0.01-0.05', '>=0.05'), right = FALSE))
library(dplyr)
library(vegan)
library(ggplot2)
# Mantel.test
mantel <- mantel_test(varespec, varechem, mantel.fun = 'mantel.randtest',spec.dist.method = 'bray', env.dist.method = 'euclidean',
spec.select = list(Spec01 = 1:7,
Spec02 = 8:18,
Spec03 = 19:37
)) %>%
mutate(r_value = cut(r, breaks = c(-Inf, 0.25, 0.5, Inf),
labels = c('<0.25', '0.25-0.5', '>=0.5'), right = FALSE),
p_value = cut(p.value, breaks = c(-Inf, 0.001, 0.01, 0.05, Inf),
labels = c('<0.001', '0.001-0.01', '0.01-0.05', '>=0.05'), right = FALSE))
library(metan)
install.packages("metan")
library(metan)
# Mantel.test
mantel <- mantel_test(varespec, varechem, mantel.fun = 'mantel.randtest',spec.dist.method = 'bray', env.dist.method = 'euclidean',
spec.select = list(Spec01 = 1:7,
Spec02 = 8:18,
Spec03 = 19:37
)) %>%
mutate(r_value = cut(r, breaks = c(-Inf, 0.25, 0.5, Inf),
labels = c('<0.25', '0.25-0.5', '>=0.5'), right = FALSE),
p_value = cut(p.value, breaks = c(-Inf, 0.001, 0.01, 0.05, Inf),
labels = c('<0.001', '0.001-0.01', '0.01-0.05', '>=0.05'), right = FALSE))
install.packages("ggcor")
library(ggcor)
devtools::install_github("houyunhuang/ggcor")
library(ggcor)
library(devtools)
devtools::install_github("houyunhuang/ggcor")
library(ggcor)
devtools::install_github("houyunhuang/ggcor")
install.packages("remotes")
install.packages("remotes")
remotes::install_github("houyunhuang/ggcor")
devtools::install_github("houyunhuang/ggcorrr")
devtools::install_github("houyunhuang/ggcorr")
devtools::install_github("houyunhuang/ggcor")
devtools::install_github("hannet91/ggcor")
library(ggcor)
# Mantel.test
mantel <- mantel_test(varespec, varechem, mantel.fun = 'mantel.randtest',spec.dist.method = 'bray', env.dist.method = 'euclidean',
spec.select = list(Spec01 = 1:7,
Spec02 = 8:18,
Spec03 = 19:37
)) %>%
mutate(r_value = cut(r, breaks = c(-Inf, 0.25, 0.5, Inf),
labels = c('<0.25', '0.25-0.5', '>=0.5'), right = FALSE),
p_value = cut(p.value, breaks = c(-Inf, 0.001, 0.01, 0.05, Inf),
labels = c('<0.001', '0.001-0.01', '0.01-0.05', '>=0.05'), right = FALSE))
View(mantel)
quickcor(varechem, type = "upper") +
geom_square() +
anno_link(aes(colour = p_value, size = r_value), data = mantel) +
scale_size_manual(values = c(0.5, 1, 2)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288")) +
guides(size = guide_legend(title = "Mantel's r",
override.aes = list(colour = "grey35"),
order = 2),
colour = guide_legend(title = "Mantel's p",
override.aes = list(size = 3),
order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))
library(ComplexHeatmap)
quickcor(varechem, type = "upper") +
geom_square() +
anno_link(aes(colour = p_value, size = r_value), data = mantel) +
scale_size_manual(values = c(0.5, 1, 2)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288")) +
guides(size = guide_legend(title = "Mantel's r",
override.aes = list(colour = "grey35"),
order = 2),
colour = guide_legend(title = "Mantel's p",
override.aes = list(size = 3),
order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))
quickcor(varechem, type = "upper") +
geom_square() +
ggcor::anno_link(aes(colour = p_value, size = r_value), data = mantel) +
scale_size_manual(values = c(0.5, 1, 2)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288")) +
guides(size = guide_legend(title = "Mantel's r",
override.aes = list(colour = "grey35"),
order = 2),
colour = guide_legend(title = "Mantel's p",
override.aes = list(size = 3),
order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))
PackageVersion("ggcor")
PackagesVersion("ggcor")
#devtools::install_github("hannet91/ggcor")
library(ggcor)
quickcor(varechem, type = "upper") +
geom_square() +
ggcor::anno_link(aes(colour = p_value, size = r_value), data = mantel) +
scale_size_manual(values = c(0.5, 1, 2)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288")) +
guides(size = guide_legend(title = "Mantel's r",
override.aes = list(colour = "grey35"),
order = 2),
colour = guide_legend(title = "Mantel's p",
override.aes = list(size = 3),
order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))
ggcor::quickcor(varechem, type = "upper") +
geom_square() +
ggcor::anno_link(aes(colour = p_value, size = r_value), data = mantel) +
scale_size_manual(values = c(0.5, 1, 2)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288")) +
guides(size = guide_legend(title = "Mantel's r",
override.aes = list(colour = "grey35"),
order = 2),
colour = guide_legend(title = "Mantel's p",
override.aes = list(size = 3),
order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))
ggcor::quickcor(varechem, type = "upper") +
geom_square() +
anno_link(aes(colour = p_value, size = r_value), data = mantel) +
scale_size_manual(values = c(0.5, 1, 2)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288")) +
guides(size = guide_legend(title = "Mantel's r",
override.aes = list(colour = "grey35"),
order = 2),
colour = guide_legend(title = "Mantel's p",
override.aes = list(size = 3),
order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))
#devtools::install_github("hannet91/ggcor")
library(ggcor)
quickcor(varechem, type = "upper") +
geom_square() +
add_link(aes(colour = p_value, size = r_value), data = mantel) +
scale_size_manual(values = c(0.5, 1, 2)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288")) +
guides(size = guide_legend(title = "Mantel's r",
override.aes = list(colour = "grey35"),
order = 2),
colour = guide_legend(title = "Mantel's p",
override.aes = list(size = 3),
order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))
set.seed(20191224)
sam_grp <- sample(paste0("sample", 1:3), 24, replace = TRUE)
mantel01 <- fortify_mantel(varespec, varechem, group = sam_grp,
spec.select = list(spec01 = 1:5,
spec02 = 6:12,
spec03 = 7:18,
spec04 = 20:29,
spec05 = 30:44),
mantel.fun = "mantel.randtest")
quickcor(mantel01, legend.title = "Mantel's r") +
geom_colour() + geom_cross() + facet_grid(rows = vars(.group))
mantel02 <- fortify_mantel(varespec, varechem,
spec.select = list(1:10, 5:14, 7:22, 9:32)) %>%
mutate(r = cut(r, breaks = c(-Inf, 0.25, 0.5, Inf),
labels = c("<0.25", "0.25-0.5", ">=0.5"),
right = FALSE),
p.value = cut(p.value, breaks = c(-Inf, 0.001, 0.01, 0.05, Inf),
labels = c("<0.001", "0.001-0.01", "0.01-0.05", ">=0.05"),
right = FALSE))
View(mantel02)
quickcor(varechem, type = "upper") + geom_square() +
add_link(mantel02, mapping = aes(colour = p.value, size = r),
diag.label = TRUE) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
add_diag_label() + remove_axis("x")
quickcor(varechem, type = "upper") + geom_square() +
add_link(mantel02, mapping = aes(colour = p.value, size = r),
diag.label = TRUE) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
geom_diag_label() + remove_axis("x")
View(mantel02)
sam_grp <- sample(paste0("sample", 1:3), 24, replace = TRUE)
sam_grp
View(mantel01)
list(spec01 = 1:5,
spec02 = 6:12,
spec03 = 7:18,
spec04 = 20:29,
spec05 = 30:44)
sam_grp
data("varechem")
data("varespec")
View(varechem)
data(mtcars)
View(mtcars)
quickcor(mtcars)
aob.data.cor <- aob.meta.df.sub
View(aob.data.cor)
aob.data.cor.bulk <- aob.data.cor[1:119,]
View(aob.data.cor.bulk)
colnames(aob.data.cor.bulk)
install.packages("microeco")
library(microeco)
library(magrittr)
data(dataset)
data(env_data_16S)
View(dataset)
data(env_data_16S)
View(dataset)
head(env_data_16S)
View(env_data_16S)
View(dataset)
str(dataset)
dataset$sample_table
dataset$tax_table
dataset$sample_table
dataset$sample_table <- data.frame(dataset$sample_table, env_data_16S[rownames(dataset$sample_table), ])
dataset$sample_table
d1 <- clone(dataset)
View(d1)
d1$tax_table
d1$tax_table
d1$tax_table <- d1$tax_table[d1$tax_table$Phylum == "p__Proteobacteria", ]
d1$tidy_dataset()
d1$cal_betadiv()
d1
d1 <- clone(dataset)
d1$tax_table
d1$tax_table <- d1$tax_table[d1$tax_table$Phylum == "p__Proteobacteria", ]
d1$tidy_dataset()
d1$tidy_dataset()
d1$tax_table
d1$tax_table
d1$tax_table <- d1$tax_table[d1$tax_table$Phylum == "p__Proteobacteria", ]
d1 <- clone(dataset)
d1$tax_table
d1$tax_table <- d1$tax_table[d1$tax_table$Phylum == "p__Proteobacteria", ]
d1$tidy_dataset()
d1$cal_betadiv()
d2 <- clone(dataset)
d2$tax_table <- d2$tax_table[d2$tax_table$Phylum == "p__Bacteroidetes", ]
d2$tidy_dataset()
d2$cal_betadiv()
View(d2)
d2$beta_diversity
# first perform mantel test
t1 <- trans_env$new(dataset = d1, env_cols = 8:15)
object$data_env
t1$data_env
# first perform mantel test
t1 <- trans_env$new(dataset = d1, env_cols = 8:15)
t1$cal_mantel(use_measure = "bray", partial_mantel = TRUE)
t1$res_mantel
# extract a part of the results
x1 <- data.frame(spec = "Proteobacteria", t1$res_mantel) %>% .[, c(1, 3, 6, 8)]
x2 <- data.frame(spec = "Bacteroidetes", t2$res_mantel) %>% .[, c(1, 3, 6, 8)]
# rename columns
colnames(x1) <- colnames(x2) <- c("spec", "env", "r", "p.value")
# first perform mantel test
t1 <- trans_env$new(dataset = d1, env_cols = 8:15)
t1$cal_mantel(use_measure = "bray", partial_mantel = TRUE)
t2 <- trans_env$new(dataset = d2, env_cols = 8:15)
t2$cal_mantel(use_measure = "bray", partial_mantel = TRUE)
# extract a part of the results
x1 <- data.frame(spec = "Proteobacteria", t1$res_mantel) %>% .[, c(1, 3, 6, 8)]
x2 <- data.frame(spec = "Bacteroidetes", t2$res_mantel) %>% .[, c(1, 3, 6, 8)]
# rename columns
colnames(x1) <- colnames(x2) <- c("spec", "env", "r", "p.value")
# generate interval data
x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
x2 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
# cobine two tables
plot_table <- rbind(x1, x2)
View(plot_table)
# install ggcor following the steps (https://chiliubio.github.io/microeco_tutorial/intro.html#github-packages)
library(ggplot2)
library(ggcor)
set_scale()
g1 <- quickcor(t1$data_env, type = "upper", cor.test = TRUE, show.diag = FALSE) +
geom_square() +
geom_mark(sig.thres = 0.05, markonly = TRUE, color = "white") +
anno_link(aes(colour = pd, size = rd), data = plot_table) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288")) +
guides(size = guide_legend(title = "Mantel's r", override.aes = list(colour = "grey35"), order = 2),
colour = guide_legend(title = "Mantel's p", override.aes = list(size = 3), order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))
g1
g1 <- quickcor(t1$data_env, type = "upper", cor.test = TRUE, show.diag = FALSE) +
geom_square() +
geom_mark(sig.thres = 0.05, markonly = TRUE, color = "white") +
add_link(aes(colour = pd, size = rd), data = plot_table) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288")) +
guides(size = guide_legend(title = "Mantel's r", override.aes = list(colour = "grey35"), order = 2),
colour = guide_legend(title = "Mantel's p", override.aes = list(size = 3), order = 1),
fill = guide_colorbar(title = "Pearson's r", order = 3))
g1
devtools::install_github("houyunhuang/ggcor")
quickcor(varechem, type = "upper") + geom_square() +
add_link(mantel02, mapping = aes(colour = p.value, size = r),
diag.label = TRUE) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
geom_diag_label() + remove_axis("x")
View(mantel02)
quickcor(t1$data_env, type = "upper") + geom_square() +
add_link(plot_table, mapping = aes(colour = p.value, size = r),
diag.label = TRUE) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
geom_diag_label() + remove_axis("x")
quickcor(t1$data_env, type = "upper") +
geom_square() +
add_link(plot_table, mapping = aes(colour = pd, size = rd),
diag.label = TRUE) +
scale_size_manual(values = c(0.5, 1.5, 3)) +
scale_colour_manual(values = c("#D95F02", "#1B9E77", "#A2A2A288"))+
geom_diag_label() + remove_axis("x")
View(x1)
# extract a part of the results
x1 <- data.frame(spec = "Proteobacteria", t1$res_mantel) %>% .[, c(1, 3, 6, 8)]
View(x1)
t1$data_env
# generate interval data
x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
# extract a part of the results
x1 <- data.frame(spec = "Proteobacteria", t1$res_mantel) %>% .[, c(1, 3, 6, 8)]
x2 <- data.frame(spec = "Bacteroidetes", t2$res_mantel) %>% .[, c(1, 3, 6, 8)]
# rename columns
colnames(x1) <- colnames(x2) <- c("spec", "env", "r", "p.value")
# generate interval data
x1 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))
View(x1)
x2 %<>% dplyr::mutate(rd = cut(r, breaks = c(-Inf, 0.3, 0.6, Inf), labels = c("< 0.3", "0.3 - 0.6", ">= 0.6")),
pd = cut(p.value, breaks = c(-Inf, 0.01, 0.05, Inf), labels = c("< 0.01", "0.01 - 0.05", ">= 0.05")))

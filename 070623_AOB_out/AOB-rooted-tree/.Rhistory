sort(rowSums(aoa.asv.bulk1, na.rm = FALSE, dims = 1), decreasing = FALSE)
aoa.bulk_dist_bc <- vegdist(t(aoa.asv.bulk1), method = "bray")
aoa.bulk_dist_jac <- vegdist(t(aoa.asv.bulk1), binary = TRUE, method = "jaccard")
# Weighted UniFrac (rarefied) - Bulk Soil:
aoa.physeq_bulk <- subset_samples(aoa.rare.min.physeq, Type=="BS")
aoa.physeq_bulk1 <- prune_taxa(taxa_sums(aoa.physeq_bulk)>0, aoa.physeq_bulk)
aoa.physeq_bulk1
sort(taxa_sums(aoa.physeq_bulk1), decreasing =F) #checking
aoa.bulk_dist_wUF <- UniFrac(aoa.physeq_bulk1, weighted=TRUE, normalized = TRUE)
aoa.bulk_dist_wUF
# Unweighted UniFrac (rarefied) -  Bulk Soil:
aoa.bulk_dist_uwUF <- UniFrac(aoa.physeq_bulk1, weighted=FALSE, normalized = TRUE)
aoa.bulk_dist_uwUF
# 2. CMD/classical multidimensional scaling (MDS) of a data matrix. Also known as principal coordinates analysis
# Bray-Curtis - Bulk Soil:
aoa.bulk_pcoa_bc <- cmdscale(aoa.bulk_dist_bc, eig=T)
# Jaccard - Bulk Soil:
aoa.bulk_pcoa_jac <- cmdscale(aoa.bulk_dist_jac, eig=T)
# Weighted UniFrac - Bulk Soil:
aoa.bulk_pcoa_wUF <- cmdscale(aoa.bulk_dist_wUF, eig=T)
# Unweighted UniFrac - Bulk Soil:
aoa.bulk_pcoa.uwUF <- cmdscale(aoa.bulk_dist_uwUF, eig=T)
# 3. scores of PC1 and PC2
# Bray-Curtis - Bulk Soil:
ax1.scores.bulk <- aoa.bulk_pcoa_bc$points[,1]
ax2.scores.bulk <- aoa.bulk_pcoa_bc$points[,2]
# Jaccard - Bulk Soil:
ax1.scores.j.bulk <- aoa.bulk_pcoa_jac$points[,1]
ax2.scores.j.bulk <- aoa.bulk_pcoa_jac$points[,2]
# Weighted UniFrac - Bulk Soil:
ax1.scores.wUF.bulk <- aoa.bulk_pcoa_wUF$points[,1]
ax2.scores.wUF.bulk <- aoa.bulk_pcoa_wUF$points[,2]
# Unweighted UniFrac - Bulk Soil:
ax1.scores.uwUF.bulk <- aoa.bulk_pcoa.uwUF$points[,1]
ax2.scores.uwUF.bulk <- aoa.bulk_pcoa.uwUF$points[,2]
#env_fit <- envfit(otu_pcoa, env, na.rm=TRUE)
# 4. Envfit
env.aoa.bulk <- aoa.meta.df[1:120,c(13:19, 22,26:28)]
str(env.aoa.bulk)
env.aoa.bulk <- env.aoa.bulk %>% mutate_at(colnames(env.aoa.bulk), as.numeric)
# bray-curtis
set.seed(13)
env_fit.aoa.bc.bulk <- envfit(aoa.bulk_pcoa_bc, env.aoa.bulk, na.rm=TRUE)
env_fit.aoa.bc.bulk
# Jaccard
set.seed(13)
env_fit.aoa.jac <- envfit(aoa.bulk_pcoa_jac, env.aoa.bulk, na.rm=TRUE)
# Weighted UniFrac
set.seed(13)
env_fit.aoa.wuF <- envfit(aoa.bulk_pcoa_wUF, env.aoa.bulk, na.rm=TRUE)
# UnWeighted UniFrac
set.seed(13)
env_fit.aoa.uwuF <- envfit(aoa.bulk_pcoa.uwUF, env.aoa.bulk, na.rm=TRUE)
# 5. calculate percent variance explained, then add to plot
aoa.meta.bulk <- aoa.meta.df[1:120,]
# Bray-curtis - Bulk Soil:
ax1.bulk <- aoa.bulk_pcoa_bc$eig[1]/sum(aoa.bulk_pcoa_bc$eig)
ax2.bulk <- aoa.bulk_pcoa_bc$eig[2]/sum(aoa.bulk_pcoa_bc$eig)
aoa.map.pcoa.bulk <- cbind(aoa.meta.bulk,ax1.scores.bulk,ax2.scores.bulk)
# Jaccard - Bulk Soil:
ax1.j.bulk <- aoa.bulk_pcoa_jac$eig[1]/sum(aoa.bulk_pcoa_jac$eig)
ax2.j.bulk <- aoa.bulk_pcoa_jac$eig[2]/sum(aoa.bulk_pcoa_jac$eig)
aoa.map.pcoa.j.bulk <- cbind(aoa.meta.bulk,ax1.scores.j.bulk,ax2.scores.j.bulk)
# Weighted UniFrac - Bulk Soil:
ax1.wUF.bulk <- aoa.bulk_pcoa_wUF$eig[1]/sum(aoa.bulk_pcoa_wUF$eig)
ax2.wUF.bulk <- aoa.bulk_pcoa_wUF$eig[2]/sum(aoa.bulk_pcoa_wUF$eig)
aoa.map.pcoa.wUF.bulk <- cbind(aoa.meta.bulk,ax1.scores.wUF.bulk,ax2.scores.wUF.bulk)
# Unweighted UniFrac - Bulk Soil:
ax1.uwUF.bulk <- aoa.bulk_pcoa.uwUF$eig[1]/sum(aoa.bulk_pcoa.uwUF$eig)
ax2.uwUF.bulk <- aoa.bulk_pcoa.uwUF$eig[2]/sum(aoa.bulk_pcoa.uwUF$eig)
aoa.map.pcoa.uwUF.bulk <- cbind(aoa.meta.bulk,ax1.scores.uwUF.bulk,ax2.scores.uwUF.bulk)
# Bray-Curtis - Rhizosphere :
aoa.asv.rh <- aoarare.asv.df[,121:192]
aoa.asv.rh1 <- aoa.asv.rh[rowSums(aoa.asv.rh)>0,]
sort(rowSums(aoa.asv.rh1, na.rm = FALSE, dims = 1), decreasing = FALSE)
dim(aoa.asv.rh1)
aoa.rh_dist_bc <- vegdist(t(aoa.asv.rh1), method = "bray")
# jaccard - Rhizosphere :
aoa.rh_dist_jac <- vegdist(t(aoa.asv.rh1), binary = TRUE, method = "jaccard")
aoa.physeq_rh <- subset_samples(aoa.rare.min.physeq, Type=="RS")
aoa.physeq_rh1 <- prune_taxa(taxa_sums(aoa.physeq_rh)>0, aoa.physeq_rh)
aoa.physeq_rh1
sort(taxa_sums(aoa.physeq_rh1), decreasing =F) #checking
aoa.rh_dist_wUF <- UniFrac(aoa.physeq_rh1, weighted=TRUE, normalized = TRUE)
aoa.rh_dist_wUF
# Unweighted UniFrac (rarefied) -  Rhizosphere :
aoa.rh_dist_uwUF <- UniFrac(aoa.physeq_rh1, weighted=FALSE, normalized = TRUE)
aoa.rh_dist_uwUF
# 2. CMD/classical multidimensional scaling (MDS) of a data matrix. Also known as principal coordinates analysis
# Bray-Curtis - Rhizosphere :
aoa.rh_pcoa_bc <- cmdscale(aoa.rh_dist_bc, eig=T)
# Jaccard - Rhizosphere :
aoa.rh_pcoa_jac <- cmdscale(aoa.rh_dist_jac, eig=T)
# Weighted UniFrac - Rhizosphere :
aoa.rh_pcoa_wUF <- cmdscale(aoa.rh_dist_wUF, eig=T)
# Unweighted UniFrac - Rhizosphere :
aoa.rh_pcoa.uwUF <- cmdscale(aoa.rh_dist_uwUF, eig=T)
# 3. scores of PC1 and PC2
# Bray-Curtis - Rhizosphere :
ax1.scores.rh <- aoa.rh_pcoa_bc$points[,1]
ax2.scores.rh <- aoa.rh_pcoa_bc$points[,2]
# Jaccard - Rhizosphere :
ax1.scores.j.rh <- aoa.rh_pcoa_jac$points[,1]
ax2.scores.j.rh <- aoa.rh_pcoa_jac$points[,2]
# Weighted UniFrac - Rhizosphere :
ax1.scores.wUF.rh <- aoa.rh_pcoa_wUF$points[,1]
ax2.scores.wUF.rh <- aoa.rh_pcoa_wUF$points[,2]
# Unweighted UniFrac - Rhizosphere :
ax1.scores.uwUF.rh <- aoa.rh_pcoa.uwUF$points[,1]
ax2.scores.uwUF.rh <- aoa.rh_pcoa.uwUF$points[,2]
aoa.meta.rh <- aoa.meta.df[121:192,]
# Bray-curtis - Rhizosphere :
ax1.rh <- aoa.rh_pcoa_bc$eig[1]/sum(aoa.rh_pcoa_bc$eig)
ax2.rh <- aoa.rh_pcoa_bc$eig[2]/sum(aoa.rh_pcoa_bc$eig)
aoa.map.pcoa.rh <- cbind(aoa.meta.rh,ax1.scores.rh,ax2.scores.rh)
# Jaccard - Rhizosphere :
ax1.j.rh <- aoa.rh_pcoa_jac$eig[1]/sum(aoa.rh_pcoa_jac$eig)
ax2.j.rh <- aoa.rh_pcoa_jac$eig[2]/sum(aoa.rh_pcoa_jac$eig)
aoa.map.pcoa.j.rh <- cbind(aoa.meta.rh,ax1.scores.j.rh,ax2.scores.j.rh)
# Weighted UniFrac - Rhizosphere :
ax1.wUF.rh <- aoa.rh_pcoa_wUF$eig[1]/sum(aoa.rh_pcoa_wUF$eig)
ax2.wUF.rh <- aoa.rh_pcoa_wUF$eig[2]/sum(aoa.rh_pcoa_wUF$eig)
aoa.map.pcoa.wUF.rh <- cbind(aoa.meta.rh,ax1.scores.wUF.rh,ax2.scores.wUF.rh)
# Unweighted UniFrac - Rhizosphere :
ax1.uwUF.rh <- aoa.rh_pcoa.uwUF$eig[1]/sum(aoa.rh_pcoa.uwUF$eig)
ax2.uwUF.rh <- aoa.rh_pcoa.uwUF$eig[2]/sum(aoa.rh_pcoa.uwUF$eig)
aoa.map.pcoa.uwUF.rh <- cbind(aoa.meta.rh,ax1.scores.uwUF.rh,ax2.scores.uwUF.rh)
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/COM.ASV-analysis')
wd <- print(getwd())
# load the asv table
com.asv <- read.table('annotated.COM.ASVs.counts.tsv', sep='\t', header=T, row.names = 1, check.names = FALSE)
dim(com.asv) # 686 192
# remove the bad sample (sample # 26) from the OTU table
com.asv.sub <- com.asv[, -which(names(com.asv) == "26" )]
sort(rowSums(com.asv.sub, na.rm = FALSE, dims = 1), decreasing = FALSE)
dim(com.asv.sub)
# load the taxonomy table
#setwd('/Users/arifinabintarti/Documents/France/microservices/090623_COM_out/')
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/')
com.tax <- read.table("besthit.diamond.output.curateddb.COM.ASVs.edited.csv", sep = ';', header=T)
dim(com.tax) # 680
# load the metadata
#setwd('/Users/arifinabintarti/Documents/France/microservices/')
setwd('D:/Fina/INRAE_Project/microservices/')
meta_micro <- read.csv("meta_microservices.csv")
# remove the bad sample (sample # 26) from the metadata
meta_micro_sub <- meta_micro[-26,]
# load phylogenetic tree (nwk file)
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/COM-rooted-tree/')
COM_rooted_tree <- ape::read.tree("tree.nwk")
re_order <- match(rownames(meta_micro_sub), colnames(com.asv.sub))
com.asv.ord  <- com.asv.sub[ ,re_order]
com.asv.physeq = otu_table(com.asv.ord, taxa_are_rows = TRUE) # asv table
sample_names(com.asv.physeq)
# adding "S" for sample names to avoid possible problem later on
sample_names(com.asv.physeq) <- paste0("S", sample_names(com.asv.physeq))
# phyloseq object of the taxonomy table
com.tax <- column_to_rownames(com.tax, var = "ASVid")
#row.names(com.tax) <- com.tax$ASVid
com.tax.physeq = tax_table(as.matrix(com.tax)) # taxonomy table
# phyloseq object of the metadata
meta_micro_sub$Date <- factor(meta_micro_sub$Date, levels = c("4/28/22", "06/01/2022", "07/05/2022", "7/20/22", "9/13/22"),
labels = c("04-28-22", "06-01-22", "07-05-22", "07-20-22", "09-13-22"))
rownames(meta_micro_sub) <- sample_names(com.asv.physeq)
com.meta.physeq <- sample_data(meta_micro_sub)# meta data
sample_names(com.meta.physeq)
# read the rooted tree
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/COM-rooted-tree/')
COM_rooted_tree <- ape::read.tree("tree.nwk")
# make phyloseq object
com.physeq <- merge_phyloseq(com.asv.physeq,com.tax.physeq,com.meta.physeq,COM_rooted_tree)
com.physeq # 653 taxa
sample_data(com.physeq)$SampleID <- paste0("S", sample_data(com.physeq)$SampleID)
sample_data(com.physeq)
# rarefy to minimum sequencing depth (minimum reads =  reads)
set.seed(333)
com.rare.min.physeq <- rarefy_even_depth(com.physeq, sample.size = 5242,
rngseed = 333, replace = FALSE, trimOTUs = TRUE, verbose = TRUE)
com.rare.min.physeq #632 taxa
sort(sample_sums(com.rare.min.physeq), decreasing = F) # 21 OTUs were removed because they are no longer present in any sample after random subsampling
# 1 sample removed (S52)
sort(rowSums(otu_table(com.rare.min.physeq), na.rm = FALSE, dims = 1), decreasing = F)
colSums(otu_table(com.rare.min.physeq))
com.rare.asv.df <- as.data.frame(otu_table(com.rare.min.physeq))
dim(com.rare.asv.df) # 632 ASVs, 190 samples
com.rare.asv.df_pa <- 1*(com.rare.asv.df>0)
com.s <- specnumber(com.rare.asv.df, MARGIN = 2) # richness
com.richness <- as.data.frame(com.s)
com.h <- diversity(t(com.rare.asv.df), index = 'shannon') # Shannon index
com.shannon <- as.data.frame(com.h)
com.d <- diversity(t(com.rare.asv.df), index = 'simpson') # Simpson index
com.simpson <- as.data.frame(com.d)
com.inv.d <- diversity(t(com.rare.asv.df), index = 'invsimpson')
# 1. Richness
# Line plot of COM richness
meta_micro_sub2 <- meta_micro_sub %>% filter(SampleID != "52")
com.meta.df <- data.frame(meta_micro_sub2)
com.meta.df$Richness <- com.s
com.meta.df$Shannon <- com.h
com.meta.df$Simpson <- com.d
com.meta.df$InvSimpson <- com.inv.d
#com.min.meta.df$Date  <- as.Date(com.meta.df$Date , "%m/%d/%Y")
str(com.meta.df)
com.meta.df$Type <- factor(com.meta.df$Type, levels = c("BS", "RS"),
labels = c("Bulk Soil", "Rhizosphere"))
com.meta.df$Treatment <- factor(com.meta.df$Treatment, levels = c("D", "K", "M"),
labels = c("Biodynamic", "Conventional", "Mineral fertilized"))
com.meta.df$SampleID<-as.factor(com.meta.df$SampleID)
com.meta.df$PlotID<-as.factor(com.meta.df$PlotID)
com.meta.df$Irrigation<-as.factor(com.meta.df$Irrigation)
# tidy up the data frame
com.meta.df.tidy <- com.meta.df %>%
group_by(Irrigation, Treatment, Date, Type, var2,var3) %>%
summarize(Mean.Rich=mean(Richness),
Mean.Sha=mean(Shannon),
Mean.Simp=mean(Simpson),
Mean.invsimp=mean(InvSimpson))
str(com.meta.df.tidy)
# Bray-Curtis - Bulk Soil :
com.rare.asv.df
com.asv.bulk <- com.rare.asv.df[,1:118]
com.asv.bulk1 <- com.asv.bulk[rowSums(com.asv.bulk)>0,]
sort(rowSums(com.asv.bulk1, na.rm = FALSE, dims = 1), decreasing = FALSE)
com.bulk_dist_bc <- vegdist(t(com.asv.bulk1), method = "bray")
# jaccard - Bulk Soil :
com.bulk_dist_jac <- vegdist(t(com.asv.bulk1), binary = TRUE, method = "jaccard")
# Weighted UniFrac (rarefied) - Bulk Soil:
com.physeq_bulk <- subset_samples(com.rare.min.physeq, Type=="BS")
com.physeq_bulk1 <- prune_taxa(taxa_sums(com.physeq_bulk)>0, com.physeq_bulk)
com.physeq_bulk1
sort(taxa_sums(com.physeq_bulk1), decreasing =F) #checking
com.bulk_dist_wUF <- UniFrac(com.physeq_bulk1, weighted=TRUE, normalized = TRUE)
com.bulk_dist_wUF
# Unweighted UniFrac (rarefied) -  Bulk Soil:
com.bulk_dist_uwUF <- UniFrac(com.physeq_bulk1, weighted=FALSE, normalized = TRUE)
com.bulk_dist_uwUF
# Bray-Curtis - Bulk Soil:
com.bulk_pcoa_bc <- cmdscale(com.bulk_dist_bc, eig=T)
# Jaccard - Bulk Soil:
com.bulk_pcoa_jac <- cmdscale(com.bulk_dist_jac, eig=T)
# Weighted UniFrac - Bulk Soil:
com.bulk_pcoa_wUF <- cmdscale(com.bulk_dist_wUF, eig=T)
# Unweighted UniFrac - Bulk Soil:
com.bulk_pcoa.uwUF <- cmdscale(com.bulk_dist_uwUF, eig=T)
# Bray-Curtis - Bulk Soil:
ax1.scores.bulk <- com.bulk_pcoa_bc$points[,1]
ax2.scores.bulk <- com.bulk_pcoa_bc$points[,2]
# Jaccard - Bulk Soil:
ax1.scores.j.bulk <- com.bulk_pcoa_jac$points[,1]
ax2.scores.j.bulk <- com.bulk_pcoa_jac$points[,2]
# Weighted UniFrac - Bulk Soil:
ax1.scores.wUF.bulk <- com.bulk_pcoa_wUF$points[,1]
ax2.scores.wUF.bulk <- com.bulk_pcoa_wUF$points[,2]
# Unweighted UniFrac - Bulk Soil:
ax1.scores.uwUF.bulk <- com.bulk_pcoa.uwUF$points[,1]
ax2.scores.uwUF.bulk <- com.bulk_pcoa.uwUF$points[,2]
# 4. Envfit
env.com.bulk <- com.meta.df[1:118,c(13:19, 22,26:28)]
str(env.com.bulk)
env.com.bulk <- env.com.bulk %>% mutate_at(colnames(env.com.bulk), as.numeric)
# bray-curtis
set.seed(13)
env_fit.com.bc.bulk <- envfit(com.bulk_pcoa_bc, env.com.bulk, na.rm=TRUE)
env_fit.com.bc.bulk
# Jaccard
set.seed(13)
env_fit.com.jac <- envfit(com.bulk_pcoa_jac, env.com.bulk, na.rm=TRUE)
# Weighted UniFrac
set.seed(13)
env_fit.com.wuF <- envfit(com.bulk_pcoa_wUF, env.com.bulk, na.rm=TRUE)
# UnWeighted UniFrac
set.seed(13)
env_fit.com.uwuF <- envfit(com.bulk_pcoa.uwUF, env.com.bulk, na.rm=TRUE)
# 5. calculate percent variance explained, then add to plot
com.meta.bulk <- com.meta.df[1:118,]
# Bray-curtis - Bulk Soil:
ax1.bulk <- com.bulk_pcoa_bc$eig[1]/sum(com.bulk_pcoa_bc$eig)
ax2.bulk <- com.bulk_pcoa_bc$eig[2]/sum(com.bulk_pcoa_bc$eig)
com.map.pcoa.bulk <- cbind(com.meta.bulk,ax1.scores.bulk,ax2.scores.bulk)
# Jaccard - Bulk Soil:
ax1.j.bulk <- com.bulk_pcoa_jac$eig[1]/sum(com.bulk_pcoa_jac$eig)
ax2.j.bulk <- com.bulk_pcoa_jac$eig[2]/sum(com.bulk_pcoa_jac$eig)
com.map.pcoa.j.bulk <- cbind(com.meta.bulk,ax1.scores.j.bulk,ax2.scores.j.bulk)
# Weighted UniFrac - Bulk Soil:
ax1.wUF.bulk <- com.bulk_pcoa_wUF$eig[1]/sum(com.bulk_pcoa_wUF$eig)
ax2.wUF.bulk <- com.bulk_pcoa_wUF$eig[2]/sum(com.bulk_pcoa_wUF$eig)
com.map.pcoa.wUF.bulk <- cbind(com.meta.bulk,ax1.scores.wUF.bulk,ax2.scores.wUF.bulk)
# Unweighted UniFrac - Bulk Soil:
ax1.uwUF.bulk <- com.bulk_pcoa.uwUF$eig[1]/sum(com.bulk_pcoa.uwUF$eig)
ax2.uwUF.bulk <- com.bulk_pcoa.uwUF$eig[2]/sum(com.bulk_pcoa.uwUF$eig)
com.map.pcoa.uwUF.bulk <- cbind(com.meta.bulk,ax1.scores.uwUF.bulk,ax2.scores.uwUF.bulk)
# Bray-Curtis - Rhizosphere :
com.asv.rh <- com.rare.asv.df[,119:190]
com.asv.rh1 <- com.asv.rh[rowSums(com.asv.rh)>0,]
sort(rowSums(com.asv.rh1, na.rm = FALSE, dims = 1), decreasing = FALSE)
dim(com.asv.rh1)
com.rh_dist_bc <- vegdist(t(com.asv.rh1), method = "bray")
# jaccard - Rhizosphere :
com.rh_dist_jac <- vegdist(t(com.asv.rh1), binary = TRUE, method = "jaccard")
# Weighted UniFrac (rarefied) - Rhizosphere :
com.physeq_rh <- subset_samples(com.rare.min.physeq, Type=="RS")
com.physeq_rh1 <- prune_taxa(taxa_sums(com.physeq_rh)>0, com.physeq_rh)
com.physeq_rh1
sort(taxa_sums(com.physeq_rh1), decreasing =F) #checking
com.rh_dist_wUF <- UniFrac(com.physeq_rh1, weighted=TRUE, normalized = TRUE)
com.rh_dist_wUF
# Unweighted UniFrac (rarefied) -  Rhizosphere :
com.rh_dist_uwUF <- UniFrac(com.physeq_rh1, weighted=FALSE, normalized = TRUE)
com.rh_dist_uwUF
# Bray-Curtis - Rhizosphere :
com.rh_pcoa_bc <- cmdscale(com.rh_dist_bc, eig=T)
# Jaccard - Rhizosphere :
com.rh_pcoa_jac <- cmdscale(com.rh_dist_jac, eig=T)
# Weighted UniFrac - Rhizosphere :
com.rh_pcoa_wUF <- cmdscale(com.rh_dist_wUF, eig=T)
# Unweighted UniFrac - Rhizosphere :
com.rh_pcoa.uwUF <- cmdscale(com.rh_dist_uwUF, eig=T)
# Bray-Curtis - Rhizosphere :
ax1.scores.rh <- com.rh_pcoa_bc$points[,1]
ax2.scores.rh <- com.rh_pcoa_bc$points[,2]
# Jaccard - Rhizosphere :
ax1.scores.j.rh <- com.rh_pcoa_jac$points[,1]
ax2.scores.j.rh <- com.rh_pcoa_jac$points[,2]
# Weighted UniFrac - Rhizosphere :
ax1.scores.wUF.rh <- com.rh_pcoa_wUF$points[,1]
ax2.scores.wUF.rh <- com.rh_pcoa_wUF$points[,2]
# Unweighted UniFrac - Rhizosphere :
ax1.scores.uwUF.rh <- com.rh_pcoa.uwUF$points[,1]
ax2.scores.uwUF.rh <- com.rh_pcoa.uwUF$points[,2]
# 4. calculate percent variance explained, then add to plot
com.meta.rh <- com.meta.df[119:190,]
# Bray-curtis - Rhizosphere :
ax1.rh <- com.rh_pcoa_bc$eig[1]/sum(com.rh_pcoa_bc$eig)
ax2.rh <- com.rh_pcoa_bc$eig[2]/sum(com.rh_pcoa_bc$eig)
com.map.pcoa.rh <- cbind(com.meta.rh,ax1.scores.rh,ax2.scores.rh)
# Jaccard - Rhizosphere :
ax1.j.rh <- com.rh_pcoa_jac$eig[1]/sum(com.rh_pcoa_jac$eig)
ax2.j.rh <- com.rh_pcoa_jac$eig[2]/sum(com.rh_pcoa_jac$eig)
com.map.pcoa.j.rh <- cbind(com.meta.rh,ax1.scores.j.rh,ax2.scores.j.rh)
# Weighted UniFrac - Rhizosphere :
ax1.wUF.rh <- com.rh_pcoa_wUF$eig[1]/sum(com.rh_pcoa_wUF$eig)
ax2.wUF.rh <- com.rh_pcoa_wUF$eig[2]/sum(com.rh_pcoa_wUF$eig)
com.map.pcoa.wUF.rh <- cbind(com.meta.rh,ax1.scores.wUF.rh,ax2.scores.wUF.rh)
# Unweighted UniFrac - Rhizosphere :
ax1.uwUF.rh <- com.rh_pcoa.uwUF$eig[1]/sum(com.rh_pcoa.uwUF$eig)
ax2.uwUF.rh <- com.rh_pcoa.uwUF$eig[2]/sum(com.rh_pcoa.uwUF$eig)
com.map.pcoa.uwUF.rh <- cbind(com.meta.rh,ax1.scores.uwUF.rh,ax2.scores.uwUF.rh)
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out/AOB.ASV-analysis')
wd <- print(getwd())
# load the asv table
aob.asv <- read.table('annotated.AOB.ASVs.counts.tsv', sep='\t', header=T, row.names = 1, check.names = FALSE)
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out')
#write.csv(aob.asv, file = "aob.asv.csv")
aob.asv
dim(aob.asv)# 1338  192
sort(colSums(aob.asv, na.rm = FALSE, dims = 1), decreasing = F) # there are no asv that does not exist in at least one sample.
# load the taxonomy table
#setwd('/Users/arifinabintarti/Documents/France/microservices/070623_AOB_out/')
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out')
aob.tax <- read.csv("besthit.diamond.output.curateddb.AOB.ASVs.csv")
dim(aob.tax) # 1338
# load the metadata
#setwd('/Users/arifinabintarti/Documents/France/microservices/')
setwd('D:/Fina/INRAE_Project/microservices')
meta_micro <- read.csv("meta_microservices.csv")
# load phylogenetic tree (nwk file)
#setwd('/Users/arifinabintarti/Documents/France/microservices/070623_AOB_out/AOB.Phylogenetic-analysis/')
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out/AOB.Phylogenetic-analysis')
aob.tre <- ape::read.tree("tree.AOB.nwk")
re_order <- match(rownames(meta_micro), colnames(aob.asv))
aob.asv.ord  <- aob.asv[ ,re_order]
aob.asv.physeq = otu_table(aob.asv.ord, taxa_are_rows = TRUE) # asv table
sample_names(aob.asv.physeq)
# adding "S" for sample names to avoid possible problem later on
sample_names(aob.asv.physeq) <- paste0("S", sample_names(aob.asv.physeq))
# phyloseq object of the taxonomy table
aob.tax <- column_to_rownames(aob.tax, var = "ASVid")
aob.tax.physeq = tax_table(as.matrix(aob.tax)) # taxonomy table
# phyloseq object of the metadata
str(meta_micro)
meta_micro$Date <- factor(meta_micro$Date, levels = c("4/28/22", "06/01/2022", "07/05/2022", "7/20/22", "9/13/22"),
labels = c("04-28-22", "06-01-22", "07-05-22", "07-20-22", "09-13-22"))
rownames(meta_micro) <- sample_names(aob.asv.physeq)
aob.meta.physeq <- sample_data(meta_micro)# meta data
sample_names(aob.meta.physeq)
aob.tax.physeq = tax_table(as.matrix(aob.tax)) # taxonomy table
# phyloseq object of the metadata
str(meta_micro)
meta_micro$Date <- factor(meta_micro$Date, levels = c("4/28/22", "06/01/2022", "07/05/2022", "7/20/22", "9/13/22"),
labels = c("04-28-22", "06-01-22", "07-05-22", "07-20-22", "09
str(meta_micro)
meta_micro$Date <- factor(meta_micro$Date, levels = c("4/28/22", "06/01/2022", "07/05/2022", "7/20/22", "9/13/22"),
# read the rooted tree
#setwd('/Users/arifinabintarti/Documents/France/microservices/070623_AOB_out/AOB-rooted-tree/')
setwd('D:/Fina/INRAE_Project/microservices/070623_AOB_out/AOB-rooted-tree/')
AOB_rooted_tree <- ape::read.tree("tree.nwk")
AOB_rooted_tree
aob.physeq <- merge_phyloseq(aob.asv.physeq,aob.tax.physeq,aob.meta.physeq,AOB_rooted_tree)
aob.physeq
aob.asv.ord <- as.data.frame(otu_table(aob.physeq))
aob.asv.ord
#write.csv(aob.asv.ord, file = "aob.asv.ord.csv")
sample_data(aob.physeq)$SampleID <- paste0("S", sample_data(aob.physeq)$SampleID)
sample_data(aob.physeq)
# ASV Table
sort(colSums(aob.asv, na.rm = FALSE, dims = 1), decreasing = F)
set.seed(333)
aob.rare.1282.seq <- rarefy_even_depth(aob.physeq, sample.size = 1282,
rngseed = 333, replace = FALSE, trimOTUs = TRUE, verbose = TRUE)
aob.rare.1282.seq # 1 samples removed (S11), 116 ASVs were removed
sort(rowSums(otu_table(aob.rare.1282.seq), na.rm = FALSE, dims = 1), decreasing = F)
colSums(otu_table(aob.rare.1282.seq))
aob.asv.rare1k <- as.data.frame(otu_table(aob.rare.1282.seq))
dim(aob.asv.rare1k) # 1222 ASVs
aob.asv.rare1k_pa <- 1*(aob.asv.rare1k>0)
aob.s <- specnumber(aob.asv.rare1k, MARGIN = 2) # richness
aob.richness <- as.data.frame(aob.s)
aob.h <- diversity(t(aob.asv.rare1k), index = 'shannon') # Shannon index
aob.shannon <- as.data.frame(aob.h)
aob.d <- diversity(t(aob.asv.rare1k), index = 'simpson') # Simpson index
aob.simpson <- as.data.frame(aob.d)
aob.inv.d <- diversity(t(aob.asv.rare1k), index = 'invsimpson')
# 1. Richness
# Line plot of AOB richness
aob.meta.df <- data.frame(meta_micro)
aob.meta.df.sub <- aob.meta.df %>% filter(SampleID != 11)# filter out S11 from the metadata
aob.meta.df.sub$Richness <- aob.s
aob.meta.df.sub$Shannon <- aob.h
aob.meta.df.sub$Simpson <- aob.d
aob.meta.df.sub$InvSimpson <- aob.inv.d
#aob.min.meta.df$Date  <- as.Date(aob.min.meta.df$Date , "%m/%d/%Y")
str(aob.meta.df.sub)
aob.meta.df.sub$Type <- factor(aob.meta.df.sub$Type, levels = c("BS", "RS"),
labels = c("Bulk Soil", "Rhizosphere"))
aob.meta.df.sub$Treatment <- factor(aob.meta.df.sub$Treatment, levels = c("D", "K", "M"),
labels = c("Biodynamic", "Conventional", "Mineral fertilized"))
aob.meta.df.sub$SampleID<-as.factor(aob.meta.df.sub$SampleID)
aob.meta.df.sub$PlotID<-as.factor(aob.meta.df.sub$PlotID)
aob.meta.df.sub$Irrigation<-as.factor(aob.meta.df.sub$Irrigation)
# tidy up the data frame
aob.meta.df.tidy <- aob.meta.df.sub %>%
group_by(Irrigation, Treatment, Date,  Type, var2,var3) %>%
summarize(Mean.Rich=mean(Richness),
Mean.Sha=mean(Shannon),
Mean.Simp=mean(Simpson),
Mean.invsimp=mean(InvSimpson))
str(aob.meta.df.tidy)
#install.packages("parallel")
#install.packages("BiodiversityR")
library(parallel)
library(BiodiversityR)
library(ggforce)
# run Bray-Curtis beta diversity on bulk soil
aoa.bulk_dist_bc <- vegdist(t(aoa.asv.bulk1), method = "bray")
aoa.bulk_dist_bc
# metadata
aoa.meta.bulk
aoa.meta.bulk.ed <- aoa.meta.bulk[,-30:-45]
aoa.meta.bulk.ed$x <- as.factor(aoa.meta.bulk.ed$x)
# run CAP on increasing numbers of PCoA axes to check how many axes need to be included in the model (diagnostics).
nc <- nrow(as.matrix(aoa.bulk_dist_bc))
success <- data.frame(m = numeric(nc), class.success = numeric(nc))
set.seed(133)
for (i in 1:50) {
cap <- CAPdiscrim(aoa.bulk_dist_bc ~ x, data = aoa.meta.bulk.ed, m = i, add = TRUE)
success[i, 1] <- cap$m
success[i, 2] <- 100/length(cap$group) * length(which(cap$group == cap$CV))
}
par(mfrow = c(1,1))
plot(success$m, success$class.success, xlab = "Number of PCoA axes included", ylab = "Reclassification success rate (%)")
text(success$m, success$class.success, labels = success$m, pos = 1, cex = 0.6)
# run the final CAP by including PCoA axes showing the highest reclassification rate
set.seed(13)
aoa.cap.bulk <- CAPdiscrim(aoa.bulk_dist_bc ~ x, data = aoa.meta.bulk.ed, m = 44, permutations = 9999, add = TRUE) # 94.16667%
## Betadisper
groups.trt <- aob.meta.bulk$Treatment
# calculate the beta diversity
aob.bulk_dist_bc.sub <- vegdist(t(aob.asv.bulk1.sub), method = "bray")
aob.asv
data <- data.frame(
Distance = rnorm(20),
Group = rep(c("A", "B"), each = 10),
Stratum = rep(c("X", "Y"), each = 5, times = 2)
)
data
aoa.cap.bulk
set.seed(133)
aoa.bulk_dist_bc
aoa.meta.bulk.ed
str(aoa.meta.bulk.ed)
set.seed(133)
aoa.adonis.bulk.x <- adonis2(aoa.bulk_dist_bc ~ Irrigation, strata=aoa.meta.bulk.ed$x, data=aoa.meta.bulk.ed,
permutations = 999) # not significant
aoa.adonis.bulk.x
set.seed(133)
aoa.adonis.bulk.x <- adonis2(aoa.bulk_dist_bc ~ Irrigation*Treatment, strata=aoa.meta.bulk.ed$x, data=aoa.meta.bulk.ed,
permutations = 999) # not significant
aoa.adonis.bulk.x
str(aoa.meta.bulk.ed)
# 1. Using adonis2 package with defined perm to restrict the permutation
block=as.factor(aoa.meta.bulk.ed$Block)
plot=as.factor(aoa.meta.bulk.ed$PlotID)
set.seed(133)
aoa.adonis.bulk.x <- adonis2(aoa.bulk_dist_bc ~ Irrigation*Treatment, strata=plot, data=aoa.meta.bulk.ed,
permutations = 999) # not significant
aoa.adonis.bulk.x
set.seed(133)
aoa.adonis.bulk.x <- adonis2(aoa.bulk_dist_bc ~ Irrigation*Treatment, strata=block, data=aoa.meta.bulk.ed,
permutations = 999) # not significant
aoa.adonis.bulk.x
aoa.cap.bulk
aoa.meta.bulk.ed$x

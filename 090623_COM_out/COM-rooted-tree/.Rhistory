permutations = perm1)
aoa.adonis.bulk.wUF.perm1
set.seed(133)
aoa.adonis.bulk.wUF.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = perm1)
aoa.adonis.bulk.wUF.perm1
set.seed(133)
aoa.adonis.bulk.wUF <- adonis2(aoa.bulk_dist_bc ~ Irrigation, strata=block, data=aoa.meta.bulk.ed,
permutations = 999) # significant
aoa.adonis.bulk.wUF
set.seed(133)
aob.adonis.bulk.wUF <- adonis2(aob.bulk_dist_bc ~ Irrigation, strata=block.aob, data=aob.meta.bulk,
permutations = 999) # significant
aob.adonis.bulk.wUF
set.seed(133)
aob.adonis.bulk.wUF <- adonis2(aob.bulk_dist_wUF ~ Irrigation, strata=block.aob, data=aob.meta.bulk,
permutations = 999) # significant
aob.adonis.bulk.wUF
set.seed(133)
aob.adonis.bulk.wUF <- adonis2(aob.bulk_dist_uwUF ~ Irrigation, strata=block.aob, data=aob.meta.bulk,
permutations = 999) # significant
aob.adonis.bulk.wUF
set.seed(133)
aob.adonis.bulk.wUF <- adonis2(aob.bulk_dist_jac ~ Irrigation, strata=block.aob, data=aob.meta.bulk,
permutations = 999) # significant
aob.adonis.bulk.wUF
set.seed(133)
aob.adonis.bulk.wUF <- adonis2(aob.bulk_dist_bc ~ Irrigation, strata=block.aob, data=aob.meta.bulk,
permutations = 999) # significant
aob.adonis.bulk.wUF
# set up the strata using how()
set.seed(13)
# similar with below:
set.seed(133)
perm1.aob = how(nperm = 999,
within = Within(type="free"),
plots = Plots(type = "none"),
blocks = block.aob,
observed = TRUE)
set.seed(133)
aob.adonis.bulk.bc.perm <- adonis2(aob.bulk_dist_bc ~ Irrigation, data=aob.meta.bulk,
permutations = perm1.aob) # significant
aob.adonis.bulk.bc.perm
adonis2(aob.bulk_dist_bc ~ Treatment, data=aob.meta.bulk,
permutations = 999)
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/COM.ASV-analysis')
wd <- print(getwd())
# load the asv table
com.asv <- read.table('annotated.COM.ASVs.counts.tsv', sep='\t', header=T, row.names = 1, check.names = FALSE)
dim(com.asv) # 686 192
# remove the bad sample (sample # 26) from the OTU table
com.asv.sub <- com.asv[, -which(names(com.asv) == "26" )]
sort(rowSums(com.asv.sub, na.rm = FALSE, dims = 1), decreasing = FALSE)
dim(com.asv.sub)
# load the taxonomy table
#setwd('/Users/arifinabintarti/Documents/France/microservices/090623_COM_out/')
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/')
com.tax <- read.table("besthit.diamond.output.curateddb.COM.ASVs.edited.csv", sep = ';', header=T)
dim(com.tax) # 680
# load the metadata
#setwd('/Users/arifinabintarti/Documents/France/microservices/')
setwd('D:/Fina/INRAE_Project/microservices/')
meta_micro <- read.csv("meta_microservices.csv")
# remove the bad sample (sample # 26) from the metadata
meta_micro_sub <- meta_micro[-26,]
# load phylogenetic tree (nwk file)
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/COM-rooted-tree/')
COM_rooted_tree <- ape::read.tree("tree.nwk")
re_order <- match(rownames(meta_micro_sub), colnames(com.asv.sub))
com.asv.ord  <- com.asv.sub[ ,re_order]
com.asv.physeq = otu_table(com.asv.ord, taxa_are_rows = TRUE) # asv table
sample_names(com.asv.physeq)
# adding "S" for sample names to avoid possible problem later on
sample_names(com.asv.physeq) <- paste0("S", sample_names(com.asv.physeq))
# phyloseq object of the taxonomy table
com.tax <- column_to_rownames(com.tax, var = "ASVid")
#row.names(com.tax) <- com.tax$ASVid
com.tax.physeq = tax_table(as.matrix(com.tax)) # taxonomy table
# phyloseq object of the metadata
meta_micro_sub$Date <- factor(meta_micro_sub$Date, levels = c("4/28/22", "06/01/2022", "07/05/2022", "7/20/22", "9/13/22"),
labels = c("04-28-22", "06-01-22", "07-05-22", "07-20-22", "09-13-22"))
rownames(meta_micro_sub) <- sample_names(com.asv.physeq)
com.meta.physeq <- sample_data(meta_micro_sub)# meta data
sample_names(com.meta.physeq)
setwd('D:/Fina/INRAE_Project/microservices/090623_COM_out/COM-rooted-tree/')
COM_rooted_tree <- ape::read.tree("tree.nwk")
# make phyloseq object
com.physeq <- merge_phyloseq(com.asv.physeq,com.tax.physeq,com.meta.physeq,COM_rooted_tree)
com.physeq # 653 taxa
sample_data(com.physeq)$SampleID <- paste0("S", sample_data(com.physeq)$SampleID)
sample_data(com.physeq)
# rarefy to minimum sequencing depth (minimum reads =  reads)
set.seed(333)
com.rare.min.physeq <- rarefy_even_depth(com.physeq, sample.size = 5242,
rngseed = 333, replace = FALSE, trimOTUs = TRUE, verbose = TRUE)
com.rare.min.physeq #632 taxa
sort(sample_sums(com.rare.min.physeq), decreasing = F) # 21 OTUs were removed because they are no longer present in any sample after random subsampling
# 1 sample removed (S52)
sort(rowSums(otu_table(com.rare.min.physeq), na.rm = FALSE, dims = 1), decreasing = F)
colSums(otu_table(com.rare.min.physeq))
com.rare.asv.df <- as.data.frame(otu_table(com.rare.min.physeq))
dim(com.rare.asv.df) # 632 ASVs, 190 samples
com.rare.asv.df_pa <- 1*(com.rare.asv.df>0)
com.s <- specnumber(com.rare.asv.df, MARGIN = 2) # richness
com.richness <- as.data.frame(com.s)
com.h <- diversity(t(com.rare.asv.df), index = 'shannon') # Shannon index
com.shannon <- as.data.frame(com.h)
com.d <- diversity(t(com.rare.asv.df), index = 'simpson') # Simpson index
com.simpson <- as.data.frame(com.d)
com.inv.d <- diversity(t(com.rare.asv.df), index = 'invsimpson')
# 1. Richness
# Line plot of COM richness
meta_micro_sub2 <- meta_micro_sub %>% filter(SampleID != "52")
com.meta.df <- data.frame(meta_micro_sub2)
com.meta.df$Richness <- com.s
com.meta.df$Shannon <- com.h
com.meta.df$Simpson <- com.d
com.meta.df$InvSimpson <- com.inv.d
#com.min.meta.df$Date  <- as.Date(com.meta.df$Date , "%m/%d/%Y")
str(com.meta.df)
com.meta.df$Type <- factor(com.meta.df$Type, levels = c("BS", "RS"),
labels = c("Bulk Soil", "Rhizosphere"))
com.meta.df$Treatment <- factor(com.meta.df$Treatment, levels = c("D", "K", "M"),
labels = c("Biodynamic", "Conventional", "Mineral fertilized"))
com.meta.df$SampleID<-as.factor(com.meta.df$SampleID)
com.meta.df$PlotID<-as.factor(com.meta.df$PlotID)
com.meta.df$Irrigation<-as.factor(com.meta.df$Irrigation)
# tidy up the data frame
com.meta.df.tidy <- com.meta.df %>%
group_by(Irrigation, Treatment, Date, Type, var2,var3) %>%
summarize(Mean.Rich=mean(Richness),
Mean.Sha=mean(Shannon),
Mean.Simp=mean(Simpson),
Mean.invsimp=mean(InvSimpson))
str(com.meta.df.tidy)
com.rare.asv.df
com.asv.bulk <- com.rare.asv.df[,1:118]
com.asv.bulk1 <- com.asv.bulk[rowSums(com.asv.bulk)>0,]
sort(rowSums(com.asv.bulk1, na.rm = FALSE, dims = 1), decreasing = FALSE)
com.bulk_dist_bc <- vegdist(t(com.asv.bulk1), method = "bray")
# jaccard - Bulk Soil :
com.bulk_dist_jac <- vegdist(t(com.asv.bulk1), binary = TRUE, method = "jaccard")
# Weighted UniFrac (rarefied) - Bulk Soil:
com.physeq_bulk <- subset_samples(com.rare.min.physeq, Type=="BS")
com.physeq_bulk1 <- prune_taxa(taxa_sums(com.physeq_bulk)>0, com.physeq_bulk)
com.physeq_bulk1
sort(taxa_sums(com.physeq_bulk1), decreasing =F) #checking
com.bulk_dist_wUF <- UniFrac(com.physeq_bulk1, weighted=TRUE, normalized = TRUE)
com.bulk_dist_wUF
# Unweighted UniFrac (rarefied) -  Bulk Soil:
com.bulk_dist_uwUF <- UniFrac(com.physeq_bulk1, weighted=FALSE, normalized = TRUE)
com.bulk_dist_uwUF
# 2. CMD/classical multidimensional scaling (MDS) of a data matrix. Also known as principal coordinates analysis
# Bray-Curtis - Bulk Soil:
com.bulk_pcoa_bc <- cmdscale(com.bulk_dist_bc, eig=T)
# Jaccard - Bulk Soil:
com.bulk_pcoa_jac <- cmdscale(com.bulk_dist_jac, eig=T)
# Weighted UniFrac - Bulk Soil:
com.bulk_pcoa_wUF <- cmdscale(com.bulk_dist_wUF, eig=T)
# Unweighted UniFrac - Bulk Soil:
com.bulk_pcoa.uwUF <- cmdscale(com.bulk_dist_uwUF, eig=T)
# 3. scores of PC1 and PC2
# Bray-Curtis - Bulk Soil:
ax1.scores.bulk <- com.bulk_pcoa_bc$points[,1]
ax2.scores.bulk <- com.bulk_pcoa_bc$points[,2]
# Jaccard - Bulk Soil:
ax1.scores.j.bulk <- com.bulk_pcoa_jac$points[,1]
ax2.scores.j.bulk <- com.bulk_pcoa_jac$points[,2]
# Weighted UniFrac - Bulk Soil:
ax1.scores.wUF.bulk <- com.bulk_pcoa_wUF$points[,1]
ax2.scores.wUF.bulk <- com.bulk_pcoa_wUF$points[,2]
# Unweighted UniFrac - Bulk Soil:
ax1.scores.uwUF.bulk <- com.bulk_pcoa.uwUF$points[,1]
ax2.scores.uwUF.bulk <- com.bulk_pcoa.uwUF$points[,2]
# 4. Envfit
env.com.bulk <- com.meta.df[1:118,c(13:19, 22,26:28)]
str(env.com.bulk)
env.com.bulk <- env.com.bulk %>% mutate_at(colnames(env.com.bulk), as.numeric)
# bray-curtis
set.seed(13)
env_fit.com.bc.bulk <- envfit(com.bulk_pcoa_bc, env.com.bulk, na.rm=TRUE)
env_fit.com.bc.bulk
# Jaccard
set.seed(13)
env_fit.com.jac <- envfit(com.bulk_pcoa_jac, env.com.bulk, na.rm=TRUE)
# Weighted UniFrac
set.seed(13)
env_fit.com.wuF <- envfit(com.bulk_pcoa_wUF, env.com.bulk, na.rm=TRUE)
# UnWeighted UniFrac
set.seed(13)
env_fit.com.uwuF <- envfit(com.bulk_pcoa.uwUF, env.com.bulk, na.rm=TRUE)
# 5. calculate percent variance explained, then add to plot
com.meta.bulk <- com.meta.df[1:118,]
# Bray-curtis - Bulk Soil:
ax1.bulk <- com.bulk_pcoa_bc$eig[1]/sum(com.bulk_pcoa_bc$eig)
ax2.bulk <- com.bulk_pcoa_bc$eig[2]/sum(com.bulk_pcoa_bc$eig)
com.map.pcoa.bulk <- cbind(com.meta.bulk,ax1.scores.bulk,ax2.scores.bulk)
# Jaccard - Bulk Soil:
ax1.j.bulk <- com.bulk_pcoa_jac$eig[1]/sum(com.bulk_pcoa_jac$eig)
ax2.j.bulk <- com.bulk_pcoa_jac$eig[2]/sum(com.bulk_pcoa_jac$eig)
com.map.pcoa.j.bulk <- cbind(com.meta.bulk,ax1.scores.j.bulk,ax2.scores.j.bulk)
# Weighted UniFrac - Bulk Soil:
ax1.wUF.bulk <- com.bulk_pcoa_wUF$eig[1]/sum(com.bulk_pcoa_wUF$eig)
ax2.wUF.bulk <- com.bulk_pcoa_wUF$eig[2]/sum(com.bulk_pcoa_wUF$eig)
com.map.pcoa.wUF.bulk <- cbind(com.meta.bulk,ax1.scores.wUF.bulk,ax2.scores.wUF.bulk)
# Unweighted UniFrac - Bulk Soil:
ax1.uwUF.bulk <- com.bulk_pcoa.uwUF$eig[1]/sum(com.bulk_pcoa.uwUF$eig)
ax2.uwUF.bulk <- com.bulk_pcoa.uwUF$eig[2]/sum(com.bulk_pcoa.uwUF$eig)
com.map.pcoa.uwUF.bulk <- cbind(com.meta.bulk,ax1.scores.uwUF.bulk,ax2.scores.uwUF.bulk)
#################################################################################################
# RHIZOSPHERE
# Bray-Curtis - Rhizosphere :
com.asv.rh <- com.rare.asv.df[,119:190]
com.asv.rh1 <- com.asv.rh[rowSums(com.asv.rh)>0,]
sort(rowSums(com.asv.rh1, na.rm = FALSE, dims = 1), decreasing = FALSE)
dim(com.asv.rh1)
com.rh_dist_bc <- vegdist(t(com.asv.rh1), method = "bray")
# jaccard - Rhizosphere :
com.rh_dist_jac <- vegdist(t(com.asv.rh1), binary = TRUE, method = "jaccard")
# Weighted UniFrac (rarefied) - Rhizosphere :
com.physeq_rh <- subset_samples(com.rare.min.physeq, Type=="RS")
com.physeq_rh1 <- prune_taxa(taxa_sums(com.physeq_rh)>0, com.physeq_rh)
com.physeq_rh1
sort(taxa_sums(com.physeq_rh1), decreasing =F) #checking
com.rh_dist_wUF <- UniFrac(com.physeq_rh1, weighted=TRUE, normalized = TRUE)
com.rh_dist_wUF
# Unweighted UniFrac (rarefied) -  Rhizosphere :
com.rh_dist_uwUF <- UniFrac(com.physeq_rh1, weighted=FALSE, normalized = TRUE)
com.rh_dist_uwUF
com.rh_pcoa_bc <- cmdscale(com.rh_dist_bc, eig=T)
# Jaccard - Rhizosphere :
com.rh_pcoa_jac <- cmdscale(com.rh_dist_jac, eig=T)
# Weighted UniFrac - Rhizosphere :
com.rh_pcoa_wUF <- cmdscale(com.rh_dist_wUF, eig=T)
# Unweighted UniFrac - Rhizosphere :
com.rh_pcoa.uwUF <- cmdscale(com.rh_dist_uwUF, eig=T)
# 3. scores of PC1 and PC2
# Bray-Curtis - Rhizosphere :
ax1.scores.rh <- com.rh_pcoa_bc$points[,1]
ax2.scores.rh <- com.rh_pcoa_bc$points[,2]
# Jaccard - Rhizosphere :
ax1.scores.j.rh <- com.rh_pcoa_jac$points[,1]
ax2.scores.j.rh <- com.rh_pcoa_jac$points[,2]
# Weighted UniFrac - Rhizosphere :
ax1.scores.wUF.rh <- com.rh_pcoa_wUF$points[,1]
ax2.scores.wUF.rh <- com.rh_pcoa_wUF$points[,2]
# Unweighted UniFrac - Rhizosphere :
ax1.scores.uwUF.rh <- com.rh_pcoa.uwUF$points[,1]
ax2.scores.uwUF.rh <- com.rh_pcoa.uwUF$points[,2]
#env_fit <- envfit(otu_pcoa, env, na.rm=TRUE)
# 4. calculate percent variance explained, then add to plot
com.meta.rh <- com.meta.df[119:190,]
# Bray-curtis - Rhizosphere :
ax1.rh <- com.rh_pcoa_bc$eig[1]/sum(com.rh_pcoa_bc$eig)
ax2.rh <- com.rh_pcoa_bc$eig[2]/sum(com.rh_pcoa_bc$eig)
com.map.pcoa.rh <- cbind(com.meta.rh,ax1.scores.rh,ax2.scores.rh)
# Jaccard - Rhizosphere :
ax1.j.rh <- com.rh_pcoa_jac$eig[1]/sum(com.rh_pcoa_jac$eig)
ax2.j.rh <- com.rh_pcoa_jac$eig[2]/sum(com.rh_pcoa_jac$eig)
com.map.pcoa.j.rh <- cbind(com.meta.rh,ax1.scores.j.rh,ax2.scores.j.rh)
# Weighted UniFrac - Rhizosphere :
ax1.wUF.rh <- com.rh_pcoa_wUF$eig[1]/sum(com.rh_pcoa_wUF$eig)
ax2.wUF.rh <- com.rh_pcoa_wUF$eig[2]/sum(com.rh_pcoa_wUF$eig)
com.map.pcoa.wUF.rh <- cbind(com.meta.rh,ax1.scores.wUF.rh,ax2.scores.wUF.rh)
# Unweighted UniFrac - Rhizosphere :
ax1.uwUF.rh <- com.rh_pcoa.uwUF$eig[1]/sum(com.rh_pcoa.uwUF$eig)
ax2.uwUF.rh <- com.rh_pcoa.uwUF$eig[2]/sum(com.rh_pcoa.uwUF$eig)
com.map.pcoa.uwUF.rh <- cbind(com.meta.rh,ax1.scores.uwUF.rh,ax2.scores.uwUF.rh)
block.com=as.factor(com.meta.bulk$Block)
plot.com=as.factor(com.meta.bulk$PlotID)
TxI.com=as.factor(com.meta.bulk$x)
trt.com=as.factor(com.meta.bulk$Treatment)
irri.com=as.factor(com.meta.bulk$Irrigation)
set.seed(133)
com.adonis.bulk.bc <- adonis2(com.bulk_dist_bc ~ Irrigation, strata=block.com, data=com.meta.bulk,
permutations = 999) # significant
com.adonis.bulk.bc
set.seed(13)
com.adonis.bulk.bc <- adonis2(com.bulk_dist_bc ~ Irrigation, strata=block.com, data=com.meta.bulk,
permutations = 999) # significant
com.adonis.bulk.bc
set.seed(13333)
com.adonis.bulk.bc <- adonis2(com.bulk_dist_bc ~ Irrigation, strata=block.com, data=com.meta.bulk,
permutations = 999) # significant
com.adonis.bulk.bc
set.seed(333)
com.adonis.bulk.bc <- adonis2(com.bulk_dist_bc ~ Irrigation, strata=block.com, data=com.meta.bulk,
permutations = 999) # significant
com.adonis.bulk.bc
set.seed(3333)
com.adonis.bulk.bc <- adonis2(com.bulk_dist_bc ~ Irrigation, strata=block.com, data=com.meta.bulk,
permutations = 999) # significant
com.adonis.bulk.bc
set.seed(33333)
com.adonis.bulk.bc <- adonis2(com.bulk_dist_bc ~ Irrigation, strata=block.com, data=com.meta.bulk,
permutations = 999) # significant
com.adonis.bulk.bc
set.seed(13333)
com.adonis.bulk.bc <- adonis2(com.bulk_dist_bc ~ Irrigation, strata=block.com, data=com.meta.bulk,
permutations = 999) # significant
com.adonis.bulk.bc
set.seed(13333)
com.adonis.bulk.bc <- adonis2(com.bulk_dist_jac ~ Irrigation, strata=block.com, data=com.meta.bulk,
permutations = 999) # significant
com.adonis.bulk.bc
set.seed(13333)
com.adonis.bulk.bc <- adonis2(com.bulk_dist_wUF ~ Irrigation, strata=block.com, data=com.meta.bulk,
permutations = 999) # significant
com.adonis.bulk.bc
set.seed(13333)
com.adonis.bulk.bc <- adonis2(com.bulk_dist_uwUF ~ Irrigation, strata=block.com, data=com.meta.bulk,
permutations = 999) # significant
com.adonis.bulk.bc
set.seed(13333)
com.adonis.bulk.bc <- adonis2(com.bulk_dist_bc ~ Irrigation, strata=block.com, data=com.meta.bulk,
permutations = 999) # significant
com.adonis.bulk.bc
# similar with below:
set.seed(133)
# similar with below:
set.seed(133)
perm1.com = how(nperm = 999,
within = Within(type="free"),
plots = Plots(type = "none"),
blocks = block.com,
observed = TRUE)
set.seed(133)
com.adonis.bulk.bc.perm <- adonis2(com.bulk_dist_bc ~ Irrigation, data=com.meta.bulk,
permutations = perm1.com) # significant
com.adonis.bulk.bc.perm
set.seed(13333)
com.adonis.bulk.bc.perm <- adonis2(com.bulk_dist_bc ~ Irrigation, data=com.meta.bulk,
permutations = perm1.com) # significant
com.adonis.bulk.bc.perm
set.seed(13333)
com.adonis.bulk.bc.perm <- adonis2(com.bulk_dist_wUF ~ Irrigation, data=com.meta.bulk,
permutations = perm1.com) # significant
com.adonis.bulk.bc.perm
set.seed(13333)
com.adonis.bulk.bc.perm <- adonis2(com.bulk_dist_bc ~ Irrigation, data=com.meta.bulk,
permutations = perm1.com) # significant
com.adonis.bulk.bc.perm
set.seed(133)
aoa.adonis.bulk.bc <- adonis2(aoa.bulk_dist_bc ~ Irrigation, strata=block, data=aoa.meta.bulk.ed,
permutations = 999) # significant
aoa.adonis.bulk.bc
set.seed(13333)
aoa.adonis.bulk.bc <- adonis2(aoa.bulk_dist_bc ~ Irrigation, strata=block, data=aoa.meta.bulk.ed,
permutations = 999) # significant
aoa.adonis.bulk.bc
# 2. Using ANOSIM package and define the strata
set.seed(13333)
aoa.bc.anosim <- anosim(aoa.bulk_dist_bc,
grouping = irri, permutations = 999, strata = block)
summary(aoa.bc.anosim) # SIGNIFICANT
# 2. Using ANOSIM package and define the strata
set.seed(13)
aoa.bc.anosim <- anosim(aoa.bulk_dist_bc,
grouping = irri, permutations = 999, strata = block)
summary(aoa.bc.anosim) # SIGNIFICANT
# similar with below:
set.seed(133)
perm1 = how(nperm = 999,
within = Within(type="free"),
plots = Plots(type = "none"),
blocks = trt,
observed = TRUE)
set.seed(133)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = perm1)
aoa.adonis.bulk.bc.perm1
trt
str(trt)
set.seed(133)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_wUF ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = perm1)
aoa.adonis.bulk.bc.perm1
set.seed(133)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_jac ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = perm1)
aoa.adonis.bulk.bc.perm1
test <- how(within = Within(type = "none"),
plots = Plots(strata = block, type = "free"),
nperm = 999,
observed = TRUE)
# similar with below:
set.seed(133)
test <- how(within = Within(type = "none"),
plots = Plots(strata = block, type = "free"),
nperm = 999,
observed = TRUE)
set.seed(133)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = test)
aoa.adonis.bulk.bc.perm1
test <- how(within = Within(type = "free"),
plots = Plots(strata = block, type = "free"),
nperm = 999,
observed = TRUE)
set.seed(133)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = test)
aoa.adonis.bulk.bc.perm1
test <- how(within = Within(type = "free"),
plots = Plots(strata = block, type = "free"),
nperm = 999)
set.seed(133)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = test)
aoa.adonis.bulk.bc.perm1
# similar with below:
set.seed(133)
perm1 = how(within = Within(type="free"),
plots = Plots(type = "none"),
blocks = block,
nperm = 999,
observed = TRUE)
set.seed(133)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = perm1)
aoa.adonis.bulk.bc.perm1
# and
CTRL.t <- how(within = Within(type = "free"),
plots = Plots(strata = block, type = "none"),
nperm = 999,
observed = TRUE)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
set.seed(1333333)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
set.seed(13333333)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
set.seed(1333333)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
set.seed(1333333)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_wUF ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_jac ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
aoa.bulk_dist_bc
set.seed(1333333)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
set.seed(99999999999)
set.seed(999999)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
set.seed(99999999999)
set.seed(9999)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
set.seed(9999999)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
set.seed(99999999)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
set.seed(999999999)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
set.seed(999999)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
#they specify that plots are to be freely permuted within blocks but that blocks are not allowed to permute
set.seed(999999)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ block+Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
# and
CTRL.t <- how(within = Within(type = "free"),
plots = Plots(strata = block, type = "none"),
nperm = 99999,
observed = TRUE)
#they specify that plots are to be freely permuted within blocks but that blocks are not allowed to permute
set.seed(999999)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ block+Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
#they specify that plots are to be freely permuted within blocks but that blocks are not allowed to permute
set.seed(133)
aoa.adonis.bulk.bc.perm1 <- adonis2(aoa.bulk_dist_bc ~ block+Irrigation, data=aoa.meta.bulk.ed,
permutations = CTRL.t)
aoa.adonis.bulk.bc.perm1
summary(aov(aoa.bulk_dist_bc ~ Error(block) + Irrigation,
data = aoa.meta.bulk.ed))
block
summary(aov(aoa.bulk_dist_bc ~ Error(aoa.meta.bulk.ed$block) + Irrigation,
data = aoa.meta.bulk.ed))
CTRL.t.aob <- how(within = Within(type = "free"),
plots = Plots(strata = block.aob, type = "none"),
nperm = 99999,
observed = TRUE)
set.seed(133)
aob.adonis.bulk.bc.perm <- adonis2(aob.bulk_dist_bc ~ Irrigation, data=aob.meta.bulk,
permutations = CTRL.t.aob) # significant
aob.adonis.bulk.bc.perm

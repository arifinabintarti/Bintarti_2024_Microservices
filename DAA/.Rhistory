physeq.subset <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
physeq.subset# 63 taxa, 23 samples
tmp_T3s <- physeq.subset
str(tmp_T3s)
#  treatment
a = tibble("sample"= as.factor(tmp_T3s@sam_data$SampleID),
"treatment"= as.character(tmp_T3s@sam_data$x))
# force control as intercept
#a[a == "Control"] <- "1a"
a = as.matrix(a$treatment)
# offset
o = log(sample_sums(tmp_T3s))
# random effect
z <- as.matrix(tmp_T3s@sam_data$SampleID)
# model with pairwise comparison ---------------------------------------------------------------------------------
glmT3s.sum.global = data.frame()
glmT3s.pairwise.global = data.frame()
for (i in 1:length(taxa_names(tmp_T3s))) {
OTU = taxa_names(tmp_T3s)[i]
# response variable
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
tryCatch({
### model
glmT3s <- glmer(y ~ a + (1 | z), family='poisson',offset = o)
glmT3s.sum = summary(glmT3s)$coefficients
glmT3s.sum = tibble("OTU"= OTU,
"treatment"=rownames(glmT3s.sum),
as_tibble(glmT3s.sum))
glmT3s.sum
glmT3s.sum.global = rbind(glmT3s.sum.global,glmT3s.sum)
### multiple comparison
glmT3s.pairwise = emmeans(glmT3s,pairwise~a)
# select p value
glmT3s.pairwise.sum = summary(glmT3s.pairwise)
glmT3s.pairwise.sum = glmT3s.pairwise.sum[["contrasts"]]
# extract summary
tmp_df = glmT3s.pairwise.sum
# keep only comparisons of interest
tmp = unlist(strsplit(as.character(tmp_df$contrast)," - "))
tmp_df[,"a"] <- tmp[seq(1,length(tmp),by=2)]
tmp_df[,"b"] <- tmp[seq(2,length(tmp),by=2)]
#tmp_df = tmp_df[grep("Ni",tmp_df$b), ]
tmp_df = cbind("OTU"=OTU,tmp_df)
# extract results in data frame
glmT3s.pairwise.global = rbind(glmT3s.pairwise.global,tmp_df)
},
error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
rm(OTU,y,glmT3s,glmT3s.sum)
}
library(glmmTMB)
library(emmeans)
#  treatment
a = tibble("sample"= as.factor(tmp_T3s@sam_data$SampleID),
"treatment"= as.character(tmp_T3s@sam_data$x))
# force control as intercept
#a[a == "Control"] <- "1a"
a = as.matrix(a$treatment)
# offset
o = log(sample_sums(tmp_T3s))
# random effect
z <- as.matrix(tmp_T3s@sam_data$SampleID)
# model with pairwise comparison ---------------------------------------------------------------------------------
glmT3s.sum.global = data.frame()
glmT3s.pairwise.global = data.frame()
for (i in 1:length(taxa_names(tmp_T3s))) {
OTU = taxa_names(tmp_T3s)[i]
# response variable
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
tryCatch({
### model
glmT3s <- glmer(y ~ a + (1 | z), family='poisson',offset = o)
glmT3s.sum = summary(glmT3s)$coefficients
glmT3s.sum = tibble("OTU"= OTU,
"treatment"=rownames(glmT3s.sum),
as_tibble(glmT3s.sum))
glmT3s.sum
glmT3s.sum.global = rbind(glmT3s.sum.global,glmT3s.sum)
### multiple comparison
glmT3s.pairwise = emmeans(glmT3s,pairwise~a)
# select p value
glmT3s.pairwise.sum = summary(glmT3s.pairwise)
glmT3s.pairwise.sum = glmT3s.pairwise.sum[["contrasts"]]
# extract summary
tmp_df = glmT3s.pairwise.sum
# keep only comparisons of interest
tmp = unlist(strsplit(as.character(tmp_df$contrast)," - "))
tmp_df[,"a"] <- tmp[seq(1,length(tmp),by=2)]
tmp_df[,"b"] <- tmp[seq(2,length(tmp),by=2)]
#tmp_df = tmp_df[grep("Ni",tmp_df$b), ]
tmp_df = cbind("OTU"=OTU,tmp_df)
# extract results in data frame
glmT3s.pairwise.global = rbind(glmT3s.pairwise.global,tmp_df)
},
error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
rm(OTU,y,glmT3s,glmT3s.sum)
}
glmT3s.model.global.rare = glmT3s.sum.global
glmT3s.pairwise.global.rare = glmT3s.pairwise.global
glmT3s.pairwise.global.rare$p.adjust <- p.adjust(glmT3s.pairwise.global.rare$p.value, method = "fdr")
glmT3s.pairwise.global.rare.ed <- subset(glmT3s.pairwise.global.rare,glmT3s.pairwise.global.rare$contrast=="cont.D - rain.D" | glmT3s.pairwise.global.rare$contrast=="cont.M - rain.M" | glmT3s.pairwise.global.rare$contrast=="cont.K - rain.K")
glmT3s.pairwise.global.rare.ed$p.adjust <- p.adjust(glmT3s.pairwise.global.rare.ed$p.value, method = "fdr")
cond.aldx
################################################################################
# Filter low-abundant taxa
# keeping OTUs with at least 0.02 % relative abundance across all samples
physeq.subset <- M04rawseq1
physeq.subset #424 Taxa, 24 Samples
data.obs <- as.data.frame(otu_table(physeq.subset))
keep.taxa.id=which((rowSums(data.obs)/sum(data.obs))>0.0002)
data.F=data.obs[keep.taxa.id,,drop=FALSE]
new.otu <- as.matrix(data.F) # convert it into a matrix.
new.otu <- otu_table(data.F, taxa_are_rows = TRUE) # convert into phyloseq compatible file.
otu_table(physeq.subset) <- new.otu # incorporate into phyloseq Object
physeq.subset # 264 taxa, 24 samples remain in the data set after filtering
################################################################################
#Lets generate a prevalence table (number of samples each taxa occurs in) for each taxa.
prevalencedf = apply(X = otu_table(physeq.subset),
MARGIN = 1,
FUN = function(x){sum(x > 0)})
# Add taxonomy and total read counts to this data.frame
prevalencedf = data.frame(Prevalence = prevalencedf,
TotalAbundance = taxa_sums(physeq.subset))
prevalencedf[1:10,]
dim(prevalencedf)
# calculate prevalence
ps = physeq.subset
df_tmp <- psmelt(ps)
df_tmp$sample <- 0
df_tmp$sample[df_tmp$Abundance > 0] <- 1 #E: DON'T UNDERSTAND WHY THIS IS DONE
df_otu_prev_ttt <- data.frame(matrix(ncol=nlevels(as.factor(df_tmp$x)),
nrow=nlevels(as.factor(df_tmp$OTU)),
dimnames=list(levels(as.factor(df_tmp$OTU)),
levels(as.factor(df_tmp$x)))))
#attention il ya Sample et sample
for (i in unique(df_tmp$OTU)) {
for (j in unique(df_tmp$x)) {
df_otu_prev_ttt[i,j] <- sum(df_tmp$sample[df_tmp$OTU == i & df_tmp$x == j],na.rm = T) / nrow(df_tmp[df_tmp$OTU == i & df_tmp$x == j,]) *100
print(paste(i,j,df_otu_prev_ttt[i,j]),sep="\t")
#print(df_otu_prev_ttt[i,j])
}
}
df_otu_prev_ttt$max_prev <- apply(df_otu_prev_ttt,MARGIN=1, FUN=max)
# filter otu par prevalence
physeq.subset
ps =  physeq.subset
df_prev = df_otu_prev_ttt
tmp_otu_F = rownames(df_prev[df_prev$max_prev >= 75,])
physeq.subset <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
physeq.subset# 69 taxa, 24 samples
################################################################################
M04_table <- as.data.frame(otu_table(physeq.subset))
M04_table
cond.aldx <- sample_data(M04rawseq1)$Irrigation
cond.aldx
aldM04raw <- aldex(M04_table, conditions = cond.aldx, mc.samples =1000,
verbose = T, denom="all", test="t", effect=TRUE, paired.test=T)
aldM04raw <- aldex(M04_table, conditions = cond.aldx, mc.samples =1000,
verbose = T, denom="all", test="t", effect=TRUE, paired.test=T)
aldM04raw
physeq.subset.m04 <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
physeq.subset.m04# 36 taxa, 8 samples
################################################################################
# Filter low-abundant taxa
# keeping OTUs with at least 0.02 % relative abundance across all samples
physeq.subset <- M04.rh.rawseq1
physeq.subset #245 Taxa, 8 Samples
################################################################################
# Filter low-abundant taxa
# keeping OTUs with at least 0.02 % relative abundance across all samples
physeq.subset <- M04.rh.rawseq1
physeq.subset #245 Taxa, 8 Samples
data.obs <- as.data.frame(otu_table(physeq.subset))
data.obs <- as.data.frame(otu_table(physeq.subset))
keep.taxa.id=which((rowSums(data.obs)/sum(data.obs))>0.0002)
data.F=data.obs[keep.taxa.id,,drop=FALSE]
new.otu <- as.matrix(data.F) # convert it into a matrix.
new.otu <- otu_table(data.F, taxa_are_rows = TRUE) # convert into phyloseq compatible file.
otu_table(physeq.subset) <- new.otu # incorporate into phyloseq Object
physeq.subset # 192 taxa, 8 samples remain in the data set after filtering
################################################################################
#Lets generate a prevalence table (number of samples each taxa occurs in) for each taxa.
prevalencedf = apply(X = otu_table(physeq.subset),
MARGIN = 1,
FUN = function(x){sum(x > 0)})
# Add taxonomy and total read counts to this data.frame
prevalencedf = data.frame(Prevalence = prevalencedf,
TotalAbundance = taxa_sums(physeq.subset))
prevalencedf[1:10,]
dim(prevalencedf)
# calculate prevalence
ps = physeq.subset
df_tmp <- psmelt(ps)
df_tmp$sample <- 0
df_tmp$sample[df_tmp$Abundance > 0] <- 1 #E: DON'T UNDERSTAND WHY THIS IS DONE
df_otu_prev_ttt <- data.frame(matrix(ncol=nlevels(as.factor(df_tmp$x)),
nrow=nlevels(as.factor(df_tmp$OTU)),
dimnames=list(levels(as.factor(df_tmp$OTU)),
levels(as.factor(df_tmp$x)))))
#attention il ya Sample et sample
for (i in unique(df_tmp$OTU)) {
for (j in unique(df_tmp$x)) {
df_otu_prev_ttt[i,j] <- sum(df_tmp$sample[df_tmp$OTU == i & df_tmp$x == j],na.rm = T) / nrow(df_tmp[df_tmp$OTU == i & df_tmp$x == j,]) *100
print(paste(i,j,df_otu_prev_ttt[i,j]),sep="\t")
#print(df_otu_prev_ttt[i,j])
}
}
df_otu_prev_ttt$max_prev <- apply(df_otu_prev_ttt,MARGIN=1, FUN=max)
# filter otu par prevalence
physeq.subset
ps =  physeq.subset
df_prev = df_otu_prev_ttt
tmp_otu_F = rownames(df_prev[df_prev$max_prev >= 75,])
physeq.subset.m04 <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
physeq.subset.m04.rh <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
physeq.subset.m04.rh# 36 taxa, 8 samples
################################################################################
M04_table <- as.data.frame(otu_table(physeq.subset.m04.rh))
M04_table
cond.aldx <- sample_data(M04.rh.rawseq1)$Irrigation
cond.aldx
aldM04raw <- aldex(M04_table, conditions = cond.aldx, mc.samples =1000,
verbose = T, denom="all", test="t", effect=TRUE, paired.test=T)
aldM04raw
aldM04raw <- aldex(M04_table, conditions = cond.aldx, mc.samples =1000,
verbose = T, denom="all", test="kw", effect=TRUE, paired.test=F)
aldM04raw
# ASV Table
sort(colSums(aob.asv, na.rm = FALSE, dims = 1), decreasing = F)
# Line plot of AOB richness
aob.meta.df <- data.frame(meta_micro)
aob.meta.df.sub <- aob.meta.df %>% filter(SampleID != 11)# filter out S11 from the metadata
aob.meta.df.sub$Richness <- aob.s
aob.meta.df.sub$Shannon <- aob.h
aob.meta.df.sub$Simpson <- aob.d
colSums(otu_table(aob.rare.1282.seq))
aob.asv.rare1k <- as.data.frame(otu_table(aob.rare.1282.seq))
dim(aob.asv.rare1k) # 1222 ASVs
aob.asv.rare1k_pa <- 1*(aob.asv.rare1k>0)
aob.s <- specnumber(aob.asv.rare1k, MARGIN = 2) # richness
aob.richness <- as.data.frame(aob.s)
aob.h <- diversity(t(aob.asv.rare1k), index = 'shannon') # Shannon index
aob.shannon <- as.data.frame(aob.h)
aob.d <- diversity(t(aob.asv.rare1k), index = 'simpson') # Simpson index
aob.simpson <- as.data.frame(aob.d)
aob.inv.d <- diversity(t(aob.asv.rare1k), index = 'invsimpson')
# 1. Richness
# Line plot of AOB richness
aob.meta.df <- data.frame(meta_micro)
aob.meta.df.sub <- aob.meta.df %>% filter(SampleID != 11)# filter out S11 from the metadata
aob.meta.df.sub$Richness <- aob.s
aob.meta.df.sub$Shannon <- aob.h
aob.meta.df.sub$Simpson <- aob.d
aob.meta.df.sub$InvSimpson <- aob.inv.d
#aob.min.meta.df$Date  <- as.Date(aob.min.meta.df$Date , "%m/%d/%Y")
str(aob.meta.df.sub)
aob.meta.df.sub$Type <- factor(aob.meta.df.sub$Type, levels = c("BS", "RS"),
labels = c("Bulk Soil", "Rhizosphere"))
aob.meta.df.sub$Treatment <- factor(aob.meta.df.sub$Treatment, levels = c("D", "K", "M"),
labels = c("Biodynamic", "Conventional", "Mineral fertilized"))
aob.meta.df.sub$SampleID<-as.factor(aob.meta.df.sub$SampleID)
aob.meta.df.sub$PlotID<-as.factor(aob.meta.df.sub$PlotID)
aob.meta.df.sub$Irrigation<-as.factor(aob.meta.df.sub$Irrigation)
# tidy up the data frame
aob.meta.df.tidy <- aob.meta.df.sub %>%
group_by(Irrigation, Treatment, Date,  Type, var2,var3) %>%
summarize(Mean.Rich=mean(Richness),
Mean.Sha=mean(Shannon),
Mean.Simp=mean(Simpson),
Mean.invsimp=mean(InvSimpson))
str(aob.meta.df.tidy)
# 4. calculate percent variance explained, then add to plot
aob.meta.bulk <- aob.meta.df.sub[1:119,]
View(aob.meta.bulk)
# ASV Table
sort(colSums(aob.asv, na.rm = FALSE, dims = 1), decreasing = F)
dat04seq <- subset_samples(aob.physeq_bulk1, Date=="04-28-22")
dat04seq <- subset_samples(aob.physeq_bulk1, Date=="04-28-22")
dat04seq1 <- prune_taxa(taxa_sums(dat04seq)>0, dat04seq)
sort(rowSums(otu_table(dat04seq1), na.rm = FALSE, dims = 1), decreasing = F)
dat04seq1 #393 taxa, 23 samples
################################################################################
# Filter low-abundant taxa
# keeping OTUs with at least 0.02 % relative abundance across all samples
physeq.subset <- dat04seq1
physeq.subset #393 Taxa, 23 Samples
data.obs <- as.data.frame(otu_table(physeq.subset))
keep.taxa.id=which((rowSums(data.obs)/sum(data.obs))>0.0002)
data.F=data.obs[keep.taxa.id,,drop=FALSE]
new.otu <- as.matrix(data.F) # convert it into a matrix.
new.otu <- otu_table(data.F, taxa_are_rows = TRUE) # convert into phyloseq compatible file.
otu_table(physeq.subset) <- new.otu # incorporate into phyloseq Object
physeq.subset # 254 taxa, 23 samples remain in the data set after filtering
################################################################################
#Lets generate a prevalence table (number of samples each taxa occurs in) for each taxa.
prevalencedf = apply(X = otu_table(physeq.subset),
MARGIN = 1,
FUN = function(x){sum(x > 0)})
# Add taxonomy and total read counts to this data.frame
prevalencedf = data.frame(Prevalence = prevalencedf,
TotalAbundance = taxa_sums(physeq.subset))
prevalencedf[1:10,]
dim(prevalencedf)
# calculate prevalence
ps = physeq.subset
df_tmp <- psmelt(ps)
df_tmp$sample <- 0
df_tmp$sample[df_tmp$Abundance > 0] <- 1 #E: DON'T UNDERSTAND WHY THIS IS DONE
df_otu_prev_ttt <- data.frame(matrix(ncol=nlevels(as.factor(df_tmp$x)),
nrow=nlevels(as.factor(df_tmp$OTU)),
dimnames=list(levels(as.factor(df_tmp$OTU)),
levels(as.factor(df_tmp$x)))))
#attention il ya Sample et sample
for (i in unique(df_tmp$OTU)) {
for (j in unique(df_tmp$x)) {
df_otu_prev_ttt[i,j] <- sum(df_tmp$sample[df_tmp$OTU == i & df_tmp$x == j],na.rm = T) / nrow(df_tmp[df_tmp$OTU == i & df_tmp$x == j,]) *100
print(paste(i,j,df_otu_prev_ttt[i,j]),sep="\t")
#print(df_otu_prev_ttt[i,j])
}
}
df_otu_prev_ttt$max_prev <- apply(df_otu_prev_ttt,MARGIN=1, FUN=max)
# filter otu par prevalence
physeq.subset
ps =  physeq.subset
df_prev = df_otu_prev_ttt
tmp_otu_F = rownames(df_prev[df_prev$max_prev >= 75,])
physeq.subset <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
physeq.subset# 63 taxa, 23 samples
tmp_T3s <- physeq.subset
str(tmp_T3s)
#  treatment
a = tibble("sample"= as.factor(tmp_T3s@sam_data$SampleID),
"treatment"= as.character(tmp_T3s@sam_data$x))
# force control as intercept
#a[a == "Control"] <- "1a"
a = as.matrix(a$treatment)
# offset
o = log(sample_sums(tmp_T3s))
# random effect
z <- as.matrix(tmp_T3s@sam_data$SampleID)
# model with pairwise comparison ---------------------------------------------------------------------------------
glmT3s.sum.global = data.frame()
glmT3s.pairwise.global = data.frame()
for (i in 1:length(taxa_names(tmp_T3s))) {
OTU = taxa_names(tmp_T3s)[i]
# response variable
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
tryCatch({
### model
glmT3s <- glmer(y ~ -1 + a + (1 | z), family='poisson',offset = o)
glmT3s.sum = summary(glmT3s)$coefficients
glmT3s.sum = tibble("OTU"= OTU,
"treatment"=rownames(glmT3s.sum),
as_tibble(glmT3s.sum))
glmT3s.sum
glmT3s.sum.global = rbind(glmT3s.sum.global,glmT3s.sum)
### multiple comparison
glmT3s.pairwise = emmeans(glmT3s,pairwise~a)
# select p value
glmT3s.pairwise.sum = summary(glmT3s.pairwise)
glmT3s.pairwise.sum = glmT3s.pairwise.sum[["contrasts"]]
# extract summary
tmp_df = glmT3s.pairwise.sum
# keep only comparisons of interest
tmp = unlist(strsplit(as.character(tmp_df$contrast)," - "))
tmp_df[,"a"] <- tmp[seq(1,length(tmp),by=2)]
tmp_df[,"b"] <- tmp[seq(2,length(tmp),by=2)]
#tmp_df = tmp_df[grep("Ni",tmp_df$b), ]
tmp_df = cbind("OTU"=OTU,tmp_df)
# extract results in data frame
glmT3s.pairwise.global = rbind(glmT3s.pairwise.global,tmp_df)
},
error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
rm(OTU,y,glmT3s,glmT3s.sum)
}
glmT3s.model.global.rare = glmT3s.sum.global
glmT3s.pairwise.global.rare = glmT3s.pairwise.global
View(glmT3s.model.global.rare)
View(glmT3s.pairwise.global)
View(glmT3s.pairwise.global.rare)
glmT3s.pairwise.global.rare$p.adjust <- p.adjust(glmT3s.pairwise.global.rare$p.value, method = "fdr")
setwd('D:/Fina/INRAE_Project/microservices/DAA/')
write.csv(glmT3s.pairwise.global.rare, file = "glmT3s.pairwise.global_dat04_rare_nointer_220823.csv")
glmT3s.model.global.rare = glmT3s.sum.global
glmT3s.pairwise.global.rare = glmT3s.pairwise.global
View(glmT3s.model.global.rare)
View(glmT3s.pairwise.global.rare)
glmT3s.pairwise.global.rare.ed <- subset(glmT3s.pairwise.global.rare,glmT3s.pairwise.global.rare$contrast=="cont.D - rain.D" | glmT3s.pairwise.global.rare$contrast=="cont.M - rain.M" | glmT3s.pairwise.global.rare$contrast=="cont.K - rain.K")
glmT3s.pairwise.global.rare.ed$p.adjust <- p.adjust(glmT3s.pairwise.global.rare.ed$p.value, method = "fdr")
#setwd('D:/Fina/INRAE_Project/microservices/DAA/')
write.csv(glmT3s.pairwise.global.rare.ed, file = "glmT3s.pairwise.global_dat04_rare_nointer_subset_220823.csv")
## nb of pval <= 0.05 before and after filter
table(glmT3s.pairwise.global.rare.ed$p.value <= 0.05)
table(glmT3s.pairwise.global.rare.ed$p.adjust <= 0.05)
## nb of OTU with a pval <= 0.05 before and after filter
tmp_otu3s.rare.ed = unique(glmT3s.pairwise.global.rare.ed$OTU[glmT3s.pairwise.global.rare.ed$p.adjust <= 0.05])
glmT3s.pairwise.global.signif.rare.ed = glmT3s.pairwise.global.rare.ed[glmT3s.pairwise.global.rare.ed$p.adjust <=0.05,]
length(tmp_otu3s)
glmT3s.model.global.rare = glmT3s.sum.global
glmT3s.pairwise.global.rare = glmT3s.pairwise.global
glmT3s.pairwise.global.rare$p.adjust <- p.adjust(glmT3s.pairwise.global.rare$p.value, method = "fdr")
## nb of pval <= 0.05 before and after filter
table(glmT3s.pairwise.global.rare$p.value <= 0.05)
table(glmT3s.pairwise.global.rare$p.adjust <= 0.05)
## nb of OTU with a pval <= 0.05 before and after filter
tmp_otu3s.rare = unique(glmT3s.pairwise.global.rare$OTU[glmT3s.pairwise.global.rare$p.adjust <= 0.05])
glmT3s.pairwise.global.signif.rare = glmT3s.pairwise.global.rare[glmT3s.pairwise.global.rare$p.adjust <=0.05,]
length(tmp_otu3s.rare)
View(glmT3s.pairwise.global.signif.rare)
write.csv(glmT3s.pairwise.global.signif.rare, file = "glmT3s.pairwise.global.signif.rare_dat04_nointer_220823.csv")
dat04rawseq <- subset_samples(aob.bulk.rawseq1, Date=="04-28-22")
dat04rawseq1 <- prune_taxa(taxa_sums(dat04rawseq)>0, dat04rawseq)
sort(rowSums(otu_table(dat04rawseq1), na.rm = FALSE, dims = 1), decreasing = F)
dat04rawseq1 #424 taxa, 24 samples
################################################################################
# Filter low-abundant taxa
# keeping OTUs with at least 0.02 % relative abundance across all samples
physeq.subset <- dat04rawseq1
physeq.subset #424 Taxa, 24 Samples
data.obs <- as.data.frame(otu_table(physeq.subset))
keep.taxa.id=which((rowSums(data.obs)/sum(data.obs))>0.0002)
data.F=data.obs[keep.taxa.id,,drop=FALSE]
new.otu <- as.matrix(data.F) # convert it into a matrix.
new.otu <- otu_table(data.F, taxa_are_rows = TRUE) # convert into phyloseq compatible file.
otu_table(physeq.subset) <- new.otu # incorporate into phyloseq Object
physeq.subset # 264 taxa, 24 samples remain in the data set after filtering
################################################################################
#Lets generate a prevalence table (number of samples each taxa occurs in) for each taxa.
prevalencedf = apply(X = otu_table(physeq.subset),
MARGIN = 1,
FUN = function(x){sum(x > 0)})
# Add taxonomy and total read counts to this data.frame
prevalencedf = data.frame(Prevalence = prevalencedf,
TotalAbundance = taxa_sums(physeq.subset))
prevalencedf[1:10,]
dim(prevalencedf)
# calculate prevalence
ps = physeq.subset
df_tmp <- psmelt(ps)
df_tmp$sample <- 0
df_tmp$sample[df_tmp$Abundance > 0] <- 1 #E: DON'T UNDERSTAND WHY THIS IS DONE
df_otu_prev_ttt <- data.frame(matrix(ncol=nlevels(as.factor(df_tmp$x)),
nrow=nlevels(as.factor(df_tmp$OTU)),
dimnames=list(levels(as.factor(df_tmp$OTU)),
levels(as.factor(df_tmp$x)))))
#attention il ya Sample et sample
for (i in unique(df_tmp$OTU)) {
for (j in unique(df_tmp$x)) {
df_otu_prev_ttt[i,j] <- sum(df_tmp$sample[df_tmp$OTU == i & df_tmp$x == j],na.rm = T) / nrow(df_tmp[df_tmp$OTU == i & df_tmp$x == j,]) *100
print(paste(i,j,df_otu_prev_ttt[i,j]),sep="\t")
#print(df_otu_prev_ttt[i,j])
}
}
df_otu_prev_ttt$max_prev <- apply(df_otu_prev_ttt,MARGIN=1, FUN=max)
# filter otu par prevalence
physeq.subset
ps =  physeq.subset
df_prev = df_otu_prev_ttt
tmp_otu_F = rownames(df_prev[df_prev$max_prev >= 75,])
physeq.subset <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
physeq.subset# 69 taxa, 24 samples
tmp_T3s <- physeq.subset
str(tmp_T3s)
#  treatment
a = tibble("sample"= as.factor(tmp_T3s@sam_data$SampleID),
"treatment"= as.character(tmp_T3s@sam_data$x))
# force control as intercept
#a[a == "Control"] <- "1a"
a = as.matrix(a$treatment)
# offset
o = log(sample_sums(tmp_T3s))
# random effect
z <- as.matrix(tmp_T3s@sam_data$SampleID)
# model with pairwise comparison ---------------------------------------------------------------------------------
glmT3s.sum.global = data.frame()
glmT3s.pairwise.global = data.frame()
for (i in 1:length(taxa_names(tmp_T3s))) {
OTU = taxa_names(tmp_T3s)[i]
# response variable
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
tryCatch({
### model
glmT3s <- glmer(y ~ -1 + a + (1 | z), family='poisson',offset = o)
glmT3s.sum = summary(glmT3s)$coefficients
glmT3s.sum = tibble("OTU"= OTU,
"treatment"=rownames(glmT3s.sum),
as_tibble(glmT3s.sum))
glmT3s.sum
glmT3s.sum.global = rbind(glmT3s.sum.global,glmT3s.sum)
### multiple comparison
glmT3s.pairwise = emmeans(glmT3s,pairwise~a)
# select p value
glmT3s.pairwise.sum = summary(glmT3s.pairwise)
glmT3s.pairwise.sum = glmT3s.pairwise.sum[["contrasts"]]
# extract summary
tmp_df = glmT3s.pairwise.sum
# keep only comparisons of interest
tmp = unlist(strsplit(as.character(tmp_df$contrast)," - "))
tmp_df[,"a"] <- tmp[seq(1,length(tmp),by=2)]
tmp_df[,"b"] <- tmp[seq(2,length(tmp),by=2)]
#tmp_df = tmp_df[grep("Ni",tmp_df$b), ]
tmp_df = cbind("OTU"=OTU,tmp_df)
# extract results in data frame
glmT3s.pairwise.global = rbind(glmT3s.pairwise.global,tmp_df)
},
error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
rm(OTU,y,glmT3s,glmT3s.sum)
}
glmT3s.model.global.raw = glmT3s.sum.global
glmT3s.pairwise.global.raw = glmT3s.pairwise.global
View(glmT3s.pairwise.global.raw)
glmT3s.pairwise.global.raw$p.adjust <- p.adjust(glmT3s.pairwise.global.raw$p.value, method = "fdr")
write.csv(glmT3s.pairwise.global.raw, file = "glmT3s.pairwise.global_dat04_raw_nointer_220823.csv")

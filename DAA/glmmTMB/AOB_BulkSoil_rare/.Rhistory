physeq.subset <- M04seq1
physeq.subset
data.obs <- as.data.frame(otu_table(physeq.subset))
keep.taxa.id=which((rowSums(data.obs)/sum(data.obs))>0.0001)
data.F=data.obs[keep.taxa.id,,drop=FALSE]
new.otu <- as.matrix(data.F) # convert it into a matrix.
new.otu <- otu_table(data.F, taxa_are_rows = TRUE) # convert into phyloseq compatible file.
otu_table(physeq.subset) <- new.otu # incorporate into phyloseq Object
physeq.subset #
################################################################################
#Lets generate a prevalence table (number of samples each taxa occurs in) for each taxa.
prevalencedf = apply(X = otu_table(physeq.subset),
MARGIN = 1,
FUN = function(x){sum(x > 0)})
# Add taxonomy and total read counts to this data.frame
prevalencedf = data.frame(Prevalence = prevalencedf,
TotalAbundance = taxa_sums(physeq.subset))
prevalencedf[1:10,]
dim(prevalencedf)
# calculate prevalence
ps = physeq.subset
df_tmp <- psmelt(ps)
df_tmp$sample <- 0
df_tmp$sample[df_tmp$Abundance > 0] <- 1 #E: DON'T UNDERSTAND WHY THIS IS DONE
df_otu_prev_ttt <- data.frame(matrix(ncol=nlevels(as.factor(df_tmp$Irrigation)),
nrow=nlevels(as.factor(df_tmp$OTU)),
dimnames=list(levels(as.factor(df_tmp$OTU)),
levels(as.factor(df_tmp$Irrigation)))))
#attention il ya Sample et sample
for (i in unique(df_tmp$OTU)) {
for (j in unique(df_tmp$Irrigation)) {
df_otu_prev_ttt[i,j] <- sum(df_tmp$sample[df_tmp$OTU == i & df_tmp$Irrigation == j],na.rm = T) / nrow(df_tmp[df_tmp$OTU == i & df_tmp$Irrigation == j,]) *100
print(paste(i,j,df_otu_prev_ttt[i,j]),sep="\t")
#print(df_otu_prev_ttt[i,j])
}
}
df_otu_prev_ttt$max_prev <- apply(df_otu_prev_ttt,MARGIN=1, FUN=max)
# filter otu par prevalence
physeq.subset
ps =  physeq.subset
df_prev = df_otu_prev_ttt
tmp_otu_F = rownames(df_prev[df_prev$max_prev >= 75,])
physeq.subset.75 <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
rm(ps,df_prev,tmp_otu_F)
physeq.subset.75  # 32 taxa
tmp_T3s <- physeq.subset.75
str(tmp_T3s)
#  treatment
a = tibble("sample"= tmp_T3s@sam_data$SampleID,
"treatment"= as.character(tmp_T3s@sam_data$Irrigation))
# force control as intercept
a[a == "Control"] <- "1a"
a = as.factor(a$treatment)
# offset
o = log(sample_sums(M04seq1)) # using unfiltered data
# random effect
z <- as.factor(tmp_T3s@sam_data$SampleID)
# model with pairwise comparison ---------------------------------------------------------------------------------
glmT3s.sum.global = data.frame()
glmT3s.pairwise.global = data.frame()
for (i in 1:length(taxa_names(tmp_T3s))) {
OTU = taxa_names(tmp_T3s)[i]
# response variable
y = as.vector(tmp_T3s@otu_table[OTU,]@.Data)
tryCatch({
### model
glmT3s <- glmmTMB(y ~ a + (1 | z), family='poisson',offset = o)
glmT3s.sum = summary(glmT3s)$coefficients
glmT3s.sum = tibble("OTU"= OTU,
"treatment"=rownames(glmT3s.sum),
as_tibble(glmT3s.sum$cond))
glmT3s.sum
glmT3s.sum.global = rbind(glmT3s.sum.global,glmT3s.sum)
### multiple comparison
glmT3s.pairwise = emmeans(glmT3s,pairwise~a)
# select p value
glmT3s.pairwise.sum = summary(glmT3s.pairwise)
glmT3s.pairwise.sum = glmT3s.pairwise.sum[["contrasts"]]
# extract summary
tmp_df = glmT3s.pairwise.sum
# keep only comparisons of interest
tmp = unlist(strsplit(as.character(tmp_df$contrast)," - "))
tmp_df[,"a"] <- tmp[seq(1,length(tmp),by=2)]
tmp_df[,"b"] <- tmp[seq(2,length(tmp),by=2)]
#tmp_df = tmp_df[grep("Ni",tmp_df$b), ]
tmp_df = cbind("OTU"=OTU,tmp_df)
# extract results in data frame
glmT3s.pairwise.global = rbind(glmT3s.pairwise.global,tmp_df)
},
error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
rm(OTU,y,glmT3s,glmT3s.sum)
}
glmT3s.model.global = glmT3s.sum.global
glmT3s.pairwise.global = glmT3s.pairwise.global
glmT3s.pairwise.global$p.adjust <- p.adjust(glmT3s.pairwise.global$p.value, method = "fdr")
View(glmT3s.pairwise.global)
sample_sums(M04seq1)
sample_sums(physeq.subset.75)
###############################################################################
# Filter low-abundant taxa
# keeping OTUs with at least 0.01 % relative abundance across all samples
physeq.subset <- M04seq1
physeq.subset
data.obs <- as.data.frame(otu_table(physeq.subset))
keep.taxa.id=which((rowSums(data.obs)/sum(data.obs))>0.0001)
data.F=data.obs[keep.taxa.id,,drop=FALSE]
new.otu <- as.matrix(data.F) # convert it into a matrix.
new.otu <- otu_table(data.F, taxa_are_rows = TRUE) # convert into phyloseq compatible file.
otu_table(physeq.subset) <- new.otu # incorporate into phyloseq Object
physeq.subset #
################################################################################
#Lets generate a prevalence table (number of samples each taxa occurs in) for each taxa.
prevalencedf = apply(X = otu_table(physeq.subset),
MARGIN = 1,
FUN = function(x){sum(x > 0)})
# Add taxonomy and total read counts to this data.frame
prevalencedf = data.frame(Prevalence = prevalencedf,
TotalAbundance = taxa_sums(physeq.subset))
prevalencedf[1:10,]
dim(prevalencedf)
# calculate prevalence
ps = physeq.subset
df_tmp <- psmelt(ps)
df_tmp$sample <- 0
df_tmp$sample[df_tmp$Abundance > 0] <- 1 #E: DON'T UNDERSTAND WHY THIS IS DONE
df_otu_prev_ttt <- data.frame(matrix(ncol=nlevels(as.factor(df_tmp$Irrigation)),
nrow=nlevels(as.factor(df_tmp$OTU)),
dimnames=list(levels(as.factor(df_tmp$OTU)),
levels(as.factor(df_tmp$Irrigation)))))
#attention il ya Sample et sample
for (i in unique(df_tmp$OTU)) {
for (j in unique(df_tmp$Irrigation)) {
df_otu_prev_ttt[i,j] <- sum(df_tmp$sample[df_tmp$OTU == i & df_tmp$Irrigation == j],na.rm = T) / nrow(df_tmp[df_tmp$OTU == i & df_tmp$Irrigation == j,]) *100
print(paste(i,j,df_otu_prev_ttt[i,j]),sep="\t")
#print(df_otu_prev_ttt[i,j])
}
}
df_otu_prev_ttt$max_prev <- apply(df_otu_prev_ttt,MARGIN=1, FUN=max)
# filter otu par prevalence
physeq.subset
ps =  physeq.subset
df_prev = df_otu_prev_ttt
tmp_otu_F = rownames(df_prev[df_prev$max_prev >= 75,])
physeq.subset.75 <- prune_taxa(taxa_names(ps) %in% tmp_otu_F, ps)
rm(ps,df_prev,tmp_otu_F)
physeq.subset.75  # 32 taxa
#setwd('D:/Fina/INRAE_Project/microservices/DAA/glmmTMB/')
#write.csv(glmT3s.pairwise.global, file = "AOB_K06.rh_070923.csv")
#aob.K06.rh.fil <- as.data.frame(otu_table(physeq.subset.75))
#write.csv(aob.K06.rh.fil, file = "AOB_K06.rh.tab_070923.csv")
##############################################################################################################################
setwd('D:/Fina/INRAE_Project/microservices/DAA/glmmTMB/AOB_BulkSoil/')
glmT3s.pairwise.global <- read.csv("AOB_K04_070923.csv")
glmT3s.pairwise.global <- glmT3s.pairwise.global[,-1]
glmT3s.pairwise.global$contrast <- paste("K_042822", glmT3s.pairwise.global$contrast, sep="_")
View(glmT3s.pairwise.global)
#setwd('D:/Fina/INRAE_Project/microservices/DAA/glmmTMB/')
#write.csv(glmT3s.pairwise.global, file = "AOB_K06.rh_070923.csv")
#aob.K06.rh.fil <- as.data.frame(otu_table(physeq.subset.75))
#write.csv(aob.K06.rh.fil, file = "AOB_K06.rh.tab_070923.csv")
##############################################################################################################################
setwd('D:/Fina/INRAE_Project/microservices/DAA/glmmTMB/AOB_BulkSoil/')
#setwd('D:/Fina/INRAE_Project/microservices/DAA/glmmTMB/')
#write.csv(glmT3s.pairwise.global, file = "AOB_K06.rh_070923.csv")
#aob.K06.rh.fil <- as.data.frame(otu_table(physeq.subset.75))
#write.csv(aob.K06.rh.fil, file = "AOB_K06.rh.tab_070923.csv")
##############################################################################################################################
setwd('D:/Fina/INRAE_Project/microservices/DAA/glmmTMB/AOB_BulkSoil_rare/')
glmT3s.pairwise.global <- read.csv("AOB_K04_070923.csv")
glmT3s.pairwise.global <- glmT3s.pairwise.global[,-1]
glmT3s.pairwise.global$contrast <- paste("K_042822", glmT3s.pairwise.global$contrast, sep="_")
setwd('D:/Fina/INRAE_Project/microservices/DAA/glmmTMB/AOB_BulkSoil_rare/')
AOB_M04 <- read.csv("AOB_M04_070923.csv")
AOB_D04 <- read.csv("AOB_D04_070923.csv")
AOB_K04 <- read.csv("AOB_K04_070923.csv")
AOB_M06 <- read.csv("AOB_M06_070923.csv")
AOB_D06 <- read.csv("AOB_D06_070923.csv")
AOB_K06 <- read.csv("AOB_K06_070923.csv")
AOB_M0705 <- read.csv("AOB_M0705_070923.csv")
AOB_D0705 <- read.csv("AOB_D0705_070923.csv")
AOB_K0705 <- read.csv("AOB_K0705_070923.csv")
AOB_M0720 <- read.csv("AOB_M0720_070923.csv")
AOB_D0720 <- read.csv("AOB_D0720_070923.csv")
AOB_K0720 <- read.csv("AOB_K0720_070923.csv")
AOB_M09 <- read.csv("AOB_M09_070923.csv")
AOB_D09 <- read.csv("AOB_D09_070923.csv")
AOB_K09 <- read.csv("AOB_K09_070923.csv")
setwd('D:/Fina/INRAE_Project/microservices/DAA/glmmTMB/AOB_BulkSoil_rare/')
AOB_M04 <- read.csv("AOB_M04_070923.csv")[,-1]
View(AOB_M04)
setwd('D:/Fina/INRAE_Project/microservices/DAA/glmmTMB/AOB_BulkSoil_rare/')
AOB_M04 <- read.csv("AOB_M04_070923.csv")[,-1]
AOB_D04 <- read.csv("AOB_D04_070923.csv")[,-1]
AOB_K04 <- read.csv("AOB_K04_070923.csv")[,-1]
AOB_M06 <- read.csv("AOB_M06_070923.csv")[,-1]
AOB_D06 <- read.csv("AOB_D06_070923.csv")[,-1]
AOB_K06 <- read.csv("AOB_K06_070923.csv")[,-1]
AOB_M0705 <- read.csv("AOB_M0705_070923.csv")[,-1]
AOB_D0705 <- read.csv("AOB_D0705_070923.csv")[,-1]
AOB_K0705 <- read.csv("AOB_K0705_070923.csv")[,-1]
AOB_M0720 <- read.csv("AOB_M0720_070923.csv")[,-1]
AOB_D0720 <- read.csv("AOB_D0720_070923.csv")[,-1]
AOB_K0720 <- read.csv("AOB_K0720_070923.csv")[,-1]
AOB_M09 <- read.csv("AOB_M09_070923.csv")[,-1]
AOB_D09 <- read.csv("AOB_D09_070923.csv")[,-1]
View(AOB_K09)
AOB_K09 <- read.csv("AOB_K09_070923.csv")[,-1]
View(AOB_K09)
View(AOB_K04)
AOB_K04$contrast <- paste("K_042822", AOB_K04$contrast, sep="_")
View(AOB_K04)
AOB_M04$contrast <- paste("M_042822", AOB_M04$contrast, sep="_")
AOB_D04$contrast <- paste("D_042822", AOB_D04$contrast, sep="_")
View(AOB_M04)
View(AOB_D04)
AOB_M06$contrast <- paste("M_060122", AOB_M06$contrast, sep="_")
AOB_D06$contrast <- paste("D_060122", AOB_D06$contrast, sep="_")
AOB_K06$contrast <- paste("K_060122", AOB_K06$contrast, sep="_")
View(AOB_K06)
AOB_M0705$contrast <- paste("M_070522", AOB_M0705$contrast, sep="_")
AOB_D0705$contrast <- paste("D_070522", AOB_D0705$contrast, sep="_")
AOB_K0705$contrast <- paste("K_070522", AOB_K0705$contrast, sep="_")
AOB_M0720$contrast <- paste("M_072022", AOB_M0720$contrast, sep="_")
AOB_D0720$contrast <- paste("D_072022", AOB_D0720$contrast, sep="_")
AOB_K0720$contrast <- paste("K_072022", AOB_K0720$contrast, sep="_")
AOB_M09$contrast <- paste("M_091322", AOB_M09$contrast, sep="_")
AOB_D09$contrast <- paste("D_091322", AOB_D09$contrast, sep="_")
AOB_K09$contrast <- paste("K_091322", AOB_K09$contrast, sep="_")
View(AOB_D09)
View(AOB_K09)
View(AOB_K06)
glmT3s.pairwise.global.ALL <- rbind(AOB_M04, AOB_D04, AOB_K04, AOB_M06, AOB_D06, AOB_K06,
AOB_M0705, AOB_D0705, AOB_K0705, AOB_M0720, AOB_D0720, AOB_K0720,
AOB_M09, AOB_D09, AOB_K09)
View(glmT3s.pairwise.global.ALL)
View(glmT3s.pairwise.global.ALL)
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
View(contrasts.glm.CBFP.T3s)
# numeric variable needs to be named "value"
colnames(contrasts.glm.CBFP.T3s) <- c("value", "OTU_names", "contrast")
View(contrasts.glm.CBFP.T3s)
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
View(contrasts.glm.CBFP.T3s)
rownames(contrasts.glm.CBFP.T3s) <- contrasts.glm.CBFP.T3s$contrast
contrasts.glm.CBFP.T3s$contrast <- NULL
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.05) >= 1]
dim(contrasts.glm.CBFP.T3s.sub)
head(contrasts.glm.CBFP.T3s.sub)
str(contrasts.glm.CBFP.T3s.sub)
ctrst.glm.CBFP.T3s.sub <- data.frame(t(contrasts.glm.CBFP.T3s.sub))
View(ctrst.glm.CBFP.T3s.sub)
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.05) >= 1]
View(glmT3s.pairwise.global.ALL)
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.05) >= 1]
contrasts.glm.CBFP.T3s.sub
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
# numeric variable needs to be named "value"
colnames(contrasts.glm.CBFP.T3s) <- c("value", "OTU_names", "contrast")
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
rownames(contrasts.glm.CBFP.T3s) <- contrasts.glm.CBFP.T3s$contrast
contrasts.glm.CBFP.T3s$contrast <- NULL
colSums(contrasts.glm.CBFP.T3s)
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.05) >= 1, na.rm=TRUE]
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.05, na.rm=TRUE) >= 1]
View(contrasts.glm.CBFP.T3s)
View(contrasts.glm.CBFP.T3s.sub)
View(contrasts.glm.CBFP.T3s)
colSums(contrasts.glm.CBFP.T3s, na.rm=TRUE)
contrasts.glm.CBFP.T3s<0.05
contrasts.glm.CBFP.T3s<0.05
contrasts.glm.CBFP.T3s<0.05, na.rm=T
colSums(contrasts.glm.CBFP.T3s<0.05)
colSums(contrasts.glm.CBFP.T3s<0.05, na.rm = T)
View(glmT3s.pairwise.global.ALL)
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
# numeric variable needs to be named "value"
colnames(contrasts.glm.CBFP.T3s) <- c("value", "OTU_names", "contrast")
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
rownames(contrasts.glm.CBFP.T3s) <- contrasts.glm.CBFP.T3s$contrast
contrasts.glm.CBFP.T3s$contrast <- NULL
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.055) >= 1]
View(contrasts.glm.CBFP.T3s.sub)
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.0555) >= 1]
dim(contrasts.glm.CBFP.T3s.sub)
head(contrasts.glm.CBFP.T3s.sub)
str(contrasts.glm.CBFP.T3s.sub)
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
# numeric variable needs to be named "value"
colnames(contrasts.glm.CBFP.T3s) <- c("value", "OTU_names", "contrast")
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
rownames(contrasts.glm.CBFP.T3s) <- contrasts.glm.CBFP.T3s$contrast
contrasts.glm.CBFP.T3s$contrast <- NULL
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.0555) >= 1]
5.156424e-02*1
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.06) >= 1]
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
# numeric variable needs to be named "value"
colnames(contrasts.glm.CBFP.T3s) <- c("value", "OTU_names", "contrast")
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
rownames(contrasts.glm.CBFP.T3s) <- contrasts.glm.CBFP.T3s$contrast
contrasts.glm.CBFP.T3s$contrast <- NULL
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.06, na.rm = T) >= 1]
dim(contrasts.glm.CBFP.T3s.sub)
head(contrasts.glm.CBFP.T3s.sub)
str(contrasts.glm.CBFP.T3s.sub)
ctrst.glm.CBFP.T3s.sub <- data.frame(t(contrasts.glm.CBFP.T3s.sub))
View(contrasts.glm.CBFP.T3s.sub)
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub >0.05] <- 1
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub !=1] <- 0
head(ctrst.glm.CBFP.T3s.sub)
colSums(ctrst.glm.CBFP.T3s.sub)
View(ctrst.glm.CBFP.T3s.sub)
ctrst.glm.CBFP.T3s.sub <- data.frame(t(contrasts.glm.CBFP.T3s.sub))
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub >0.06] <- 1
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub !=1] <- 0
head(ctrst.glm.CBFP.T3s.sub)
colSums(ctrst.glm.CBFP.T3s.sub)
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
# numeric variable needs to be named "value"
colnames(contrasts.glm.CBFP.T3s) <- c("value", "OTU_names", "contrast")
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
rownames(contrasts.glm.CBFP.T3s) <- contrasts.glm.CBFP.T3s$contrast
contrasts.glm.CBFP.T3s$contrast <- NULL
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.06) >= 1]
dim(contrasts.glm.CBFP.T3s.sub)
head(contrasts.glm.CBFP.T3s.sub)
str(contrasts.glm.CBFP.T3s.sub)
ctrst.glm.CBFP.T3s.sub <- data.frame(t(contrasts.glm.CBFP.T3s.sub))
# replace pvalues to 0 if non significant, or 1 if significant
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub >0.06] <- 2
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub <0.06] <- 1
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub >1] <- 0
head(ctrst.glm.CBFP.T3s.sub)
View(ctrst.glm.CBFP.T3s.sub)
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
# numeric variable needs to be named "value"
colnames(contrasts.glm.CBFP.T3s) <- c("value", "OTU_names", "contrast")
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
rownames(contrasts.glm.CBFP.T3s) <- contrasts.glm.CBFP.T3s$contrast
contrasts.glm.CBFP.T3s$contrast <- NULL
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.06) >= 1]
dim(contrasts.glm.CBFP.T3s.sub)
head(contrasts.glm.CBFP.T3s.sub)
str(contrasts.glm.CBFP.T3s.sub)
ctrst.glm.CBFP.T3s.sub <- data.frame(t(contrasts.glm.CBFP.T3s.sub))
# replace pvalues to 0 if non significant, or 1 if significant
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub =="NA"] <- 0
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub >0.06] <- 2
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub <0.06] <- 1
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub >1] <- 0
head(ctrst.glm.CBFP.T3s.sub)
ctrst.glm.CBFP.T3s.sub <- data.frame(t(contrasts.glm.CBFP.T3s.sub))
ctrst.glm.CBFP.T3s.sub =="NA"
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
# numeric variable needs to be named "value"
colnames(contrasts.glm.CBFP.T3s) <- c("value", "OTU_names", "contrast")
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
rownames(contrasts.glm.CBFP.T3s) <- contrasts.glm.CBFP.T3s$contrast
contrasts.glm.CBFP.T3s$contrast <- NULL
View(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s[contrasts.glm.CBFP.T3s == ''] <- NA
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
# numeric variable needs to be named "value"
colnames(contrasts.glm.CBFP.T3s) <- c("value", "OTU_names", "contrast")
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
rownames(contrasts.glm.CBFP.T3s) <- contrasts.glm.CBFP.T3s$contrast
contrasts.glm.CBFP.T3s$contrast <- NULL
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.06) >= 1]
dim(contrasts.glm.CBFP.T3s.sub)
head(contrasts.glm.CBFP.T3s.sub)
str(contrasts.glm.CBFP.T3s.sub)
ctrst.glm.CBFP.T3s.sub <- data.frame(t(contrasts.glm.CBFP.T3s.sub))
# replace pvalues to 0 if non significant, or 1 if significant
contrasts.glm.CBFP.T3s[is.na(contrasts.glm.CBFP.T3s)] <- 0
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
# numeric variable needs to be named "value"
colnames(contrasts.glm.CBFP.T3s) <- c("value", "OTU_names", "contrast")
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
rownames(contrasts.glm.CBFP.T3s) <- contrasts.glm.CBFP.T3s$contrast
contrasts.glm.CBFP.T3s$contrast <- NULL
View(contrasts.glm.CBFP.T3s)
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.06) >= 1]
dim(contrasts.glm.CBFP.T3s.sub)
head(contrasts.glm.CBFP.T3s.sub)
str(contrasts.glm.CBFP.T3s.sub)
ctrst.glm.CBFP.T3s.sub <- data.frame(t(contrasts.glm.CBFP.T3s.sub))
# replace pvalues to 0 if non significant, or 1 if significant
ctrst.glm.CBFP.T3s.sub[is.na(ctrst.glm.CBFP.T3s.sub)] <- 0
#ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub ==NA] <- 0
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub >0.06] <- 2
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub <0.06] <- 1
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub >1] <- 0
head(ctrst.glm.CBFP.T3s.sub)
# cast pvalues
contrasts.glm.CBFP.T3s <- glmT3s.pairwise.global.ALL[,c(10,1,2)]
# numeric variable needs to be named "value"
colnames(contrasts.glm.CBFP.T3s) <- c("value", "OTU_names", "contrast")
#contrasts.glm.CBFP.T3s <- subset(contrasts.glm.CBFP.T3s, (contrasts.glm.CBFP.T3s$OTU_names %in% BFPOTUs.T3snet.sig))
head(contrasts.glm.CBFP.T3s)
str(contrasts.glm.CBFP.T3s)
contrasts.glm.CBFP.T3s <- data.frame(cast(contrasts.glm.CBFP.T3s, contrast ~ OTU_names, value="value"))
str(contrasts.glm.CBFP.T3s)
rownames(contrasts.glm.CBFP.T3s) <- contrasts.glm.CBFP.T3s$contrast
contrasts.glm.CBFP.T3s$contrast <- NULL
# keep OTUs with at least one contrast <0.05
contrasts.glm.CBFP.T3s.sub <- contrasts.glm.CBFP.T3s[,colSums(contrasts.glm.CBFP.T3s<0.06) >= 1]
dim(contrasts.glm.CBFP.T3s.sub)
head(contrasts.glm.CBFP.T3s.sub)
str(contrasts.glm.CBFP.T3s.sub)
ctrst.glm.CBFP.T3s.sub <- data.frame(t(contrasts.glm.CBFP.T3s.sub))
# replace pvalues to 0 if non significant, or 1 if significant
#ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub ==NA] <- 0
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub >0.06] <- 2
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub <0.06] <- 1
ctrst.glm.CBFP.T3s.sub[ctrst.glm.CBFP.T3s.sub >1] <- 0
ctrst.glm.CBFP.T3s.sub[is.na(ctrst.glm.CBFP.T3s.sub)] <- 0
tax_table(aob.physeq_bulk1)
tax_table(aob.physeq_bulk1)==ASV_64
rownames(tax_table(aob.physeq_bulk1))
tax_table(aob.physeq_bulk1)[703]
tax_table(aob.physeq_bulk1)[730]
tax_table(aob.physeq_bulk1)[153]
tax_table(aob.physeq_bulk1)[287]
tax_table(aob.physeq_bulk1)[164]
tax_table(aob.physeq_bulk1)[181]
tax_table(aob.physeq_bulk1)[50]
tax_table(aob.physeq_bulk1)[731]
tax_table(aob.physeq_bulk1)[24]
tax_table(aob.physeq_bulk1)[274]
tax_table(aob.physeq_bulk1)[275]
tax_table(aob.physeq_bulk1)[285]
sample_data(aob.physeq_bulk1)
# Calculate the OTU avg per treatment
# CHECK THE OBJECT
meanotus<-phyloseq_average(aob.physeq_bulk1,avg_type="arithmetic",acomp_zero_impute = NULL,group="var3")
#BiocManager::install("phyloseq")
library(phyloseq)
# Calculate the OTU avg per treatment
# CHECK THE OBJECT
devtools::install_github("vmikk/metagMisc")
library(metagMisc)
meanotus<-phyloseq_average(aob.physeq_bulk1,avg_type="arithmetic",acomp_zero_impute = NULL,group="var3")
meanotus<-as.data.frame(otu_table(meanotus));meanotus
View(meanotus)
View(meanotus)
# same order for both meanotus and tmp_otu3s
meanotus<-meanotus[tmp_otu3s,]
View(meanotus)
